{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/drawer/Drawer.vue?d801","webpack:///./src/App.vue?8acc","webpack:///./src/store/index.ts","webpack:///./src/schema/data/esame_2005-06.ts","webpack:///./src/schema/data/esame_2005-07.ts","webpack:///./src/schema/data/esame_2006-06.ts","webpack:///./src/schema/data/esame_2011-06.ts","webpack:///./src/schema/data/esame_2011-07.ts","webpack:///./src/schema/data/esame_2011-09.ts","webpack:///./src/schema/data/esame_2016-01.ts","webpack:///./src/schema/data/esame_2016-02.ts","webpack:///./src/schema/data/esame_2017-06.ts","webpack:///./src/schema/data/esame_2017-07.ts","webpack:///./src/schema/data/esame_2018-06.ts","webpack:///./src/schema/data/esame_2018-07.ts","webpack:///./src/schema/data/esame_2018-09.ts","webpack:///./src/schema/data/esame_2019-01.ts","webpack:///./src/schema/data/esame_2019-02.ts","webpack:///./src/schema/data/esame_2019-06.ts","webpack:///./src/schema/data/esame_2019-07.ts","webpack:///./src/schema/data/esame_2019-09.ts","webpack:///./src/schema/data/esame_2020_01.ts","webpack:///./src/schema/data/esempio_1.ts","webpack:///./src/schema/data/esempio_2.ts","webpack:///./src/schema/data/esempio_3.ts","webpack:///./src/schema/data/exams.ts","webpack:///./src/utils/firebase.ts","webpack:///./src/utils/valutation.ts","webpack:///./src/locales sync [A-Za-z0-9-_,\\s]+\\.json$/","webpack:///./src/utils/auth.ts","webpack:///./src/schema/types/exam.interface.ts","webpack:///./src/components/content/Content.vue?e968","webpack:///./src/plugins/vuetify.ts","webpack:///./src/App.vue?87b1","webpack:///./src/components/toolbar/Toolbar.vue?f11c","webpack:///./src/components/toolbar/state-bar/StateBar.vue?16d3","webpack:///./src/components/toolbar/state-bar/StateBar.vue","webpack:///./src/components/toolbar/state-bar/StateBar.vue?f4ef","webpack:///./src/components/toolbar/state-bar/StateBar.vue?2ed4","webpack:///./src/components/toolbar/Toolbar.vue?14fb","webpack:///./src/components/toolbar/Toolbar.vue?adf0","webpack:///./src/components/toolbar/Toolbar.vue?f439","webpack:///./src/components/drawer/Drawer.vue?94eb","webpack:///./src/components/drawer/Drawer.vue?d5b3","webpack:///./src/components/drawer/Drawer.vue?05b7","webpack:///./src/components/drawer/Drawer.vue?1765","webpack:///./src/components/content/Content.vue?f423","webpack:///./src/components/content/Content.vue","webpack:///./src/components/content/Content.vue?4b18","webpack:///./src/components/content/Content.vue?2c68","webpack:///./src/components/footer/Footer.vue?e2b2","webpack:///./src/components/footer/Footer.vue","webpack:///./src/components/footer/Footer.vue?0354","webpack:///./src/components/footer/Footer.vue?42f6","webpack:///./src/App.vue?1abc","webpack:///./src/App.vue?31c5","webpack:///./src/App.vue?68bd","webpack:///./src/router/index.ts","webpack:///./src/utils/cloud-messaging.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/i18n.ts","webpack:///./src/main.ts","webpack:///./src/components/toolbar/Toolbar.vue?af9c","webpack:///./src/App.vue?d05a","webpack:///./src/components/footer/Footer.vue?320a"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","TestStatus","EXAM","id","exercises","solution","row","cause","question","EXAMS","use","store","Store","state","user","drawer","footer","title","stateBar","visibility","color","test","timer","time","duration","paused","valutation","points","trueOrFalse","score","interval","exam","exercise","answers","showScore","status","NONE","fausto","exams","getters","loggedIn","showDrawer","timeTitle","min","Math","floor","sec","scoreTitle","total","totalScore","currentExam","currentExercise","currentAnswer","currentValutation","_state","exercisesAmount","isTrueOrFalseExercise","outcome","scoreProgress","toolbarTitle","IN_PROGRESS","FINISHED","timeProgress","timeFinished","inProgress","finished","reduce","acc","mutations","setUser","setTitle","setFooter","setDrawer","setStateBarVisibility","setStateBarColor","setStateBarValue","setTestStatus","setTime","setPaused","setCurrentExam","setCurrentExercise","setAnswers","setTrueOrFalseAnswer","index","val","setCodeAnswer","setShowScore","setScore","setInterval","actions","commit","dispatch","showFooter","hideFooter","hideDrawer","toggleDrawer","showStateBar","hideStateBar","resetStateBarValue","resetTime","incrementTime","pauseTimer","playTimer","createAnswers","map","output","_","setCurrentExamFromId","examId","findIndex","answer","showSolutions","back","next","resetScore","clearInterval","updateStateBarOnTime","perc","updateStateBarOnScore","INDECENTE","PESSIMO","BOCCIATO","PROMOSSO","GRANDE","updateStateBar","startTimer","correctExam","refreshExam","startExam","finishExam","stopExam","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","Valutation","Outcome","correctTrueOrFalseQuestion","correctTrueOrFalse","forEach","ans","correctCodeError","correctCodeOutput","indexOf","correctCode","isCodeExerciseCorrect","EMPTY","RIGHT","PARTIAL","WRONG","correctExercise","correctQuestion","percentual","webpackContext","req","webpackContextResolve","keys","auth","FireAuth","app","_user","this","onUserChanged","email","password","isLoggedIn","signInWithEmailAndPassword","signOut","onAuthStateChanged","init","instanceOfOutputSolution","Array","isArray","every","el","instanceOfErrorSolution","supposed","instanceOfCodeExercise","instanceOfTrueOrFalseExercise","iconfont","_vm","_h","$createElement","_c","_self","staticRenderFns","staticClass","attrs","heightStateBar","scopedSlots","_u","fn","proxy","on","$event","_e","_v","_s","logout","snackbar","model","callback","$$v","$set","expression","show","$t","height","$store","Number","required","component","VFlex","VProgressLinear","$root","$i18n","catch","log","components","AppStateBar","VBtn","VIcon","VSnackbar","VSpacer","VToolbar","VToolbarSideIcon","VToolbarTitle","_l","item","heading","text","icon","child","class","selected","$router","link","VLayout","VList","VListGroup","VListTile","VListTileAction","VListTileContent","VListTileTitle","VNavigationDrawer","VSubheader","_t","VContainer","VContent","isPhone","phoneSpace","$vuetify","breakpoint","VFooter","newValue","immediate","AppToolbar","AppDrawer","AppContent","AppFooter","VApp","Exam","Home","Login","NotFound","base","routes","path","props","route","params","url","messaging","firebase","usePublicVapidKey","requestPermission","debug","getToken","token","a","post","requestResult","onMessage","initCloudMessaging","ready","registered","cached","updatefound","updated","offline","loadLocaleMessages","locales","messages","matched","match","locale","navigator","language","split","fallbackLocale","router","i18n","render","h","$mount"],"mappings":"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","file":"js/app-legacy.3194a724.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \"-legacy.\" + {\"chunk-0c7f4c4c\":\"39ea2def\",\"chunk-2d0c4c61\":\"b142626a\",\"chunk-44f12f82\":\"f679cf07\",\"chunk-2d0e5e97\":\"695cb0b7\",\"chunk-3dc2ba00\":\"803e76fb\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0c7f4c4c\":1,\"chunk-44f12f82\":1,\"chunk-3dc2ba00\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0c7f4c4c\":\"32b84eb6\",\"chunk-2d0c4c61\":\"31d6cfe0\",\"chunk-44f12f82\":\"5faac51c\",\"chunk-2d0e5e97\":\"31d6cfe0\",\"chunk-3dc2ba00\":\"87fda8d1\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport EXAMS from '@/schema/data/exams';\nimport { Exam, instanceOfCodeExercise, instanceOfTrueOrFalseExercise, Exercise, TrueOrFalseExercise } from '@/schema/types/exam.interface';\nimport { FormAnswer } from '@/schema/types/answer.interface';\nimport { init as initAuth, User } from '@/utils/auth';\nimport { correctExam, correctExercise, outcome, Outcome } from '@/utils/valutation';\n\nVue.use(Vuex);\n\nexport enum TestStatus {\n  NONE,\n  IN_PROGRESS,\n  FINISHED\n}\n\ninterface StoreStatus {\n  user: null | User;\n  drawer: boolean;\n  footer: boolean;\n  title: string;\n  stateBar: {\n    visibility: boolean;\n    value: number;\n    color: string;\n  };\n  test: {\n    timer: {\n      time: number;\n      duration: number;\n      paused: boolean;\n    };\n    valutation: {\n      points: {\n        code: number;\n        trueOrFalse: number;\n      };\n      score: number;\n    };\n    interval: number | null;\n    exam: number;\n    exercise: number;\n    answers: FormAnswer[];\n    showScore: boolean;\n    status: TestStatus;\n    fausto: boolean;\n  };\n  exams: Exam[];\n}\n\nconst store = new Vuex.Store<StoreStatus>({\n  state: {\n    user: null,\n    drawer: false,\n    footer: true,\n    title: 'UNITN TRONCHET',\n    stateBar: {\n      visibility: false,\n      value: 0,\n      color: 'accent'\n    },\n    test: {\n      timer: {\n        time: 0,\n        duration: 40 * 60,\n        paused: false\n      },\n      valutation: {\n        points: {\n          code: 1,\n          trueOrFalse: 0.25\n        },\n        score: 0\n      },\n      interval: 0,\n      exam: -1,\n      exercise: 0,\n      answers: [],\n      showScore: false,\n      status: TestStatus.NONE,\n      fausto: false\n    },\n    exams: EXAMS\n  },\n  getters: {\n    loggedIn: state => state.user !== null,\n    showDrawer: (state, getters) => getters.loggedIn && state.drawer,\n    timeTitle: state => {\n      const min = Math.floor(state.test.timer.time / 60);\n      const sec = state.test.timer.time % 60;\n      return `${min} : ${sec}`;\n    },\n    scoreTitle: (state, getters) => {\n      const score = state.test.valutation.score;\n      const total = getters.totalScore;\n      return `${score} / ${total}`;\n    },\n    currentExam: state => state.exams[state.test.exam],\n    currentExercise: (state, getters) => getters.currentExam.exercises[state.test.exercise],\n    currentAnswer: state => state.test.answers[state.test.exercise],\n    currentValutation: (_state, getters) => correctExercise(getters.currentAnswer, getters.currentExercise),\n    exercisesAmount: (_state, getters) => getters.currentExam.exercises.length,\n    isTrueOrFalseExercise: (_state, getters) => instanceOfTrueOrFalseExercise(getters.currentExercise),\n    points: state => state.test.valutation.points,\n    outcome: (_state, getters) => outcome(getters.scoreProgress),\n    toolbarTitle: (state, getters) => {\n      switch (state.test.status) {\n        case TestStatus.NONE:\n          return state.title;\n        case TestStatus.IN_PROGRESS:\n          return getters.timeTitle;\n        case TestStatus.FINISHED:\n          return getters.scoreTitle;\n      }\n    },\n    timeProgress: state => Math.floor((state.test.timer.time / state.test.timer.duration) * 100),\n    scoreProgress: (state, getters) => Math.floor((state.test.valutation.score / getters.totalScore) * 100),\n    timeFinished: state => state.test.timer.time === state.test.timer.duration,\n    inProgress: state => state.test.status === TestStatus.IN_PROGRESS,\n    finished: state => state.test.status === TestStatus.FINISHED,\n    totalScore: (_state, getters) => {\n      return getters.currentExam.exercises.reduce((acc: number, exercise: Exercise) => acc + (instanceOfCodeExercise(exercise) ? getters.points.code : (exercise as TrueOrFalseExercise).length * getters.points.trueOrFalse), 0);\n    }\n  },\n  mutations: {\n    // User\n    setUser: (state, user) => {\n      state.user = user;\n    },\n    // Toolbar\n    setTitle: (state, title) => {\n      state.title = title;\n    },\n    // Footer\n    setFooter: (state, value) => {\n      state.footer = value;\n    },\n    // Drawer\n    setDrawer: (state, value) => {\n      state.drawer = value;\n    },\n    // State Bar\n    setStateBarVisibility: (state, value) => {\n      state.stateBar.visibility = value;\n    },\n    setStateBarColor: (state, value) => {\n      state.stateBar.color = value;\n    },\n    setStateBarValue: (state, value) => {\n      state.stateBar.value = value;\n    },\n    // Test Status\n    setTestStatus: (state, value) => {\n      state.test.status = value;\n    },\n    // Time\n    setTime: (state, value) => {\n      state.test.timer.time = value;\n    },\n    setPaused: (state, value) => {\n      state.test.timer.paused = value;\n    },\n    // Exam\n    setCurrentExam: (state, value) => {\n      state.test.exam = value;\n      // Italian Easter Egg\n      if (value === 0) {\n        state.test.fausto = true;\n      }\n      else {\n        state.test.fausto = false;\n      }\n    },\n    setCurrentExercise: (state, value) => {\n      state.test.exercise = value;\n    },\n    setAnswers: (state, value) => {\n      state.test.answers = value;\n    },\n    setTrueOrFalseAnswer: (state, value) => {\n      const { index, value: val } = value;\n      state.test.answers[state.test.exercise].trueOrFalse.splice(index, 1, val);\n    },\n    setCodeAnswer: (state, value) => {\n      state.test.answers.splice(state.test.exercise, 1, value);\n    },\n    setShowScore: (state, value) => {\n      state.test.showScore = value;\n    },\n    // Score\n    setScore: (state, value) => {\n      state.test.valutation.score = value;\n    },\n    // Interval\n    setInterval: (state, value) => {\n      state.test.interval = value;\n    }\n  },\n  actions: {\n    // User\n    setUser: ({ commit, dispatch }, user) => {\n      commit('setUser', user);\n      if (!user) {\n        dispatch('stopExam');\n      }\n    },\n    // Toolbar\n    setTitle: ({ commit }, title: string) => {\n      commit('setTitle', title);\n    },\n    // Footer\n    showFooter: ({ commit }) => {\n      commit('setFooter', true);\n    },\n    hideFooter: ({ commit }) => {\n      commit('setFooter', false);\n    },\n    // Drawer\n    showDrawer: ({ commit }) => {\n      commit('setDrawer', true);\n    },\n    hideDrawer: ({ commit }) => {\n      commit('setDrawer', false);\n    },\n    toggleDrawer: ({ state, commit }) => {\n      commit('setDrawer', !state.drawer);\n    },\n    // State Bar\n    showStateBar: ({ commit }) => {\n      commit('setStateBarVisibility', true);\n    },\n    hideStateBar: ({ commit }) => {\n      commit('setStateBarVisibility', false);\n    },\n    setStateBarColor: ({ commit }, color: string) => {\n      commit('setStateBarColor', color);\n    },\n    setStateBarValue: ({ commit }, value: number) => {\n      commit('setStateBarValue', value);\n    },\n    resetStateBarValue: ({ commit }) => {\n      commit('setStateBarValue', 0);\n    },\n    // Timer\n    resetTime: ({ commit, dispatch }) => {\n      commit('setTime', 0);\n      dispatch('updateStateBar');\n    },\n    incrementTime: ({ state, getters, commit, dispatch }) => {\n      commit('setTime', state.test.timer.time + 1);\n      dispatch('updateStateBar');\n      if (getters.timeFinished) {\n        dispatch('finishExam');\n      }\n    },\n    pauseTimer: ({ commit }) => {\n      commit('setPaused', true);\n    },\n    playTimer: ({ commit }) => {\n      commit('setPaused', false);\n    },\n    // Exam\n    createAnswers: ({ getters, commit }) => {\n      const exercises = (getters.currentExam as Exam).exercises;\n      const answers = exercises.map(exercise => ({\n        type: instanceOfTrueOrFalseExercise(exercise) ? 'TRUE_OR_FALSE' : '',\n        output: '',\n        row: 0,\n        cause: '',\n        trueOrFalse: instanceOfTrueOrFalseExercise(exercise) ? exercise.map(_ => null) : []\n      }) as FormAnswer);\n      commit('setAnswers', answers);\n    },\n    setCurrentExam: ({ commit, dispatch }, index: number) => {\n      commit('setCurrentExam', index);\n      if (index !== -1) {\n        dispatch('createAnswers');\n      }\n    },\n    setCurrentExamFromId: ({ state, dispatch }, examId: string) => {\n      const exam = state.exams.findIndex(e => e.id === examId);\n      dispatch('setCurrentExam', exam);\n    },\n    setCurrentExercise: ({ commit }, exercise: number) => {\n      commit('setCurrentExercise', exercise);\n    },\n    setTrueOrFalseAnswer: ({ commit }, answer) => {\n      commit('setTrueOrFalseAnswer', answer);\n    },\n    setCodeAnswer: ({ commit }, answer) => {\n      commit('setCodeAnswer', answer);\n    },\n    showScore: ({ commit }) => {\n      commit('setShowScore', true);\n    },\n    showSolutions: ({ commit }) => {\n      commit('setShowScore', false);\n    },\n    back: ({ state, commit }) => {\n      commit('setCurrentExercise', state.test.exercise - 1);\n    },\n    next: ({ state, commit }) => {\n      commit('setCurrentExercise', state.test.exercise + 1);\n    },\n    // Score\n    resetScore: ({ commit }) => {\n      commit('setScore', 0);\n    },\n    setScore: ({ commit }, score: number) => {\n      commit('setScore', score);\n    },\n    // Interval\n    setInterval: ({ state, commit }, interval: number) => {\n      if (state.test.interval) {\n        clearInterval(state.test.interval);\n      }\n      commit('setInterval', interval);\n    },\n    clearInterval: ({ state, commit }) => {\n      if (state.test.interval) {\n        clearInterval(state.test.interval);\n      }\n      commit('setInterval', null);\n    },\n    // Update State Bar\n    updateStateBarOnTime: ({ state, dispatch }) => {\n      const perc = (state.test.timer.time / state.test.timer.duration) * 100;\n      dispatch('setStateBarValue', perc);\n      switch (perc) {\n        case 0:\n          dispatch('setStateBarColor', 'success');\n          break;\n        case 15:\n          dispatch('setStateBarColor', 'accent');\n          break;\n        case 75:\n          dispatch('setStateBarColor', 'warning');\n          break;\n        case 95:\n          dispatch('setStateBarColor', 'error');\n          break;\n      }\n    },\n    updateStateBarOnScore: ({ state, getters, dispatch }) => {\n      const perc = (state.test.valutation.score / getters.totalScore) * 100;\n      dispatch('setStateBarValue', perc);\n      switch (getters.outcome) {\n        case Outcome.INDECENTE:\n        case Outcome.PESSIMO:\n          dispatch('setStateBarColor', 'error');\n          break;\n        case Outcome.BOCCIATO:\n          dispatch('setStateBarColor', 'warning');\n          break;\n        case Outcome.PROMOSSO:\n          dispatch('setStateBarColor', 'accent');\n          break;\n        case Outcome.GRANDE:\n          dispatch('setStateBarColor', 'success');\n          break;\n      }\n    },\n    // Application\n    updateStateBar: ({ getters, dispatch }) => {\n      if (getters.inProgress) {\n        dispatch('updateStateBarOnTime');\n      }\n      else if (getters.finished) {\n        dispatch('updateStateBarOnScore');\n      }\n    },\n    startTimer: ({ state, dispatch }) => {\n      dispatch('resetTime');\n      dispatch('playTimer');\n      dispatch('updateStateBar');\n      const interval = setInterval(() => {\n        if (!state.test.timer.paused) {\n          dispatch('incrementTime');\n        }\n      }, 1000);\n      dispatch('setInterval', interval);\n    },\n    correctExam: ({ state, getters, dispatch }) => {\n      const answers = state.test.answers;\n      const exercises: Exercise[] = getters.currentExam.exercises;\n      const points = getters.points;\n      const score = correctExam(answers, exercises, points);\n      dispatch('setScore', score);\n    },\n    refreshExam: ({ getters, dispatch }) => {\n      dispatch('startExam', getters.currentExam.id);\n    },\n    startExam: ({ commit, dispatch }, exam: string) => {\n      dispatch('resetScore');\n      dispatch('setCurrentExamFromId', exam);\n      dispatch('setCurrentExercise', 0);\n      dispatch('resetStateBarValue');\n      dispatch('showStateBar');\n      commit('setTestStatus', TestStatus.IN_PROGRESS);\n      dispatch('startTimer');\n    },\n    finishExam: ({ commit, dispatch }) => {\n      commit('setTestStatus', TestStatus.FINISHED);\n      dispatch('clearInterval');\n      dispatch('correctExam');\n      dispatch('updateStateBar');\n      dispatch('showScore');\n    },\n    stopExam: ({ commit, dispatch }) => {\n      commit('setTestStatus', TestStatus.NONE);\n      dispatch('setCurrentExam', -1);\n      dispatch('hideStateBar');\n      dispatch('clearInterval');\n    }\n  }\n});\n\ninitAuth(store);\n\nexport default store;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2005',\n    id: 'esame_2005-06',\n    exercises: [\n        {\n            code: `public class DemoAssert {\n    int x=5;\n    public void stampaInteroPositivo(int i) {\n        assert i >= 0 : stampaErroreAssert();\n        System.out.println(i);\n    }\n    public int stampaErroreAssert() {\n        System.out.println(\"XX\");\n        return -1;\n    }\n    public static void main(String args[]) {\n        int x=-10;\n        DemoAssert test = new DemoAssert();\n        test.stampaInteroPositivo(x);\n    }\n}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 4,\n                cause: 'x = -10, quindi l\\'assert lancia un errore'\n            }\n        },\n        {\n            code: `class DemoAssert {\n    int x=5;\n    public void stampaInteroPositivo(int i) {\n        assert i >= 0 : stampaErroreAssert();\n        System.out.println(i);\n    }\n    public int stampaErroreAssert() {\n        System.out.println(\"XX\");\n        return -1;\n    }\n    public static void main(String args[]) {\n        x=10;\n        DemoAssert test = new DemoAssert();\n        test.stampaInteroPositivo(x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 12,\n                cause: 'Le variabili d\\'istanza non possono essere usate da metodi statici'\n            }\n        },\n        {\n            code: `package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=1;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n        }\n}\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'x ha visibilità package e non può essere vista nel package abcd.'\n            }\n        },\n        {\n            code: `#include <iostream.h>\nvoid rimescola(int& k, int m, int* n) {\n    k = m; m = *n; *n = k; n[-1] = k;\n}\nint main(){\n    int vet[] = {5,4,3,2,1};\n    rimescola(vet[0],vet[2],vet+4);\n    for (int i=0;i<5;i++) cout<<vet[i];\n    return 0;\n}`,\n            solution: ['34333']\n        },\n        {\n            code: `package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z=null;\n        try {\n            z = Class.forName(\"uno.B\").newInstance();\n        } catch (Exception ex) { ex.printStackTrace();}\n            if (z instanceof uno.A) ((A) z).f(1);\n            if (z instanceof uno.B) ((B) z).f(2);\n        }\n}\nclass B extends A{\n        void f(int k) {\n        System.out.print(k);\n    }\n}`,\n            solution: ['12']\n        },\n        {\n            code: `public class A {\n    public A() {System.out.print(\"1\");}\n    public void finalize(){System.out.print(\"3\");}\n    public static void main(String Args[]){\n        A x;\n        A z=new A();\n        A y=z;\n        z=null;\n        System.gc();\n        System.out.print(\"5\");\n        y=null;\n        System.gc();\n    }\n}`,\n            solution: ['153']\n        },\n        {\n            code: `package uno;\npublic class A {\n    int x=10;\n    A(){int x=12; new B();}\n    public static void main(String args[]){\n        int x=11;\n        new A();\n    }\n    class B{\n        B() {System.out.println(x);}\n    }\n}`,\n            solution: ['10']\n        },\n        [\n            {\n                question: 'Container eredita da Component',\n                solution: true\n            },\n            {\n                question: 'Component è figlia di Container',\n                solution: false\n            },\n            {\n                question: 'JComponent è figlia di Component',\n                solution: false\n            }\n        ],\n        [\n            {\n                question: 'Java non usa lo stack ma solo la heap',\n                solution: false\n            },\n            {\n                question: 'Java usa lo stack solo per le variabili statiche',\n                solution: false\n            },\n            {\n                question: 'Java non usa la heap ma solo lo stack',\n                solution: false\n            }\n        ],\n        [\n            {\n                question: 'Quando si scrive la clone si deve anche scrivere anche la equals',\n                solution: false\n            },\n            {\n                question: 'Quando si scrive la equals si deve anche scrivere anche la clone',\n                solution: false\n            },\n            {\n                question: 'Per le classi che non hanno una struttura profonda non serve scrivere la equals',\n                solution: false\n            }\n        ],\n    ]\n};\n\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 07/2005',\n    id: 'esame_2005-07',\n    exercises: [\n        {\n            code: `package uno;\nimport java.util.*;\npublic class A{\n    A(){\n        Collection l = new LinkedList();\n        Collection s = new HashSet();\n        for (int i = 0; i < 12; i++)\n            if (i % 2 == 0)\n                l.add(new Integer(i%3));\n        s.addAll(l);\n        System.out.println(l.size()+\" \"+s.size());\n    }\n    public static void main (String args[]){\n        new A();\n    }\n}`,\n            solution: ['6 3']\n        },\n        {\n            code: `package uno;\nclass B extends C {\n    void x() {System.out.println(\"X\");}\n}\nclass C {\n    void x() {System.out.println(\"Y\");}\n}\npublic class A{\n    A() {\n    C x=new B();\n    x.x();\n    }\n    public static void main (String args[]){\n        new A();\n    }\n}`,\n            solution: ['X']\n        },\n        {\n            code: `package uno;\nclass B {\n    int x=3;\n    B(int x) {this.x=x;}\n}\npublic class A {\n    void f() {\n        try {\n            B b1 = new B(5);\n            B b2 = (B) b1.clone();\n            b2.x++;\n            System.out.println(b1.x + \" \" + b2.x);\n        } catch (Exception e) {e.printStackTrace();}\n    }\n    public static void main(String string[]) {\n        A a=new A();\n        a.f();\n}}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 10,\n                cause: 'Clone è protected in quanto non ne è stato fatto l\\'overriding'\n            }\n        },\n        {\n            code: `#include <iostream.h>\nint x=4;\nint f(int * x) {\n    x++;\n    return (--(*x));\n}\nvoid g(int & y) {\n    --y;\n}\nint main(){\n    int y[]={3,2,1};\n    cout << f(&y[1]);\n    g(x);\n    cout << x << *y << y[1] << *(y+2);\n}`,\n            solution: ['03320']\n        },\n        {\n            code: `package uno;\nclass B {\n    int x=4;\n    B(int x) {this.x=x;}\n}\npublic class A {\n    A() {\n        B b1=new B(3);\n        B b2=new B(3);\n        System.out.println(b1.equals(b2));\n    }\n    public static void main(String Args[]) {\n        new A();\n    }\n}`,\n            solution: ['false']\n        },\n        {\n            code: `package uno;\npublic class A{\n    static int f(int x) {x++; return x-1;}\n    private int g(int x) {x--; return x+1;}\n    public static void main(String String[]) {\n        int z=3;\n        System.out.println(f(z));\n        System.out.println(g(z));\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 8,\n                cause: 'I metodi statici non possono chiamare metodi di istanza'\n            }\n        },\n        {\n            code: `package uno;\npublic class A {\n    C c=null;\n    public A() {\n        System.out.print(\"+10\");\n        C c1=new C();\n        c=new C();\n    }\n    public static void main(String[] args) {\n        A a = new A();\n        System.gc();\n        new C();\n        a = null;\n        System.gc();\n    }\n}\nclass C {\n    static int count=0;\n    String name=null;\n    public C() {\n        name=\"2\"+(++count);\n        System.out.print(\"+\"+name);\n    }\n    protected void finalize() {\n        System.out.print(\"-\"+name);\n    }\n}`,\n            solution: [\n                '+10+21+22-21+23-22-23',\n                '+10+21+22-21+23-23-22',\n                '+10+21+22+23-21-22-23',\n                '+10+21+22+23-21-23-22',\n                '+10+21+22+23-22-21-23',\n                '+10+21+22+23-22-23-21',\n                '+10+21+22+23-23-21-22',\n                '+10+21+22+23-23-22-21'\n            ]\n        },\n        [\n            {\n                question: 'Se A è padre di B la scrittura A a=new B(); genera errore a runtime',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=new A(); genera errore a runtime',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=new A(); genera errore a compiletime',\n                solution: true\n            },\n            {\n                question: 'Se A è padre di B la scrittura A a=new B(); genera errore a compiletime',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura A a=(A)(new B()); genera errore a runtime',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime',\n                solution: false\n            },\n            {\n                question: 'JButton ha il metodo equals()',\n                solution: true\n            },\n            {\n                question: 'JButton ha il metodo clone()',\n                solution: true\n            },\n            {\n                question: 'new JButton().clone(); genera errore a compile time anche se i package necessari sono inclusi',\n                solution: true\n            },\n            {\n                question: 'new JButton().clone(); genera errore a runtime',\n                solution: false\n            }\n        ],\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2006',\n    id: 'esame_2006-06',\n    exercises: [\n        {\n            code: `import java.util.*;\nclass A {\n    private static A a;\n    private static int instancecount=0;\n    private A() {instancecount++;}\n    static A getInstance() {if (a==null) a=new A(); return a;}\n    void printCount(){System.out.println(instancecount);}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        Collection s = new LinkedList();\n        for (int i = 1; i < 4; i++) s.add(A.getInstance());\n        Iterator i = s.iterator();\n        while (i.hasNext()) ( (A) i.next()).printCount();\n    }\n}`,\n            solution: ['1\\\\n1\\\\n1\\\\n']\n        },\n        {\n            code: `import java.util.*;\nclass A {\n    private static A a;\n    private static int instancecount=0;\n    private A() {instancecount++;}\n    static A getInstance() {\n        if (a==null) a=new A();\n        return a;\n    }\n    void printCount(){System.out.println(instancecount);}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        Collection s = new HashSet();\n        for (int i = 1; i < 4; i++) s.add(new A());\n        Iterator i = s.iterator();\n        while (i.hasNext()) ( (A) i.next()).printCount();\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 15,\n                cause: 'Il costruttore di A è privato'\n            }\n        },\n        {\n            code: `package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=1;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n    }\n}\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'x ha visibilità package ed appartiene ad un altro package'\n            }\n        },\n        {\n            code: `#include <iostream.h>\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++; }\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nint main(){\n    char x[2];\n    int y;\n    x[0]='B'; x[1]='C'; y=0;\n    f(x,&y);\n    g(x,y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0; }`,\n            solution: ['A D 1']\n        },\n        {\n            code: `package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.A) ((A) z).f(1);\n        if (z instanceof uno.B) ((B) z).f(2);\n    }\n}\nclass B extends A{\n    void f(int k) {\n        System.out.print(k);\n    }\n}`,\n            solution: ['12']\n        },\n        {\n            code: `class A {\n    A(int x) {System.out.print(\"X\");}\n    A() {System.out.print(\"Y\");}\n    public void finalize() {System.out.print(\"Z\");}\n}\nclass B extends A {\n    B(int x) {System.out.print(\"A\");}\n    B() {System.out.print(\"B\");}\n    public void finalize() {System.out.print(\"C\");}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}`,\n            solution: ['YAC']\n        },\n        {\n            code: `package uno;\npublic class A {\n    int x=10;\n    A(){int x=12; new B();}\n    public static void main(String args[]){\n        int x=11;\n        new A();\n    }\n    class B{\n        B() {System.out.println(x);}\n    }\n}`,\n            solution: ['10']\n        },\n        {\n            code: `class A {\nint x = 3;\nclass B {\n    int x = 4;\n    B(int x) { System.out.print(x); }\n}\nA(int x) { new B(x); System.out.print(x); }\nA(int y) { new B(y); System.out.print(y-4); }\nA() { new B(x); System.out.print(x); }\npublic static void main(String s[]) {\n    A a=new A(3); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 8,\n                cause: 'Esiste già un altro metodo con firma uguale'\n            }\n        },\n        [\n            {\n                question: 'Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.',\n                solution: false\n            },\n            {\n                question: 'Il garbage collector di Java sospende l’esecuzione del programma finchè non ha finito di liberare la memoria.',\n                solution: false\n            },\n            {\n                question: 'Un costruttore non può mai essere protected.',\n                solution: false\n            },\n            {\n                question: 'Di default l’operatore = = e il metodo equals fanno la stessa cosa.',\n                solution: true\n            },\n            {\n                question: 'Un oggetto ed un suo clone sono identici.',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=new A(); genera errore a compiletime.',\n                solution: true\n            },\n            {\n                question: 'Se A è padre di B la scrittura A a=(A)(new B()); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.',\n                solution: false\n            }\n        ],\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2011',\n    id: 'esame_2011-06',\n    exercises: [\n        {\n            code: `public class E {\nstatic int s=0;\nE(int i) {s=i;}\npublic static void main(String[] args) {\n    E b1=new E(3);\n    E b2=new E(3);\n    E b3=new E(1);\n    if (b1.equals(b2)) System.out.print(\"K\");\n        else System.out.print(\"I\");\n    if (b1.s==b3.s) System.out.print(\"A\");\n        else System.out.print(\"D\");\n}   }`,\n            solution: ['IA']\n        },\n        {\n            code: `#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y) ++;\n    x[*y]++;    }\nint main(){\n    char x[2];\n    int y;\n    x[0]='R'; x[1]='R'; y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }`,\n            solution: ['Q S 1']\n        },\n        {\n            code: `public class G implements Cloneable{\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        copia.k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b= new G();\n        G c=b.clone();\n        G d=new G();\n        if (b.equals(c)) System.out.print(\"A\");\n        if (c.equals(d)) System.out.print(\"B\");\n        if (d.equals(b)) System.out.print(\"C\");\n}}`,\n            solution: ['C']\n        },\n        {\n            code: `import java.util.*;\npublic class A {\n    A(int m) {\n        Collection<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }\n}`,\n            solution: ['A0A1A2']\n        },\n        {\n            code: `import java.util.*;\npublic class B {\n    B() {\n        Collection b = new Collection();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) {\n        new B(); new B();\n    }\n    public static void main(String a) {\n        new B();\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'Collection è abstract e non si può istanziarla'\n            }\n        },\n        {\n            code: `public class C{\npublic static int x;\nC(int s) {x=s;}\nvoid f() {System.out.print(x);}\npublic static void main(String a[]){\n    C b=new C(3);\n    C c=new C(5);\n    b.f();\n    c.f();\n}   }`,\n            solution: ['55']\n        },\n        {\n            code: `public class F{\nint x=2;\nF(int x) {\n    f(x);\n    f();\n    System.out.println(x);\n}\nvoid f() { x++; System.out.print(x);}\nvoid f(int x) { this.x++; x--;System.out.print(x);}\npublic static void main(String arg[]) {\n    F x=new F(9);\n}}`,\n            solution: ['849\\\\n']\n        },\n        {\n            code: `public class D {\n    static int x=1;\n    class String5 {\n        String s;\n        String5() {this.s=\"\"+(++x);}\n        public void finalize() { System.out.print(s); }\n    }\n    String5 a=new String5();\n    void f() {String5 a=new String5();\n    }\n    public void finalize() { System.out.print(\"A\"); }\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n}}`,\n            solution: [\n                'A235',\n                'A253',\n                'A325',\n                'A352',\n                'A523',\n                'A532',\n                '2A35',\n                '2A53',\n                '23A5',\n                '235A',\n                '25A3',\n                '253A',\n                '3A25',\n                '3A52',\n                '32A5',\n                '325A',\n                '35A2',\n                '352A',\n                '5A32',\n                '5A23',\n                '53A2',\n                '532A',\n                '52A3',\n                '523A',\n            ]\n        },\n        [\n            {\n                question: 'Se B estende A la scrittura B a=new A(); genera errore a compiletime.',\n                solution: true\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime.',\n                solution: false\n            },\n            {\n                question: 'Un oggetto ed un suo clone sono identici.',\n                solution: false\n            },\n            {\n                question: 'Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.',\n                solution: false\n            },\n            {\n                question: 'Ereditarietà multipla è permessa con le interfacce e le classi astratte.',\n                solution: false\n            },\n            {\n                question: 'Di default l\\'operatore == e il metodo equals fano la stessa cosa.',\n                solution: true\n            },\n            {\n                question: 'Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore di una classe può essere visibile all\\'esterno della classe stessa.',\n                solution: true\n            }\n        ],\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 07/2011',\n    id: 'esame_2011-07',\n    exercises: [\n        {\n            code: `import java.util.*;\npublic class A {\n    A(int m){\n        Collection<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"W\"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }\n}`,\n            solution: ['W0W1W2']\n        },\n        {\n            code: `import java.util.*;\npublic class B {\n    B(){\n        Collection b = new Collection();\n        for (int k=0; k<10; k++) {\n            String s=\"A\"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) {\n        new B();\n        new B(); }\n    public static void main(String a) {\n        new B();\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'Collection è abstract e non si può istanziare'\n            }\n        },\n        {\n            code: `public class C {\n    public static int x;\n    C(int s) {x=s;}\n    void f() {System.out.print(x);}\n    public static void main(String a[]){\n        C b=new C(4);\n        C c=new C(1);\n        b.f();\n        c.f();\n}   }`,\n            solution: ['11']\n        },\n        {\n            code: `public class E {\n    static int s=0;\n    E(int i){s=i;}\n    public static void main(String[] args) {\n        E b1=new E(3);\n        E b2=new E(3);\n        E b3=new E(1);\n        if (b1.equals(b2)) System.out.print(\"K\");\n            else System.out.print(\"I\");\n        if (b1.s==b3.s) System.out.print(\"D\");\n            else System.out.print(\"A\");\n}   }`,\n            solution: ['ID']\n        },\n        {\n            code: `#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++; }\nint main() {\n    char x[2];\n    int y;\n    x[0]='G'; x[1]='G'; y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }`,\n            solution: ['F H 1']\n        },\n        {\n            code: `public class G implements Cloneable {\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        copia.k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b = new G();\n        G c = b.clone();\n        G d = new G();\n        if (b.equals(c)) System.out.print(\"A\");\n        if (c.equals(d)) System.out.print(\"J\");\n        if (d.equals(b)) System.out.print(\"K\");\n}}`,\n            solution: ['K']\n        },\n        {\n            code: `public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(3);\n}}`,\n            solution: ['243']\n        },\n        {\n            code: `public class D {\n    static int x=1;\n    class String5 {\n        String s;\n        String5() {this.s=\"\"+(++x);}\n        public void finalize() { System.out.print(s); }\n    }\n    String5 a=new String5();\n    void f() {String5 a=new String5();\n    }\n    public void finalize() { System.out.print(\"S\"); }\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n}}`,\n            solution: [\n                'S235',\n                'S253',\n                'S325',\n                'S352',\n                'S523',\n                'S532',\n                '2S35',\n                '2S53',\n                '23S5',\n                '235S',\n                '25S3',\n                '253S',\n                '3S25',\n                '3S52',\n                '32S5',\n                '325S',\n                '35S2',\n                '352S',\n                '5S23',\n                '5S32',\n                '52S3',\n                '523S',\n                '53S2',\n                '532S'\n            ]\n        },\n        [\n            {\n                question: 'Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime.',\n                solution: false\n            },\n            {\n                question: 'Se B estende A la scrittura B a=new A(); genera errore a compiletime.',\n                solution: true\n            },\n            {\n                question: 'Un oggetto ed un suo clone sono identici.',\n                solution: false\n            },\n            {\n                question: 'Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.',\n                solution: false\n            },\n            {\n                question: 'Ereditarietà multipla è permessa con le interfacce e le classi astratte.',\n                solution: false\n            },\n            {\n                question: 'Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.',\n                solution: false\n            },\n            {\n                question: 'Di default l\\'operatore == e il metodo equals fanno la stessa cosa.',\n                solution: true\n            },\n            {\n                question: 'Il costruttore di una classe può non essere visibile all\\'esterno della classe stessa.',\n                solution: true\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 09/2011',\n    id: 'esame_2011-09',\n    exercises: [\n        {\n            code: `public class B implements Cloneable{\n    int k=0;\n    public Object clone() {\n        Object copia=null;\n        try {\n            copia=super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        ((B)copia).k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof B)) return false;\n        return k==((B)x).k;\n    }\n    public static void main(String[] args) {\n        B b= new B();\n        B c=(B)b.clone();\n        B d=new B();\n        if (b.equals(c)) System.out.print(\"Z\");\n        if (c.equals(d)) System.out.print(\"Y\");\n        if (d.equals(b)) System.out.print(\"X\");\n}}`,\n            solution: ['X']\n        },\n        {\n            code: `public class A {\n    A(int x) {System.out.print(\"A\");}\n    A() {System.out.print(\"S\");}\n    public void finalize() {System.out.print(\"U\");}\n}\npublic class B extends A {\n    B(int x) {System.out.print(\"T\");}\n    B() {System.out.print(\"H\");}\n    public void finalize() {System.out.print(\"P\");}\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}`,\n            solution: ['STP']\n        },\n        {\n            code: `class B {\nstatic int s=0;\nB(int i){s=i;}\npublic static void main(String[] args) {\n    B b1=new B(3);\n    B b2=new B(3);\n    B b3=new B(1);\n    if (b1.equals(b2)) System.out.print(\"3\");\n        else System.out.print(\"1\");\n    if (b1.s==b3.s) System.out.print(\"3\");\n        else System.out.print(\"1\");\n}   }`,\n            solution: ['13']\n        },\n        {\n            code: `public class B {\n       String a[10];\n       void initialize(){\n           for (int k=9;k>=0;--k) a[k]=\"\"+k;\n       }\n       void stampa(int k){\n           System.out.println(a[k]);\n       }\n       B() {initialize(); stampa(0); }\n       public static void main(String a[]){\n           new B();\n       }\n       public static void main(String a){\n           new B();\n       }\n   }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 2,\n                cause: 'Errata inizializzazione di un array'\n            }\n        },\n        {\n            code: `public class B {\n    static String k=\"pluto\";\n    public static void main(String a[]){\n        new B();\n        initialize(\"pippo\");\n        System.out.println(k);\n    }\n    void main(){\n        new B();\n    }\n    void initialize(String s){k=s;}\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 5,\n                cause: 'Il main statico non può accedere a metodi di istanza'\n            }\n        },\n        {\n            code: `class C{\n    void f() {\n        System.out.println(\"R\");\n    }\n}\npublic class B extends C{\n    public void f() {\n        System.out.println(\"P\");\n    }\n    public static void main(String[] args) {\n        C quattro1 = new B();\n        quattro1.f();\n    }\n    public static void main(String args) {\n        C αλθα = new C();\n        αλθα.f();\n    }}`,\n            solution: ['P\\\\n']\n        },\n        {\n            code: `public class B {\n    public static void main(String args[]) {\n        int i,j,k,l=8;\n        k = l++;\n        j = ++k;\n        i = j++;\n        System.out.print(i);\n    }\n}`,\n            solution: ['9']\n        },\n        {\n            code: `public class B {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]) {\n        Object z = new A();\n        if (z instanceof B) ((B) z).f(4);\n        if (z instanceof A) ((A) z).f(2);\n    }\n}\nclass A extends B{\n    void f(int k) {\n        System.out.print(k*2);\n    }\n}`,\n            solution: ['84']\n        },\n        [\n            {\n                question: 'In Java non esistono le variabili globali.',\n                solution: true\n            },\n            {\n                question: 'Una classe figlia può fare overloading di un metodo final della classe padre.',\n                solution: true\n            },\n            {\n                question: 'Una classe figlia può fare l\\'overriding di un metodo final della classe padre.',\n                solution: false\n            },\n            {\n                question: 'Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'Due oggetti per cui equals è vera possono avere variabili pubbliche con valori differenti.',\n                solution: true\n            },\n            {\n                question: 'Due oggetti per cui equals è vera sono sempre identici.',\n                solution: false\n            },\n            {\n                question: 'Se una Collection è specializzata tramite una generic gli oggetti estratti dal relativo iteratore non richiedono un cast.',\n                solution: true\n            },\n            {\n                question: 'Java usa solo la heap e non lo stack.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 01/2016',\n    id: 'esame_2016-01',\n    exercises: [\n        {\n            code: `#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++;    }\nint main() {\n    char x[2];\n    int y;\n    x[0]='D';   x[1]='D';   y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }`,\n            solution: ['C E 1']\n        },\n        {\n            code: `public class F{\nint x=3;\nF(int x) {\n    f(x);\n    f();\n    System.out.print(x);\n}\nvoid f() { x++; System.out.print(x);}\nvoid f(int x) { this.x++; x--; System.out.print(x);}\npublic static void main(String arg[]) {\n    F x = new F(9);\n}}`,\n            solution: ['859']\n        },\n        {\n            code: `public class G implements Cloneable {\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        }catch(CloneNotSupportedException e){System.exit(0);}\n        copia.k++;\n        return copia;\n    }\n    public int hashCode(){return 0;}\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b= new G();\n        G c=(G)(b.clone());\n        G d=new G();\n        if (b.equals(c)) System.out.print(\"D\");\n        if (c.equals(d)) System.out.print(\"E\");\n        if (d.equals(b)) System.out.print(\"F\");\n    }\n}`,\n            solution: ['F']\n        },\n        {\n            code: `public class C{\npublic static int x;\nC(int s) {x=s;}\nvoid f() { System.out.print(x);}\npublic static void main(String a[]) {\n    C b=new C(7);\n    C c=new C(10);\n    b.f();\n    c.f();\n}   }`,\n            solution: ['1010']\n        },\n        {\n            code: `import java.util.*;\npublic class B {\n    B() {\n        Collection b = new Collection();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) { new B();new B(); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'Collection è abstract e non si può istanziare'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class A {\n    A(int m){\n        List<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'TreeSet non è sottoclasse di List'\n            }\n        },\n        {\n            code: `public class E {\n    static int s=0;\n    E(int i){s=i;}\n    public static void main(String[] args) {\n        E b1=new E(3);\n        E b2=new E(3);\n        E b3=new E(1);\n        if (b1.equals(b2)) System.out.print(\"K\");\n            else System.out.print(\"X\");\n        if (b1.s==b3.s) System.out.print(\"IA\");\n            else System.out.print(\"D\");\n}   }`,\n            solution: ['XIA']\n        },\n        {\n            code: `public class D { static int x=1; S5 a=null;\n    class S5 { int k;\n        S5() {k=x;}\n        public void finalize() {\n            System.out.print(k); }\n    }\n    D() {x++; a=new S5();}\n    void f() {S5 a=new S5();}\n    public void finalize() { System.out.print(\"1\");}\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n        System.out.print(\"-\"); a5=null;\n        System.gc(); System.runFinalization();\n    }\n    public static void main(String args)\n        { D a5=new D();}\n}`,\n            solution: [\n                '1223-13',\n                '1232-13',\n                '1322-13',\n                '3221-13',\n                '3212-13',\n                '3122-13',\n                '2321-13',\n                '2312-13',\n                '2123-13',\n                '2132-13',\n                '2231-13',\n                '2213-13',\n                '1223-31',\n                '1232-31',\n                '1322-31',\n                '3221-31',\n                '3212-31',\n                '3122-31',\n                '2321-31',\n                '2312-31',\n                '2123-31',\n                '2132-31',\n                '2231-31',\n                '2213-31'\n            ]\n        },\n        [\n            {\n                question: 'Un oggetto ed un suo clone non sono identici.',\n                solution: true\n            },\n            {\n                question: 'Poichè java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.',\n                solution: false\n            },\n            {\n                question: 'Ereditarietà multipla è permessa con le interfacce e le classi astratte.',\n                solution: false\n            },\n            {\n                question: 'Di default l\\'operatore == e il metodo equals fanno la stessa cosa.',\n                solution: true\n            },\n            {\n                question: 'Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore di una classe può non essere visibile all\\'esterno della classe stessa.',\n                solution: true\n            },\n            {\n                question: 'Se B estende A la scrittura B a=new A(); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Se A è padre di B la scrittura B a=(B)(new A()); genera errore a runtime.',\n                solution: true\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 02/2016',\n    id: 'esame_2016-02',\n    exercises: [\n        {\n            code: `public class E4 {\n    int x=4;\n    E4(int x) {\n        f(x); f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--; System.out.print(x);}\n    public static void main(String arg[]) {\n        int x=2;\n        new E4(2);\n}}`,\n            solution: ['162']\n        },\n        {\n            code: `class E3 {\n    static int counter=4;\n    private int value=2;\n    E3(){value=++counter;}\n    public String toString(){\n        return this.getClass().getName()+value+\" \";}\n    public void finalize(){System.out.print(\"F\"+value);}\n}\npublic class G extends E3{\n    public static void main(String d[]){\n        LinkedList<E3> x=new LinkedList<E3>();\n        E3 a1=new G();\n        G a2 =new G();\n        E3 a3=new E3();\n        x.add(a1);x.add(a3);\n        a1=null; a2=null; a3=null;\n        Iterator<E3> it=x.iterator();\n        while (it.hasNext()){System.out.print(it.next());}\n        System.gc();System.runFinalization();\n}}`,\n            solution: ['NomePackage.G5 NomePackage.E37 F6']\n        },\n        {\n            code: `import java.util.*;\npublic class E2 {\n    static HashSet hs=new HashSet();\n    public int hashCode() {return 0;}\n    public boolean equals(Object x) {\n        return (x.getClass().equals(this.getClass())); }\n    public static void main(String s[]){\n        f(new E2()); f(new E2()); f(new A2());\n        f(new A2()); f(new A3()); f(new A3());\n    }\n    static void f(E2 x) {int v=0;\n        if (hs.add(x)) v=1; System.out.print(v);\n    }\n}\nclass A2 extends E2 {\n    public boolean equals(Object x) {\n        return x instanceof A2;\n    }\n}\nclass A3 extends A2 {}`,\n            solution: ['101000']\n        },\n        {\n            code: `class A1 {int x=7; }\nclass B1 extends A1 {int k=1;}\npublic class E1 {\n    public static void main(String[] args) {\n        A1 a1=new B1();\n        A1 a2=(A1)(new B1());\n        B1 b1=new A1();\n        System.out.println(a1.x+a2.x+b1.x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'Assegnamento di Classe Padre a Classe Figlia'\n            }\n        },\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(char x[2],int index,char value){\n    x[index]=value;\n}\nint main(int argc, char** argv) {\n    char a[]=\"ABCDEFGHIL\";\n    strcpy(&a[3], \"000\");\n    f(&a[2],4,'$');\n    f(&a[2],6,0);\n    cout<<a;\n    return 0;\n}`,\n            solution: ['ABC000$H']\n        },\n        {\n            code: `public class C {\n    int s=5;\n    void f() {System.out.print(\"A\"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print(\"B\"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n}`,\n            solution: ['B4A6']\n        },\n        {\n            code: `public class D {\n    static int x=2;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print(\"X\"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}`,\n            solution: [\n                'X35',\n                'X53',\n                '3X5',\n                '35X',\n                '53X',\n                '5X3'\n            ]\n        },\n        {\n            code: `import java.util.*;\npublic class E6 {\n    static Collection ll = new LinkedList();\n    int x=6;\n    E6(){}\n    E6(int x){\n        ll.add(this);\n        ll.add(new EA5());\n    }\n    public static void main(String z[]) {\n        new E6(3);\n        Iterator iter = ll.iterator();\n        while (iter.hasNext()) {\n            ((E6)(iter.next())).f();\n    }}\n    public void f() { System.out.print(x); }\n}\nclass EA5 extends E6 {\n    public void f() {\n        x++; super.f(); System.out.print(2);\n}}`,\n            solution: ['672']\n        },\n        [\n            {\n                question: 'Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'È corretto scrivere Integer k=3;',\n                solution: true\n            },\n            {\n                question: 'L\\' esistenza di un metodo f(int x) e di uno f(String s) nella stessa classe è un esempio di overloading.',\n                solution: true\n            },\n            {\n                question: 'L\\' esistenza di una classe di metodo f(int x), e in una sua sottoclasse di un metodo f(float x) è un esempio di overriding.',\n                solution: false\n            },\n            {\n                question: 'Se a.hashCode==b.hashCode, a.equals(b) deve essere vero.',\n                solution: false\n            },\n            {\n                question: 'Se a.hashCode!=b.hashCode, a.equals(b) deve essere falso.',\n                solution: true\n            },\n            {\n                question: 'Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con parametri dello stesso tipo, viene chiamato il costruttore vuoto.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2017',\n    id: 'esame_2017-06',\n    exercises: [\n        {\n            code: `public class C {\n    int s=4;\n    void f() {System.out.print(\"A\"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print(\"B\"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n    public static void main(String a){\n        C y=new C();\n    }\n}`,\n            solution: ['B3A5']\n        },\n        {\n            code: `using namespace std;\n#include <cstdlib>\n#include <iostream>\nvoid f(int x[4],int value){ x[0]+=value; }\nvoid g(int x,int value){ x+=value; }\nint main(int argc, char** argv) {\n    int z=5;\n    int a[]={1,2,3,4,5,6,7,8,9};\n    g(z,1);\n    f(&z,3);\n    f(a+3,3);\n    g(a[3],4);\n    cout<<z<<\" \"<<a[3];\n    return 0;\n}`,\n            solution: ['8 7']\n        },\n        {\n            code: `class A1 {int x=2; }\nclass B1 extends A1 {int k=1;}\npublic class E1 {\n    public static void main(String[] args) {\n        A1 a1=new B1();\n        A1 a2=(A1)(new B1());\n        B1 b1=new A1();\n        System.out.println(a1.x+a2.x+b1.x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'Assegnazione di classe Padre a classe Figlio'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class E6 {\n    static Collection ll = new LinkedList();\n    int x=1;\n    E6(int x){\n        ll.add(this);\n        ll.add(new E6A());\n    }\n    public static void main(String z[]) {\n        new E6(3);\n        Iterator iter = ll.iterator();\n        while (iter.hasNext()) {\n            ((E6)(iter.next())).f();\n    }}\n    public void f() { System.out.print(x); }\n    public static void main(String z) {\n        new E6A();\n        System.out.print(ll.size());\n}}\nclass E6A extends E6 {\n    E6A(){x++;}\n    public void f() {\n        x++; super.f(); System.out.print(2);\n}}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 21,\n                cause: 'Costruttore di E6 non vuoto e non richiamato'\n            }\n        },\n        {\n            code: `public class D {\n    static int x=3;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print(\"X\"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() {System.out.print(k);}\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}`,\n            solution: [\n                'X46',\n                'X64',\n                '64X',\n                '6X4',\n                '46X',\n                '4X6'\n            ]\n        },\n        {\n            code: `import java.util.*;\npublic class E2 {\n    static HashSet hs=new HashSet();\n    public int hashCode() {return 0;}\n    public boolean equals(Object x) {\n        return (x.getClass().equals(this.getClass()));}\n    public static void main(String s[]){\n        f(new E2()); f(new E2()); f(new A2());\n        f(new A2()); f(new A3()); f(new A3());\n    }\n    static void f(E2 x) {int v=0;\n        if (hs.add(x)) v=1; System.out.print(v);\n    }\n}\nclass A2 extends E2 {\n    public boolean equals(Object x) {return x instanceof A2;}\n}\nclass A3 extends A2 {}`,\n            solution: ['101000']\n        },\n        {\n            code: `import java.util.*;\nclass E3 {\n    static int counter=0;\n    private int value=0;\n    E3(){value=++counter;}\n    public String toString(){\n        return this.getClass().getName()+value+\" \";}\n    public void finalize(){System.out.print(\"F\"+value);}\n}\npublic class G extends E3{\n    public static void main(String d[]){\n        LinkedList<E3> x=new LinkedList<E3>();\n        E3 a1=new G();\n        G a2=new G();\n        E3 a3=new E3();\n        x.add(a1);x.add(a3);\n        a1=null; a3=null; a2=null;\n        Iterator<E3> it=x.iterator();\n        while (it.hasNext()){System.out.print(it.next());}\n        System.gc();System.runFinalization();\n}}`,\n            solution: ['NomePackage.G1 NomePackage.E33 F2 ']\n        },\n        {\n            code: `public class E4 {\n    int x=2;\n    E4(int x) {\n        f(x); f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) {this.x++; x--; System.out.print(x);}\n    public static void main(String arg[]) {\n        int x=2;\n        new E4(2);\n}}`,\n            solution: ['142']\n        },\n        [\n            {\n                question: 'Se a.hashCode!=b.hashCode, a.equals(b) deve essere falsa.',\n                solution: true\n            },\n            {\n                question: 'Nel main si può leggere una qualunque variabile di istanza della classe in cui è contenuto.',\n                solution: false\n            },\n            {\n                question: 'Ereditarietà multipla è permessa con le interfacce e le classi astratte.',\n                solution: false\n            },\n            {\n                question: 'E\\' corretto scrivere Integer k=3;',\n                solution: true\n            },\n            {\n                question: 'L\\'esistenza di un metodo f(int x) in una classe e di uno f(String s) in una sua sottoclasse è un esempio di overloading.',\n                solution: true\n            },\n            {\n                question: 'In una classe ci può essere un solo metodo main.',\n                solution: false\n            },\n            {\n                question: 'Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con parametri dello stesso tipo, ciene chiamato il costruttore vuoto.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 07/2017',\n    id: 'esame_2017-07',\n    exercises: [\n        {\n            code: `public class Sei {\n    char f() { return '6'; }\n    public static void main(String e[]) {\n        Sei a = new Sei();\n        Sei b = new Sette();\n        Sette c = new Sette();\n        System.out.print(a.f() + \" \" + b.f() + \" \" + c.f() + \" \");\n        char ch[] = {'A', 'B', 'A', 'B', 'A', 'B'};\n        int i1 = 0, i2 = 2, i3 = 4;\n        if (a.equals(b)) i1++;\n        if (b.equals(a)) i2++;\n        if (c.equals(b)) i3++;\n        System.out.print(ch[i1] + \" \" + ch[i2] + \" \" + ch[i3]);\n    } }\nclass Sette extends Sei {\n    char f() { return '7'; }\n    public boolean equals(Object a) {\n        return (a instanceof Sei);\n    }\n    public int hashCode() { return 3; }\n}`,\n            solution: ['6 7 7 A B B']\n        },\n        {\n            code: `import java.util.*;\npublic class Uno {\n    static Collection c=new HashSet();\n    public static void main(String a[]) {\n        Collection c=new LinkedList();\n        Uno u=new Uno();\n        c.add(u); c.add(u);\n        u.f();\n        System.gc();System.runFinalization();\n        System.out.println(c.size());\n    }\n    void f() {\n        A a=new A(\"K\");\n        A b=new A(\"L\");\n        c.add(b);\n    }\n    class A {\n        String s=\"\";\n        A(String s) {this.s=s; System.out.print(this);}\n        public String toString(){return s;}\n        public void finalize(){System.out.print(this);}\n    } }`,\n            solution: ['KLK2']\n        },\n        {\n            code: `import java.util.*;\npublic class Due {\n    static Collection<Due> s=new HashSet<Due>();\n    int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+\" \"+x.j);}\n    }\n    public static void main(String m){\n        s.add(new Due(1,0));\n        System.out.print(s.size());\n} }  `,\n            solution: ['21 20 1']\n        },\n        {\n            code: `import java.util.*;\npublic class Due {\n    static Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+\" \"+x.j);}\n} }`,\n            solution: ['41 01 01 01 0']// ['41 20 12 11 0']\n        },\n        {\n            code: `import java.util.*;\npublic class Due {\n    Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+\" \"+x.j);}\n} }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'Non si possono chiamare attributi di istanza da metodi statici'\n            }\n        },\n        {\n            code: `public class Tre {\n    class A {\n        public A(int k) {System.out.print(k);}\n        public void finalize() {System.out.print(\"A\");}\n    }\n    class B extends A {\n        public B(int k) {System.out.print(k);}\n        public void finalize() {System.out.print(\"A\");}\n    }\n    public static void main (String z[]){\n        new Tre();\n    }\n    Tre(){\n        A a=new B(3);\n        B b=(B)a;\n        a=null;\n        b=new B(3);\n        System.gc(); System.runFinalization();\n} }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'Costruttore della classe Padre non chiamato'\n            }\n        },\n        {\n            code: `#include <iostream>\nusing namespace std;\nint x[] = {-2, -1, 0, 1, 2};\nvoid f(int* x, int y[]) {\n    x[*y] = -y[*x];\n}\nint main(int argc, char** argv) {\n    int * p = x + 1;\n    f(p, p);\n    for (int * s = x; s < x + 5; s++) {\n        cout << *s;\n    }\n    return 0;\n}`,\n            solution: ['2-1012']\n        },\n        {\n            code: `public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.println(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(9);\n}}`,\n            solution: ['849']\n        },\n        [\n            {\n                question: 'int a[] è un oggetto.',\n                solution: true\n            },\n            {\n                question: 'Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore vuoto.',\n                solution: false\n            },\n            {\n                question: 'L\\'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.',\n                solution: true\n            },\n            {\n                question: 'L\\'esistenza in una classe di un metodo f(int x), e in una sua superclasse di un metodo f(String s) è un esempio di overriding.',\n                solution: false\n            },\n            {\n                question: 'Una classe astratta può implementare al massimo una interfaccia.',\n                solution: false\n            },\n            {\n                question: 'Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'In un programma ci possono essere più classi con lo stesso nome.',\n                solution: true\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2018',\n    id: 'esame_2018-06',\n    exercises: [\n        {\n            code: `public class D {\n    static int x=3;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a = new Pippo2();\n    }\n    public void finalize() { System.out.print(\"X\"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n}}`,\n            solution: [\n                'X64',\n                'X46',\n                '46X',\n                '4X6',\n                '64X',\n                '6X4'\n            ]\n        },\n        {\n            code: `import java.util.*;\npublic class Sette {\n    Sette(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%8);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+b.size());\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}`,\n            solution: ['18\\\\n']\n        },\n        {\n            code: `import java.util.*;\npublic class Sette {\n    Sette(){\n        Set<String> a = new ArrayList<String>();\n        Set<String> b = new HashSet<String>();\n        for (int k00; k<10; k++) {\n            String s=\"A\"+(k%8);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+b.size());\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'Set non è una superclasse di ArrayList'\n            }\n        },\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(int k[0]){ --k[1]; }\nvoid g(int * k){ (*(--k))++;}\nvoid h(int k[1]){--k;}\nint main() {\n    int k[]={1,2,3,4};\n    f(k+2);\n    g(k+2);\n    h(k+2);\n    for (int i=1;i<4;i++) { cout<<k[i]; }\n    return 0;\n}`,\n            solution: ['333']\n        },\n        {\n            code: `public class B {\n    static int x = 2;\n    B() { x++; }\n    B(int y) {x=x+y;}\n    public void finalize(){x--;}\n    public static void main(String[] args) {\n        A a2 = new A();\n        System.out.print(a2);\n        A a1 = new A(2);\n        System.out.print(a1);\n    }\n    public String toString(){return \"\"+x;}\n}\nclass A extends B {\n    int x=4;\n    A() { x++; }\n    A(int x) {super(x); x++;}\n    public String toString(){return super.toString()+x;}\n}`,\n            solution: ['3554']\n        },\n        {\n            code: `public class C {\n    int s=8;\n    void f() {System.out.print(\"A\"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print(\"B\"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n}`,\n            solution: ['B7A9']\n        },\n        {\n            code: `package uno;\npublic class C {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(6);\n    }\n    public static void main (String var){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n    }}\nclass B extends C{\n    void f(int k) {\n        System.out.print(k*2);\n    }}`,\n            solution: ['612']\n        },\n        {\n            code: `public class A {//this class is in the A.java file\n    public int x=0;\n    private A() {x=3;}\n    A(int x) {x=6;}\n}\npublic class B1 {//this class is in the B1.java file\n    public static void main(String a[]){\n        A a1=new A();\n        A a2=new A(9);\n        System.out.print(a1.x+\" \"+a2.x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 8,\n                cause: 'Il costruttore con firma A(int) è privato'\n            }\n        },\n        [\n            {\n                question: 'Nei metodi statici non è possibile leggere e scrivere le variabili di istanza.',\n                solution: true\n            },\n            {\n                question: 'Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'In una classe ci può essere un solo metodo public static void main.',\n                solution: false\n            },\n            {\n                question: 'Se di un metodo f faccio overriding non è detto che ci siano più \"signatures\" (firme) di metodi legate al nome.',\n                solution: true\n            },\n            {\n                question: 'Se di un metodo f faccio overloading non è detto che ci siano più \"signatures\" (firme) di metodi legate al nome.',\n                solution: false\n            },\n            {\n                question: 'Il garbage collector di Java sospende l\\'esecuzione del programma finchè non ha finito di liberare la memoria.',\n                solution: false\n            },\n            {\n                question: 'In Java non esistono le variabili globali.',\n                solution: true\n            },\n            {\n                question: 'Le variabili dichiarate static non sono modificabili dai metodi privati.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 07/2018',\n    id: 'esame_2018-07',\n    exercises: [\n        {\n            code: `public class B {\n    static int x = 2;\n    B() { x++; }\n    B(int y) {x=x+y;}\n    public void finalize(){x--;}\n    public static void main(String[] args) {\n        A a2 = new A();\n        System.out.print(a2);\n        A a1 = new A(2);\n        System.out.print(a1);\n    }\n    public String toString(){return \"\"+x;}\n}\nclass A extends B {\n    int x=4;\n    A() { x++; }\n    A(int x) {super(x); x++;}\n    public String toString(){return super.toString()+x;}\n}`,\n            solution: ['3554']\n        },\n        {\n            code: `package uno;\npublic class C {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(6);\n    }\n    public static void main (String var){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n    }}\nclass B extends C{\n    void f(int k) {\n        System.out.print(k);\n    }}`,\n            solution: ['36']\n        },\n        {\n            code: `public class Test3 {\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(5);\n        System.out.println(\"y=\"+a.y);\n}   }\nclass A {\n    int y = 4;\n    void m1(int y) { m2(y++); }\n    void m2(int y) { --y; }\n}`,\n            solution: ['y=4\\\\n']\n        },\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(int k){ k++; }\nvoid g(int *k){ (*k)++; }\nvoid h(int *k){ --k; }\nint main() {\n    int k[]={3,5,8,13};\n    f(k[2]);\n    g(&k[3]);\n    h(k);\n    for (int i=0; i < 4; i++) { cout << k[i]; }\n    return 0;\n}`,\n            solution: ['35814']\n        },\n        {\n            code: `import java.util.*;\npublic class Sette {\n    Sette(){\n        List<String> a = new ArrayList<String>();\n        List<String> b = new HashSet<String>();\n        for (int k=0; k<10;k++) {\n            String s=\"A\"+(k%3);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+\" \"+b.size());\n    }\n    public static void main(String[] a) { new Sette(); }\n    public static void main(String a) {new Sette(); new Sette();}\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 5,\n                cause: 'List non è superclasse di HashSet'\n            }\n        },\n        {\n            code: `public class Sette {\n    Sette(){\n        Collection<String> a = new Arraylist<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0; k<10;k++) {\n            String s=\"A\"+(k%5);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+\" \"+b.size());\n    }\n    public static void main(String[] a) { new Sette(); }\n}`,\n            solution: ['10 5']\n        },\n        {\n            code: `public class A {//this class is in the A.java file\n    public int x=0;\n    A(int x) {x=6;}\n}\npublic class B1 {//this class is in the B1.java file\n    public static void main(String a[]){\n        A a1=new A();\n        A a2=new A(9);\n        System.out.println(a1.x+\" \"+a2.x);\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'Non esiste un costruttore di A con firma A()'\n            }\n        },\n        {\n            code: `public class D {\nstatic int x=1;\npublic static void main(String[] args) {\n    D a5=new D();   a5.f();\n    a5=new D();     a5.f();\n    System.gc();    System.runFinalization();\n}\nvoid f() {Pippo a=new Pippo2();\n}\npublic void finalize() { System.out.print(\"Z\"); }\nclass Pippo {\n    int k;\n    Pippo() {k=++x;}\n    public void finalize() { System.out.print(k); }\n}\nclass Pippo2 extends Pippo {\n    Pippo2() {k=x++;}\n}}`,\n            solution: [\n                'Z24',\n                'Z42',\n                '2Z4',\n                '24Z',\n                '42Z',\n                '4Z2'\n            ]\n        },\n        [\n            {\n                question: 'Nei metodi statici non è possibile leggere e scrivere le variabili di istanza.',\n                solution: true\n            },\n            {\n                question: 'Si consideri un attributo x dichiarato come protected nella classe C del package P1; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da C.',\n                solution: true\n            },\n            {\n                question: 'Si consideri un attributo x dichiarato come protected nella classe C del package P1; x è visibile da un\\'altra classe D appartenente allo stesso package P1 solo se D eredita da C.',\n                solution: false\n            },\n            {\n                question: 'In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.',\n                solution: false\n            },\n            {\n                question: 'Sia I un\\'interfaccia, e C una classe che la implementa. L\\'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori a runtime.',\n                solution: false\n            },\n            {\n                question: 'Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se inquesta non è disponibile un costruttore con la stessa firma, ciene chiamato il costruttore senza parametri.',\n                solution: false\n            },\n            {\n                question: 'Le variabili dichiarate static non sono modificabili dai metodi privati.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 09/2018',\n    id: 'esame_2018-09',\n    exercises: [\n        {\n            code: `public class Test4 {\n    public static void main(String[] args) {\n        I i = new C(3);\n        System.out.print(i.m(2));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(++x); }\n    public int m(int z) { return x * z; }\n}\nclass C extends B {\n    C(int x) { super(++x); }\n}`,\n            solution: ['12']\n        },\n        {\n            code: `public class Test5 {\n    public static void main(String[] args) {\n        B b = new B();\n        A a = new A();\n        J j= b;\n        System.out.println(j.m(5) + b.m(\"hello\"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {\n    int m(String s);\n}\nclass A implements I {\n    int x = 5;\n    public int m(int z) { return x + z; }\n}\nclass B implements J {\n    public int m(String s) { return s.length(); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 19,\n                cause: 'B non ha il metodo \"int m(int)\" implementato da J'\n            }\n        },\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x[] = {9, 2, 5, 1};\nint f(int *x, int *y){\n    y[3] = 5;\n    return ++(*x);\n}\nint g(int a){\n    x[0] = 0;\n    return f(&x[a], x);\n}\nint main() {\n    int a = 1;\n    x[a] = a;\n    cout << g(++a);\n    for (int i = 0; i<4; i++) cout << x[i];\n    return 0;\n}`,\n            solution: ['60165']\n        },\n        {\n            code: `import java.util.*;\npublic class Test2 {\n    public static void main(String[] args) {\n        A[] a = new A[4];\n        for (int i = 0; i < a.length; i++) {\n            if (i%2 == 0) a[i]= new A(i);\n            else a[i]= new B(i);\n        }\n        ArrayList<A> l = new ArrayList<>(Arrays.asList(a));\n        for(A e: l) System.out.print(e.m(3) + \" \");\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return super.m(z) * 2; }\n}`,\n            solution: ['4 10 6 14 ']\n        },\n        {\n            code: `public class Test3 {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    final void m(C c) { System.out.print(\"4\"); }\n}\nclass B extends A {\n    void m(C c) { System.out.print(\"5\"); }\n    void m(D c) { System.out.print(\"6\"); }\n}\nclass C {}\nclass D extends C {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'Non si può fare l\\'override di un metodo final'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Test6 {\n    static final ArrayList<A> l = new ArrayList<>();\n    void doSomething(int x) {\n        for(int i=0; i<x; i++) {\n            B b = new B();\n            b.m();\n        }\n    }\n    void doSomethingElse() {\n        for(int i=0; i<l.size(); i++) {\n            A a = l.get(i);\n            a++;\n        }\n    }\n    public static void main(String[] args) {\n        Test6 t = new Test6();\n        t.doSomething(5);\n        A a = new A();\n        t.doSomethingElse();\n    }\n}\nclass A {\n    A() { Test6.l.add(this); }\n}\nclass B extends A {\n    int x = 0;\n    B() { super(); }\n    void m() { x++; }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 13,\n                cause: 'Non si può usare l\\'operatore ++ su un oggetto'\n            }\n        },\n        {\n            code: `public class Test8 {\n    public static void main(String[] args) {\n        B b1 = new B(new A());\n        b1.m(3);\n        B b2 = new B();\n        b2.m(5);\n        System.out.println(b2);\n    }}\nclass A {\n    static int x = 3;\n    A() { x++; }\n    void m(int x) { this.x += x; }\n    public String toString() { return \"x=\"+x; }\n}\nclass B {\n    A a;\n    B(A a) { this.a = a; }\n    B() { super(); }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 19,\n                cause: 'NullPointerException'\n            }\n        },\n        {\n            code: `public class Test7 {\n    public static void main(String[] args) {\n        A a = new A();\n        a.ml(a.y);\n        System.out.print(\"y=\"+a.y);\n    }\n}\nclass A {\n    static int y = 10;\n    void ml(int y) {\n        y++;\n        m2();\n    }\n    void m2() { ++y; }\n}`,\n            solution: ['y=11']\n        },\n        [\n            {\n                question: 'Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.',\n                solution: false\n            },\n            {\n                question: 'Sia data una classe Java A che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.',\n                solution: true\n            },\n            {\n                question: 'Con il termine \"autoboxing\" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',\n                solution: false\n            },\n            {\n                question: 'In Java la parola chiave this serve a identificare un particolare elemento all’interno di un array.',\n                solution: false\n            },\n            {\n                question: 'Il tipo array int [] è un tipo riferimento, come le classi.',\n                solution: true\n            },\n            {\n                question: 'In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.',\n                solution: false\n            },\n            {\n                question: 'In Java, se B è una sottoclasse di A l\\'istruzione B a = new A(); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Una classe Java definita come abstract può essere usata all\\'interno di gerarchie di classi con ereditarietà multipla.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 01/2019',\n    id: 'esame_2019-01',\n    exercises: [\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x = 11;\nint f(int *x){ return ++(*x); }\nint g(int y){ return f(&y) + f(&x); }\nint main() {\n    int a = 3;\n    cout << g(a);\n    cout << a;\n    cout << x;\n    return 0;\n}`,\n            solution: ['16312']\n        },\n        {\ncode: `public class Test2 {\n    public static void main(String[] args) {\n        A a = new B(3);\n        C c = new C(3);\n        System.out.println(a.m() + c.m());\n    }\n}\nclass A {\n    private int x;\n    int m() { return x + 1; }\n}\nclass B extends A {\n    B(int x) { this.x = x; }\n    int m() { return x + 2; }\n}\nclass C {\n    int x = 0;\n    A a = new A();\n    C(int x) { this.x = a.x; }\n    int m() { return x + 3; }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 13,\n                cause: 'B non può accedere ai campi privati di A'\n            }\n        },\n        {\n            code: `public class Test3 {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    void m(C c) { System.out.println(\"1\"); }\n}\nclass B extends A {\n    void m(C c) { System.out.println(\"2\"); }\n}\nclass C extends B {}\nclass D extends A {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'Il metodo m richiede un C, non un D'\n            }\n        },\n        {\n            code: `public class Test4 {\n    public static void main(String[] args) {\n        A a = new B(7);\n        I i = a;\n        System.out.println(i.m(4));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x - 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return x - z; }\n}`,\n            solution: ['2\\\\n']\n        },\n        {\n            code: `public class Test5 {\n    public static void main(String[] args) {\n        B b = new B();\n        A a = b;\n        J j = a;\n        System.out.println(j.m(5) + b.m(\"ciccio\"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {}\n\nclass A implements I {\n    int x = 3;\n    public int m(int z) { return x + z; }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 5,\n                cause: 'A non implementa J'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Test6 {\n    static final int N = 10;\n    public static void main(String[] a) {\n        Test6 t = new Test6();\n        t.m(N);\n    }\n    void m(int n) {\n        List<Integer> la = new ArrayList<>();\n        List<Integer> lb = new ArrayList<>();\n        for(int i=0; i<N; i++)\n            la.add(i);\n        for(int i=0; i<2*N; i++)\n            if (i%2==0) la.add(i);\n        la.addAll(lb);\n        System.out.println(la.size());\n        Set<Integer> s = new HashSet<>();\n        s.addAll(la);\n        System.out.println(s.size());\n    }\n}`,\n            solution: ['20\\\\n15\\\\n']\n        },\n        {\n            code: `import java.util.*;\npublic class Test7 {\n    public static void main(String[] args) {\n        List<A> ls = new ArrayList<>();\n        ls.add(new A(\"banana\")); ls.add(new A(\"kiwi\")); ls.add(new A(\"avocado\"));\n        Collections.sort(ls);\n        for(A s: ls)\n            System.out.println(a.s.length());\n    }\n}\nclass A implements Comparable<A> {\n    String s;\n    A(String s) { this.s = s; }\n    public int compareTo(A a) {\n        return (s.length() - a.s.length());\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 8,\n                cause: 'a non è definito'\n            }\n        },\n        {\n            code: `public class Test8 {\n    public static void main(String[] args) {\n        A al = new A(5);\n        A a2 = new A(al.m()/2);\n        boolean b = (al == a2);\n        System.out.print(b);\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x; }\n    int m() { return x*2; }\n}`,\n            solution: ['false']\n        },\n        [\n            {\n                question: 'In una classe possono coesistere più metodi con lo stesso nome ma firme (numero e tipo dei parametri) diverse.',\n                solution: true\n            },\n            {\n                question: 'Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se in questa non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore senza parametri.',\n                solution: false\n            },\n            {\n                question: 'Sia I un\\'interfaccia, e C una classe che la implementa. L\\'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori runtime.',\n                solution: false\n            },\n            {\n                question: 'Un attributo x dichiarato come public nella classe C del package P1 è visibile a tutte le altre classi dichiarate in P1, ma non a classi dichiarate in package diversi da P1.',\n                solution: false\n            },\n            {\n                question: 'Un\\'interfaccia Java normalmente contiene solo la firma dei metodi; la loro definizione (corpo) nell\\'interfaccia è opzionale.',\n                solution: true\n            },\n            {\n                question: 'Java non ha un distruttore (simile alla destroy del C++) per deallocare esplicitamente e direttamente oggetti in memoria.',\n                solution: true\n            },\n            {\n                question: 'Le istruzioni Object[] x = new Object[10]; x[0] = \"elemento\"; sono illegali in Java, perchè per gli array non è supportato il polimorfismo; questo è il motivo principale per l\\'esistenza del Java Collection Framework, che invece supporta questa funzionalità.',\n                solution: false\n            },\n            {\n                question: 'Con il termine \"autoboxing\" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 02/2019',\n    id: 'esame_2019-02',\n    exercises: [\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x = 15;\nvoid f(int m){ x += m; m++; }\nint g() { return x; }\nint main() {\n    int x = 5;\n    f(x);\n    cout<<g();\n    cout<<x;\n    return 0;\n}`,\n            solution: ['205']\n        },\n        {\ncode: `public class Test2 {\n    static final int MAX = 10;\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(1) ;\n        C c = new C();\n        c.m2(2);\n    }\n}\ninterface I1 {\n    public int m1(int x);\n}\ninterface I2 {\n    public int m2(int x) {\n        return x + MAX;\n    }\n}\nclass A implements I1 {\n    int a = 20;\n    public int m1(int x) {\n        return a + x;\n    }\n}\nclass B extends A {}\nclass C extends B implements I2 {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 14,\n                cause: 'Implementazione di un metodo in un\\'interfaccia senza la parola chiave default'\n            }\n        },\n        {\n            code: `public class Test3 {\n    public static void main(String[] args) {\n        B b1=new B(new A()); b1.m(3);\n        B b2 = new B(); b2.m(5);\n        System.out.println(b2);\n    }\n}\nclass A {\nstatic int x = 3;\n    A () { x++; }\n    void m(int x) { this.x += x; }\n    public String toString() { return \"x=\"+x; }\n}\nclass B {\n    A a;\n    B(A a) { this.a = a; }\n    B() { super(); }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 18,\n                cause: 'NullPointerException'\n            }\n        },\n        {\n            code: `public class Test4 {\n    public static void main(String[] args) {\n        Z a = new Z();\n        a.m1(5);\n        System.out.print(\"y=\"+a.y);\n    }\n}\nclass Z {\n    static int y = 2;\n    void m1(int y) { m2(y++); }\n    void m2 (int y) { --y; }\n}`,\n            solution: ['y=2']\n        },\n        {\n            code: `public class Test5 {\n    public static void main(String[] args) {\n        A a = new A(); a .m();\n        B b = new C(); b.m1(1); b.m2(2);\n    }\n}\ninterface I {\n    public int ml(int a);\n}\ninterface J {\n    public int m2(int b);\n}\ninterface K extends I,J {}\nclass A {\n    public String m() { return \"this is A\"; }\n}\nclass B implements K {\n    int x = 500;\n    public int m1(int a) { return a * x; }\n    public int m2(int b) { return b + x; }\n}\nclass C extends A,B {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 22,\n                cause: 'Non si può estendere da due classi'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Test6 {\n    public static void main(String[] args) {\n        A[] a = new A[4];\n        for (int i = 0; i < a.length; i++) {\n        if (i%2 != 0) a[i]= new A(i);\n        else a[i]= new B(i);\n        }\n        List<A> l = new ArrayList<>(Arrays.asList(a));\n        for(A e: l) System.out.print(e.m(5) + \" \");\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); this.x = x + 2; }\n}`,\n            solution: ['7 7 9 9 ']\n        },\n        {\n            code: `public class Test7 {\n    public static void main(String[] args) {\n        A a = new A();\n        int r1 = a.m(1);\n        A a2 = new B(new Z());\n        int r2 = a2.m(2);\n        B b = new B(new Z());\n        int r3=b.m(3);\n        System.out.print(\"\" + r1 + \" \" + r2 + \" \" + r3);\n    }\n}\nclass Z {}\nclass A {\n    static int val = 7;\n    int m(int x) { val--; return x * val; }\n}\nclass B extends A {\n    Z z;\n    B(Z z) {this.z = z; val++; }\n    int m(int x) { return x * val + 1; }\n}`,\n            solution: ['6 15 25']\n        },\n        {\n            code: `public class Test8 {\n    public static void main(String[] args) {\n        A a1 = new A(5);\n        A a2 = new A(3);\n        A a3 = new A(5);\n        System.out.print(a1.equals(a2));\n        System.out.print(a1.equals(a3));\n    }\n}\nclass A {\n    int x = 0;\n    A(int x) {this.x = x;}\n}`,\n            solution: ['falsefalse']\n        },\n        [\n            {\n                question: 'In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.',\n                solution: false\n            },\n            {\n                question: 'Le variabili dichiarate static sono modificabili anche da metodi private.',\n                solution: true\n            },\n            {\n                question: 'Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.',\n                solution: false\n            },\n            {\n                question: 'Sia data una classe Java che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.',\n                solution: true\n            },\n            {\n                question: 'Una classe Java definita come abstract può essere usata all\\'interno di gerarchie di classi con ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'In Java, se B è una sottoclasse di A, l\\'istruzione B a = new A(); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Si consideri un attributo x dichiarato come protected nella classe C del package Pl; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da c.',\n                solution: true\n            },\n            {\n                question: 'In Java la parola chiave this serve a identificare un particolare elemento all\\'interno di un array.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 06/2019',\n    id: 'esame_2019-06',\n    exercises: [\n        {\n            code: `public class Test {\n    public static void main(String[] z) {\n        B b = new B();\n        A a = b;\n        J j = a;\n        System.out.println(j.m(5) + b.m(\"E.646\"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I { }\nclass A implements I {\n    int x = 3;\n    public in m(int z) { return x + z; }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 5,\n                cause: 'Assegnamento errato perchè A non implementa J'\n            }\n        },\n        {\ncode: `import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> ls = new ArrayList<>();\n        ls.add(new A(\"banana\"));\n        ls.add(new A(\"kiwi\"));\n        ls.add(new A(\"avocado\"));\n        Collections.sort(ls);\n        for(A s: ls)\n            System.out.print(s.s.length());\n    }\n}\nclass A implements Comparable<A> {\n    String s;\n    A(String s) { this.s = s; }\n    public int compareTo(A a) {\n        return (s.length() - a.s.length());\n    }\n}`,\n            solution: ['467']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(5);\n        System.out.println(\"y=\"+a.y);\n    }\n}\nclass A {\n    int y = 1;\n    void m1(int y) { m2(y++); }\n    void m2(int y) { --y; }\n}`,\n            solution: ['y=1\\\\n']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new C(3);\n        I i = a;\n        System.out.println(i.m(5));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x * z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return x + z; }\n}\nclass C extends B {\n    C(int x) { super(x); }\n    public int m(int z) { return super.m(z)+2; }\n}`,\n            solution: ['11\\\\n']\n        },\n        {\n            code: `public class G0 {\n    public static void main(String x[]) {\n        G1 g1 = new G1(3);\n        G1 g2 = new G1(4);\n        G2 g3 = new G2(2);\n        G2 g4 = new G2(1);\n        System.out.println(g1.x+\" \"+g2.x+\" \"+g3.x+\" \"+g4.x);\n    }\n    public static void main(String x) {\n        G2 g1 = new G2(2);\n        System.out.println(g1.x);\n    }\n}\nclass G1 {\n    static int x=3;\n    G1(){x--;}\n    G1(int x) {\n        this.x=x;\n    }\n}\nclass G2 extends G1 {\n    int x=0;\n    G2(int x) {\n        this.x=x;\n    }\n}`,\n            solution: ['2 2 2 1\\\\n']\n        },\n        {\n            code: `import java.util.*;\npublic class Test {\n    public static void main(String[] a) {\n        Test t = new Test();\n        System.out.println(t.m(5, 5));\n    }\n    int m(int a, int b) {\n        int m = 3;\n        ArrayList<Integer> l = new ArrayList<>();\n        Set<Integer> s = new HashSet<>();\n        for(int i=0; i<a; i++)\n            l.add(i);\n        for(int i=m; i<b+m; i++)\n            s.add(i);\n        s.addAll(l);\n        return s.size();\n    }\n}`,\n            solution: ['8\\\\n']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new B(3);\n        C c = new C(3);\n        System.out.println(a.m() + c.m());\n    }\n}\nclass A {\n    private int x;\n    int m() { return x + 1; }\n}\nclass B extends A {\n    B(int x) { this.x = x; }\n    int m() { return x + 2; }\n}\nclass C {\n    int x = 0;\n    A a = new A();\n    C(int x) { this.x = a.x; }\n    int m() { return x + 3; }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 13,\n                cause: 'Assegnamento errato perchè x è privata'\n            }\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a1 = new A(3);\n        A a2 = new A(3);\n        boolean b = (a1 == a2);\n        System.out.println(b);\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x; }\n}`,\n            solution: ['false\\\\n']\n        },\n        [\n            {\n                question: 'Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se in questa non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore senza parametri.',\n                solution: false\n            },\n            {\n                question: 'Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.',\n                solution: false\n            },\n            {\n                question: 'In una classe vi possono essere più modi con lo stesso nome ma firme (numero e tipo dei parametri) diverse.',\n                solution: true\n            },\n            {\n                question: 'Se a.equals(b) è false, non può essere a.hashCode==b.hashCode.',\n                solution: false\n            },\n            {\n                question: 'In Java esiste ereditarietà singola: quindi un tipo interfaccia può ereditare da un solo tipo interfaccia.',\n                solution: false\n            },\n            {\n                question: 'Si consideri un attributo x dichiarato come protected nella classe C del package P1; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da C.',\n                solution: true\n            },\n            {\n                question: 'Sia I un\\'interfaccia, e C una classe che la implementa. L\\'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori a runtime.',\n                solution: false\n            },\n            {\n                question: 'Le istruzioni Object[] x = new Object[10]; x[0] = \"elemento\"; sono illegali in Java, perchè per gli array non è supportato il polimorfismo; questo è il motivo principale per l\\'esistenza del Java Collection Frameword, che invece supporta questa funzionalità.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 07/2019',\n    id: 'esame_2019-07',\n    exercises: [\n        {\n            code: `public class T2 {\n    public static void main(String[] args) {\n        A1 obj = new B1();\n        A1 par = new B1();\n        System.out.println(obj.m(par));\n    }\n}\nclass A1 {\n    int x = 0;\n    String m(A1 a) {\n        return \"a in a\";\n    }\n}\nclass B1 extends A1 {\n    String m(A1 a) {\n        return \"a in b\";\n    }\n    String m(B1 b) {\n        return \"b in b\";\n    }\n}`,\n            solution: ['a in b']\n        },\n        {\ncode: `import java.util.*;\npublic class T5 {\n    T5(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%4);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+\" \"+b.size());\n    }\n    public static void main(String[] a) { new T5(); }\n}`,\n            solution: ['10 4']\n        },\n        {\n            code: `public class T6 {\n    public static void main(String[] args) {\n        A6 a = new A6();\n        a.m1(5);\n        System.out.println(a.y+\" \"+a.z);\n    }\n}\nclass A6 {\n    static int z=2;\n    int y = 3;\n    void m1(int y) { m2(y++); }\n    void m2(int z) { --z; }\n}`,\n            solution: ['3 2']\n        },\n        {\n            code: `public class T1 {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        J j = b;\n        if (a.equals(b))\n            System.out.println(j.m(5) + b.m(\"banana\"));\n        else\n            System.out.println(j.m(5));\n    }\n    public static void main(String args) {\n        I i = new B();\n        System.out.println(i.m(5)+ ((B)i).m(\"pera\"));\n    }\n}\ninterface I { int m(int z);}\ninterface J extends I {}\nclass A implements I {\n    int x = 2;\n    public int m(int z) {\n        return x + z;\n    }\n    public boolean equals(Object o) {\n        A obj = (A) o;\n        return x == obj.x;\n    }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 3,\n                cause: 'Classe B non definita'\n            }\n        },\n        {\n            code: `public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m(\"adige\");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m(\"arno\");\n        A2 a2 = new C2();\n        C2 c2 = (C2) a2;\n        c2.m(\"tevere\");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=3;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() {}\n}\nclass C2 extends B2 {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 20,\n                cause: 'Costruttore della superclasse A2 non richiamato'\n            }\n        },\n        {\n            code: `public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m(\"adige\");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m(\"arno\");\n        A2 a2 = new C2();\n        C2 c2 = (C2) a2;\n        c2.m(\"tevere\");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=2;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() { super(n++);}\n}\nclass C2 extends B2 {}`,\n            solution: ['5006']\n        },\n        {\n            code: `public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m(\"adige\");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m(\"arno\");\n        A2 a2 = new B2();\n        C2 c2 = (C2) a2;\n        c2.m(\"tevere\");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=1;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() { super(n++);}\n}\nclass C2 extends B2 {}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 9,\n                cause: 'Non si può fare il cast da classe padre a classe figlia'\n            }\n        },\n        {\n            code: `public class T4 {\n    static int x=5;\n    public static void main(String[] args) {\n        System.out.print(x+\"[\");\n        T4 a5=new T4(); a5.f();\n        a5=new T4();    a5.f();\n        System.gc();    System.runFinalization();\n        System.out.println(\"]\"+x);\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print(\"z\"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}`,\n            solution: [\n                '5[86z]9',\n                '5[8z6]9',\n                '5[68z]9',\n                '5[6z8]9',\n                '5[z86]9',\n                '5[z68]9',\n                '5[]986z',\n                '5[]98z6',\n                '5[]968z',\n                '5[]96z8',\n                '5[]9z86',\n                '5[]9z68',\n            ]\n        },\n        [\n            {\n                question: 'L\\'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.',\n                solution: true\n            },\n            {\n                question: 'La parola chiave finally serve a terminare l\\'esecuzione del programma.',\n                solution: false\n            },\n            {\n                question: 'Java non supporta i puntatori: pertanto, è supportata solo l\\'allocazione statica della memoria sullo stack e non quella dinamica sullo heap.',\n                solution: false\n            },\n            {\n                question: 'Il garbage collector è una funzionalità del supporto run-time di Java molto utile, in quanto gestisce in maniera automatica la deallocazione di oggetti non pià utilizzati dal programma, semplificando il lavoro del programmatore ed evitandone potenziali errori.',\n                solution: true\n            },\n            {\n                question: 'In Java, se A è una sottoclasse di B, l\\'istruzione B a = new A(); genera errore a compile time.',\n                solution: false\n            },\n            {\n                question: 'In Java, se B è una sottoclasse di A l\\'istruzione B a = new A(); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Con il termine \"autoboxing\" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',\n                solution: false\n            },\n            {\n                question: 'Un metodo static di una classe C può essere invocato senza che sia stata creata un\\'istanza (oggetto) di C.',\n                solution: true\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 09/2019',\n    id: 'esame_2019-09',\n    exercises: [\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        C obj = new C();\n        int a = c.m1();\n        int b = obj.m3();\n    }\n}\nclass C {\n    static int x = 5;\n    int y = 3;\n    static public int m1() { return y + m2(); }\n    static private int m2() { return x; }\n    public int m3() { return m1(); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'Un metodo statico non può usare campi d\\'istanza'\n            }\n        },\n        {\ncode: `public class Test {\n    static String removeLast(String str) {\n        // ritorna la stringa ottenuta rimuovendo l'ultimo carattere dal parametro\n        return str.substring(0, str.length() - 1);\n    }\n    public static void main(String[] args) {\n        A obj1 = new A(\"milano\");\n        A obj2 =new B(\"torino\");\n        B obj3 = new B(\"verona\");\n        I obj4 = new B(\"trento\");\n        System.out.println(obj1.m() + \"_\" + obj2.m() + \"_\" + obj3.m() + \"_\" + obj4.m());\n    }\n}\ninterface I {\n    public String m();\n}\nclass A {\n    String s;\n    A(String s) { this.s = s; }\n    public String m() { return Test.removeLast(s); }\n}\npublic class B extends A implements I {\n    B(String s) { super(s); }\n    public String m() { return s; }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 22,\n                cause: 'Più di una classe pubblicha nello stesso file'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> l = new ArrayList<>();\n        for(int c=0; c<10; c++)\n            if(c%2 == 0) l.add(new A());\n            else if(c%3 == 0) l.add(new B());\n            else l.add(new C());\n        for(A a : l) {\n            a.setAttribute();\n            System.out.println(a);\n        }\n    }\n}\nclass A {\n    String str = null;\n    public void setAttribute() { str = \"1\"; }\n    public String toString() { return str; }\n}\nclass B extends A {\n    public void setAttribute() { str = \"2\"; }\n}\nclass C extends A { }`,\n            solution: ['1\\\\n1\\\\n1\\\\n2\\\\n1\\\\n1\\\\n1\\\\n1\\\\n1\\\\n2\\\\n']\n        },\n        {\n code: `public class Test {\n     public static void main(String [] args) {\n         Z z = new Z();\n         System.out.print(z.m());\n     }\n }\n class X {\n     static int s = 1;\n     int x = 3;\n     public int m() { s++; return x; }\n }\n class Y extends X {\n     int y = 4;\n     public int m() { s++; return super.m() + y; }\n }\n class Z extends Y {\n     public int m() { s++; return super.m(); }\n }`,\n            solution: ['7']\n        },\n        {\n            code: `public class Test {\n    public static void main(String [] args) {\n        A a = new B();\n        I i = new B();\n        System.out.print(a.m(i));\n    }\n}\ninterface I {\n    public int m(I obj);\n}\nclass A implements I {\n    public int m(I obj) { return 1; }\n    public int m(A obj) { return 2; }\n}\nclass B extends A {\n    public int m(I obj) { return 3; }\n    public int m(A obj) { return 4; }\n    public int m(B obj) { return 5; }\n}`,\n            solution: ['3']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A obj1 = new B();\n        I obj2 = new C();\n        J obj3 = new B();\n        J obj4 = new D();\n        System.out.println(obj1.toString());\n        System.out.println(obj2.m1());\n        System.out.println(obj3.toString());\n        System.out.println(obj4.m2());\n    }\n}\ninterface I {\n    public int m1();\n}\ninterface J {\n    public int m2();\n}\nclass A {\n    int x = 5;\n    public String toString() { return Integer.toString(x); }\n}\nclass B extends A implements I {\n    int y = 3;\n    public int m1() { return y; }\n}\nclass C extends B implements J {\n    public int m2() {\n        x = x * 2; return x;\n    }\n}\nclass D extends C {\n    int z = 3;\n    public String toString() { return Integer.toString(x * z); }\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 5,\n                cause: 'B non implementa J'\n            }\n        },\n        {\n            code: `import java.util.*;\n public class Test {\n     public static void main(String[] args) {\n         String[] a = {\"pera\", \"arancia\", \"fragola\", \"mela\"};\n         Set<Integer> s = new HashSet<>();\n         List<Integer> l = new ArrayList<>();\n         for(String i: a) {\n             s.add(i.length());\n             l.add(i.length());\n         }\n         System.out.println(s.size() + l.size());\n     }\n }`,\n            solution: ['6\\\\n']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        System.out.println(a);\n    }\n}\nclass A {\n    private B b;\n    public String toString() { return b.toString(); }\n}\nclass B {\n    private int x;\n    public String toString() { return Integer.toString(x); }\n}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 9,\n                cause: 'NullPointerException: b vale null'\n            }\n        },\n        [\n            {\n                question: 'Siano dati i tipi di riferimento A e B, e i tipi generici C<A> e C<B>. Se B è una sottoclasse di A allora C<B> è una sottoclasse di C<A>.',\n                solution: false\n            },\n            {\n                question: 'In Java esiste ereditarietà multipla fra interfacce: un tipo interfaccia può estendere uno o più tipi interfacce.',\n                solution: true\n            },\n            {\n                question: 'Siano dati due oggetti a e b, per i quali il test a.hashCode() == b.hashCode() ritorna true. In questo caso, si può stabilire con certezza che a e b sono identici, cioè puntano allo stesso oggetto.',\n                solution: false\n            },\n            {\n                question: 'Quando una classe C implementa un\\'interfaccia I, deve fornire (o ereditare) l\\'implementazione di tutti i metodi di I, oppure dichiarare C come abstract; in caso contrario, viene generato un errore in compilazione.',\n                solution: true\n            },\n            {\n                question: 'Nella gestione delle eccezioni in Java, un blocco try deve essere sempre seguito da almeno un blocco catch.',\n                solution: true\n            },\n            {\n                question: 'In Java la parola chiave final può essere impiegata nella testata del metodo di una classe per impedirne la ridefinizione in una sottoclasse.',\n                solution: true\n            },\n            {\n                question: 'La coercizione di tipo (cast) presente in altri linguaggi quali il C è vietata in Java, in quanto potenziale fonte di errori. Pertanto un\\'istruzione A a = (B) b; dà sempre un errore in compilazione, indipendentemente dalla definizione dei tipi A e B.',\n                solution: false\n            },\n            {\n                question: 'Quando in Java si parla di un metodo overloaded si fa riferimentoa un metodo \"sovraccarico\", cioè la cui implementazione genera una compilazione particolarmente pesante.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esame - 01/2020',\n    id: 'esame_2020_01',\n    exercises: [\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        B b = a.m(5);\n        b.m();\n    }\n}\nclass A {\n    B m(int x) { return new B(x); }\n}\nclass B {\n    int x;\n    B(int x) { this.x = x; }\n    void m() { if (x%2 != 0) throw new MyException(); }\n}\nclass MyException extends Exception {}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 14,\n                cause: 'MyException deve essere gestita, non essendo una RuntimeException'\n            }\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        B b1 = new B(new A());\n        b1.m(2);\n        B b2 = new B(new A());\n        b2.m(4);\n        System.out.println(b2);\n    }\n}\nclass A {\n    static int x = 2;\n    void m(int x) { this.x += x; }\n    public String toString() { return \"x=\"+x; }\n}\nclass B {\n    A a = null;\n    B(A a) { this.a = a; }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}`,\n            solution: ['x=8']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        J j = b;\n        if (a.equals(b))\n            System.out.println(j.m(1) + b.m(\"scritto\"));\n        else System.out.println(j.m(3));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {}\n\nclass A implements I {\n    int x = 10;\n    public int m(int z) { return x + z; }\n    public boolean equals(Object o) {\n        A obj = (A) o;\n        return x == obj.x;\n    }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}`,\n            solution: ['18']\n        },\n        {\n            code: `import java.util.*;\n\n public class Test {\n     public static void main(String[] args) {\n         List<A> ls = new ArrayList<>();\n         ls.add(new A(\"emu\")); ls.add(new A(\"coniglio\")); ls.add(new A(\"pipistrello\"));\n         Collections.sort(ls);\n         for(A a: ls)\n             System.out.println(a.s.length());\n     }\n }\n class A implements Comparable<A> {\n     String s;\n     A(String s) { this.s = s; }\n     public int compareTo(A a) {\n         return (s.length() - a.s.length());\n     }\n }`,\n            solution: ['3\\n8\\n11\\n']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        System.out.println(a);\n    }\n}\nclass A {\n    private B b;\n    public String toString() { return b.toString(); }\n}\nclass B {\n    private int x;\n    public String toString() { return Integer.toString(x); }\n}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 9,\n                cause: 'NullPointerException, b è null, non si può farne il toString()'\n            }\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    void m(C c) { System.out.println(\"g\"); }\n}\nclass B extends A {\n    void m(C c) { System.out.println(\"h\"); }\n    void m(D c) { System.out.println(\"i\"); }\n}\nclass C { }\nclass D extends C { }`,\n            solution: ['h']\n        },\n        {\n            code: `public class Test {\n    public static void main(String[] args) {\n        A a = new C();\n        a.doSomething();\n        I i1 = new C();\n        i1.aMethod();\n        I i2 = new D();\n        i2.aMethod();\n        B b = new D();\n        ((D) b).aMethod();\n    }\n}\ninterface I {\n    void aMethod();\n}\nclass A implements I {\n    int x;\n    void doSomething() {}\n    public void aMethod() {}\n}\nclass B {}\nclass C extends A {}\nclass D extends B {\n    void aMethod() {}\n}`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'D non è convertibile nel tipo I'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> l = new ArrayList<>();\n        for(int c=0; c<10; c++)\n            if(c%3 == 0) l.add(new A());\n            else if(c%2 == 0) l.add(new B());\n            else l.add(new C());\n        for(A a: l) {\n            a.setAttribute();\n            System.out.print(a);\n        }\n    }\n}\nclass A {\n    String str = null;\n    public void setAttribute() { str = \"0\"; }\n    public String toString() { return str; }\n}\nclass B extends A {\n    public void setAttribute() { str = \"1\"; }\n}\nclass C extends A {}`,\n            solution: ['0010100010']\n        },\n        [\n            {\n                question: 'La notazione <?> in Java indica che un parametro non è noto all\\'atto della compilazione del codice e verrà invece richiesto e inserito dall\\'utente a run-time, durante l\\'esecuzione del programma.',\n                solution: false\n            },\n            {\n                question: 'La coercizione di tipo (cast) presente in altri linguaggi quali il C è vietata in Java, in quanto potenziale fonte di errori. Pertanto, un\\'istruzione A a = (B) b; dà sempre un errore in compilazione, indipendentemente dalla definizione dei tipi A e B.',\n                solution: false\n            },\n            {\n                question: 'In Java, se B è una sottoclasse di A l\\'istruzione B a = new A(); genera errore a runtime.',\n                solution: false\n            },\n            {\n                question: 'Il tipo int[] è un tipo riferimento, come le classi.',\n                solution: true\n            },\n            {\n                question: 'Un tipo generico è una classe che contiene attributi di tipo Object nella propria definizione.',\n                solution: false\n            },\n            {\n                question: 'Le variabili dichiarate static sono modificabili anche da metodi private.',\n                solution: true\n            },\n            {\n                question: 'Sia data una classe Java A che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.',\n                solution: true\n            },\n            {\n                question: 'Con il termine \"autoboxing\" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esempio 1',\n    id: 'esempio_1',\n    exercises: [\n        {\n            code: `public class Tre {\n    class A {\n        public A(int k) {System.out.print(k);}\n        public void finalize() {System.out.print(\"C\");}\n    }\n    class B extends A {\n        public B(int k) {System.out.print(k);}\n        public void finalize() {System.out.print(\"B\");}\n    }\n    public static void main (String z[]){\n        new Tre();\n    }\n    Tre(){\n        A a=new B(3);\n        B b=(B)a;\n        a=null;\n        b=new B(3);\n        System.gc(); System.runFinalization();\n} }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 7,\n                cause: 'Costruttore superclasse non chiamato'\n            }\n        },\n        {\ncode: `#include <iostream>\nusing namespace std;\nint x[] = {-2, -1, 0, 1, 2};\nvoid f(int* x, int y[]) {\n    x[*y] = -y[*x];\n}\nint main(int argc, char** argv) {\n    int * p = x + 1;\n    f(p, p);\n    for (int * s = x; s < x + 5; s++) {\n        cout << *s;\n    }\n    return 0;\n}`,\n            solution: ['2-1012']\n        },\n        {\n            code: `public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(3);\n}}`,\n            solution: ['243']\n        },\n        {\n            code: `class SuperB{\n    SuperB(){ System.out.print(\"S\");}\n    void f() { System.out.print(\"Z\");}\n}\npublic class B extends SuperB {\n    B(){ System.out.print(\"B\");}\n    void f() { System.out.print(\"C\");}\n    public static void main(String args) {System.exit(1);}\n    public static void main(String[] args) {\n        SuperB b=new SuperB();\n        B a=(B)b;\n        a.f();\n}}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 11,\n                cause: 'Non si può fare il cast dall\\'istanza della superclasse ad una sua classe figlia'\n            }\n        },\n        {\n            code: `import java.util.*;\npublic class Due {\n    Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+\" \"+x.j);}\n} }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 11,\n                cause: 'Un metodo statico non può accedere ai campi di istanza della stessa classe'\n            }\n        },\n        {\n            code: `class SuperB{\n    SuperB(){ System.out.print(\"D\");}\n    void f() { System.out.print(\"Z\");}\n}\npublic class B extends SuperB {\n    B(){ System.out.print(\"E\");}\n    void f() { System.out.print(\"O\");}\n    public static void main(String pippo) {System.exit(1);}\n    public static void main(String[] args) {\n        B b=new B();\n        SuperB a=(SuperB)b;\n        a.f();\n}}`,\n            solution: ['DEO']\n        },\n        {\n            code: `public class Sei {\n    char f() { return '6'; }\n    public static void main(String e[]) {\n        Sei a = new Sei();\n        Sei b = new Sette();\n        Sette c = new Sette();\n        System.out.print(a.f() + \" \" + b.f() + \" \" + c.f() + \" \");\n        char ch[] = {'C', 'A', 'C', 'A', 'C','A'};\n        int i1 = 0, i2 = 2, i3 = 4;\n        if (a.equals(b)) i1++;\n        if (b.equals(a)) i2++;\n        if (c.equals(b)) i3++;\n        System.out.print(ch[i1] + \" \" + ch[i2] + \" \" + ch[i3]);\n} }\nclass Sette extends Sei {\n    char f() { return '7'; }\n    public boolean equals(Object a) {\n        return (a instanceof Sei);\n    }\n    public int hashCode() { return 3; }\n}`,\n            solution: ['6 7 7 C A A']\n        },\n        {\n            code: `import java.util.*;\npublic class Uno {\n    static Collection c=new HashSet();\n    public static void main(String a[]) {\n        Collection c=new LinkedList();\n        Uno u=new Uno();\n        c.add(u); c.add(u); c.add(u);\n        u.f();\n        System.out.print(c.size());\n        System.gc();System.runFinalization();\n    }\n    void f() {\n        A a=new A(\"S\");\n        A b=new A(\"K\");\n        c.add(b);\n    }\n    class A {\n        String s=\"\";\n        A(String s) {this.s=s; System.out.print(this);}\n        public String toString(){return s;}\n        public void finalize(){System.out.print(this);}\n} }`,\n            solution: ['SK3S']\n        },\n        [\n            {\n                question: 'Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.',\n                solution: false\n            },\n            {\n                question: 'L\\'esistenza in una classe di un metodo f(int x), e in una sua superclasse di un metodo f(String s) è un esempio di overriding.',\n                solution: false\n            },\n            {\n                question: 'L\\'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.',\n                solution: true\n            },\n            {\n                question: 'Se a.equals(b) è vero, deve essere a.hashCode==b.hashCode.',\n                solution: true\n            },\n            {\n                question: 'Se a.equals(b) è falso, deve essere a.hashCode!=b.hashCode.',\n                solution: false\n            },\n            {\n                question: 'Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore vuoto.',\n                solution: false\n            },\n            {\n                question: 'int a[] è un oggetto.',\n                solution: true\n            },\n            {\n                question: 'In un programma ci possono essere due classi chiamate F.',\n                solution: true\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esempio 2',\n    id: 'esempio_2',\n    exercises: [\n        {\n            code: `class B{\n    B(){ System.out.print(\"C\");}\n    void f() { System.out.print(\"D\");}\n}\npublic class A extends B {\n    A(){ System.out.print(\"A\");}\n    void f() { System.out.print(\"B\");}\n    public static void main(String[] args) {\n        A b=new A();\n        B a=(B)b;\n        a.f();\n}}`,\n            solution: ['CAB']\n        },\n        {\ncode: `class B{\n    B(){ System.out.print(\"C\");}\n    void f() { System.out.print(\"D\");}\n}\npublic class A extends B {\n    A(){ System.out.print(\"A\");}\n    void f() { System.out.print(\"B\");}\n    public static void main(String k[]) {\n        B b=new B();\n        A a=(A)b;\n        a.f();\n}}`,\n            solution: {\n                type: 'RUNTIME',\n                row: 10,\n                cause: 'Non si può fare il casting da superclasse a classe figlia'\n            }\n        },\n        {\n            code: `package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=3;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n} }\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n} }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 10,\n                cause: 'x ha visibilità package e B non può accederci essendo in un package diverso'\n            }\n        },\n        {\n            code: `#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid cambia( int m, int n[7]) {\n    (*(n+m))--; m++; n--;\n}\nint main(){\n    int vet[] = {1,2,3,4,5};\n    cambia(vet[4],vet-1);\n    cambia(0,&vet[4]);\n    int i=0;\n    for (i=0;i<5;i++) cout << vet[i];\n    return 0;\n}`,\n            solution: ['12343']\n        },\n        {\n            code: `public class A{\n    public static int x;\n    A(int s) {x=s;}\n    void f() {System.out.print(x);}\n    public static void main(String a[]){\n        A b=new A(3);\n        A c=new A(4);\n        b.f();\n        c.f();\n    }\n}`,\n            solution: ['44']\n        },\n        {\n            code: `public class B {\n    static int s=0;\n    B(int i){s=i;}\n    public static void main(String[] args) {\n        B b1=new B(3);\n        B b2=new B(3);\n        B b3=new B(1);\n        if (b1.equals(b2)) System.out.print(\"A\");\n            else System.out.print(\"B\");\n        if (b1.s==b3.s) System.out.print(\"D\");\n            else System.out.print(\"C\");\n} }`,\n            solution: ['BD']\n        },\n        {\n            code: `class A {\n    A(int x) {System.out.print(\"X\");}\n    A() {System.out.print(\"Z\");}\n    public void finalize() {System.out.print(\"Y\");}\n}\nclass B extends A {\n    B(int x) {System.out.print(\"A\");}\n    B() {System.out.print(\"C\");}\n    public void finalize() {System.out.print(\"B\");}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}`,\n            solution: ['ZAB']\n        },\n        {\n            code: `package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.A) ((A) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(3);\n    }\n}\nclass B extends A{\n    void f(int k) {\n        System.out.print(k*2);\n    }\n}`,\n            solution: ['66']\n        },\n        [\n            {\n                question: 'Non è possibile istanziare una Collection.',\n                solution: true\n            },\n            {\n                question: 'In una classe ci può essere un solo metodo main.',\n                solution: false\n            },\n            {\n                question: 'In un programma ci può essere un solo metodo public static void main(String[] args).',\n                solution: false\n            },\n            {\n                question: 'In Java esiste ereditarietà multipla.',\n                solution: false\n            },\n            {\n                question: 'Java usa solo la heap perché tutta la memoria è allocata dinamicamente con le new().',\n                solution: false\n            },\n            {\n                question: 'Una Interface non può ereditare da una classe.',\n                solution: true\n            },\n            {\n                question: 'Se di un metodo f faccio overriding non è detto che ci siano più “signatures” (firme) di metodi legate al nome f.',\n                solution: true\n            },\n            {\n                question: 'Se di un metodo f faccio overloading non è detto che ci siano più “signatures” (firme) di metodi legate al nome f.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nconst EXAM: Exam = {\n    name: 'Esempio 3',\n    id: 'esempio_3',\n    exercises: [\n        {\n            code: `class A {\nA(){System.out.print(\"A\");}\nA(int i) {System.out.print(\"A\"+i);}\npublic void finalize() {System.out.print(\"Z\");}\n}\nclass B extends A{\nB(){System.out.print(\"B\");}\nB(int i) {System.out.print(\"B\"+i);}\npublic void finalize() {System.out.println(\"W\");}\n}\npublic class Main {\n    public static void main(String[] args) {\n        new B(3);\n        System.gc();\n    }\n}`,\n            solution: ['AB3W\\\\n']\n        },\n        {\ncode: `#include <iostream.h>\nvoid f(char *x, int *y) {\n    (*y)++;\n    X[*y]++;    }\nvoid g(char x[], int y) {\n    y--;\n    X[y]--; }\nint main(){\n    char x[2];\n    int y;\n    x[0]='D'; x[1]='Q'; y=0;\n    f(x,&y);\n    g(x,y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }`,\n            solution: {\n                type: 'COMPILETIME',\n                row: 4,\n                cause: 'La variabile X non è definita'\n            }\n        },\n        {\n            code: `class B {\n    int s=0;\n    B(int s) {this.s=s;}\n    public boolean equals(Object o) {\n        return (s==((B)o).s);\n    }   }\nclass A extends B {\n    static int w=0;\n    A() {\n        super(++w);\n    }}\npublic class Main {\n    public static void main(String[] args) {\n        B b1=new B(2);  B b2=new A();  A a=new A();\n        if (b1.equals(b2)) System.out.print(\"A\");\n            else System.out.print(\"B\");\n        if (b1.equals(a)) System.out.print(\"C\");\n            else System.out.print(\"D\");\n  }   }`,\n            solution: ['BC']\n        },\n        {\n            code: `public class B {\n    int s=0;\n    B(int i){s=i;}\n    public static void main(String[] args) {\n        B b1=new B(3);\n        B b2=new B(3);\n        B b3=new B(1);\n        if (b1.equals(b3)) System.out.print(\"A\");\n            else System.out.print(\"B\");\n        if (b2.equals(b3)) System.out.print(\"C\");\n            else System.out.print(\"D\");\n    }\n}`,\n            solution: ['BD']\n        },\n        {\n            code: `interface A {\n    int f(int x);\n}\nclass B implements A {\n    public int f(int w) {\n        return w*2;\n}}\nclass C extends B {\n    int f(float w){\n        return (int)(w*4);\n}}\npublic class Main {\n    public static void main(String[] args) {\n        A a = new C();\n        System.out.print(a.f(3));\n}}`,\n            solution: ['6']\n        },\n        {\n            code: `public class Otto implements Cloneable{\n    int k=0;\n    public Object clone() {\n        Object copia=null;\n        try {\n            copia=super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        ((Otto)copia).k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof Otto)) return false;\n        return k==((Otto)x).k;\n    }\n    public static void main(String[] args) {\n        Otto b= new Otto();\n        Otto c=(Otto)b.clone();\n        Otto d=new Otto();\n        if (b.equals(c)) System.out.print(\"C\");\n        if (c.equals(d)) System.out.print(\"B\");\n        if (d.equals(b)) System.out.print(\"A\");\n}}`,\n            solution: ['A']\n        },\n        {\n            code: `public class Main { //Eseguito passando argomenti\n    int MAIN=10;\n    Main(){\n        MAIN++;\n    }\n    void main(String args){\n        MAIN--;\n    }\n    public static void main(String[] args) {\n        Main maiN=new Main();\n        maiN.MAIN++;\n        maiN.main(args[0]);\n        System.out.print(maiN.MAIN);\n    }\n}`,\n            solution: ['11']\n        },\n        {\n            code: `import java.util.*;\npublic class Sette {\n    Sette(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s=\"A\"+(k%4);\n            a.add(s);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String>i=a.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            count++;\n        }\n        i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            count++;\n        }\n        System.out.print(count);\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}`,\n            solution: ['14']\n        },\n        [\n            {\n                question: 'Su qualunque oggetto si può chiamare il metodo clone per ottenerne una copia.',\n                solution: false\n            },\n            {\n                question: 'Il metodo equals applicato a due oggetti della stessa classe restituisce true se i due oggetti hanno lo stesso stato.',\n                solution: false\n            },\n            {\n                question: 'Da un punto di vista di efficienza di esecuzione lo static binding è meglio del dynamic binding.',\n                solution: true\n            },\n            {\n                question: 'A differenza del C, Java usa solo la heap e non lo stack.',\n                solution: false\n            },\n            {\n                question: 'Un oggetto ed un suo clone sono identici.',\n                solution: false\n            },\n            {\n                question: 'Ogni metodo di una classe java può leggere il valore di una qualunque variabile di istanza della classe stessa.',\n                solution: false\n            },\n            {\n                question: 'Esistono metodi che possono essere eseguiti anche senza creare istanze di una classe.',\n                solution: true\n            },\n            {\n                question: 'L\\' ereditarietà multipla è ammessa per le interfacce.',\n                solution: false\n            }\n        ]\n    ]\n};\n\nexport default EXAM;\n","import { Exam } from '../types/exam.interface';\n\nimport Esame_2005_06 from './esame_2005-06';\nimport Esame_2005_07 from './esame_2005-07';\nimport Esame_2006_06 from './esame_2006-06';\nimport Esame_2011_06 from './esame_2011-06';\nimport Esame_2011_07 from './esame_2011-07';\nimport Esame_2011_09 from './esame_2011-09';\nimport Esame_2016_01 from './esame_2016-01';\nimport Esame_2016_02 from './esame_2016-02';\nimport Esame_2017_06 from './esame_2017-06';\nimport Esame_2017_07 from './esame_2017-07';\nimport Esame_2018_06 from './esame_2018-06';\nimport Esame_2018_07 from './esame_2018-07';\nimport Esame_2018_09 from './esame_2018-09';\nimport Esame_2019_01 from './esame_2019-01';\nimport Esame_2019_02 from './esame_2019-02';\nimport Esame_2019_06 from './esame_2019-06';\nimport Esame_2019_07 from './esame_2019-07';\nimport Esame_2019_09 from './esame_2019-09';\nimport Esame_2020_01 from './esame_2020_01';\nimport Esempio_1 from './esempio_1';\nimport Esempio_2 from './esempio_2';\nimport Esempio_3 from './esempio_3';\n\nconst EXAMS: Exam[] = [\n    Esame_2005_06,\n    Esame_2005_07,\n    Esame_2006_06,\n    Esame_2011_06,\n    Esame_2011_07,\n    Esame_2011_09,\n    Esame_2016_01,\n    Esame_2016_02,\n    Esame_2017_06,\n    Esame_2017_07,\n    Esame_2018_06,\n    Esame_2018_07,\n    Esame_2018_09,\n    Esame_2019_01,\n    Esame_2019_02,\n    Esame_2019_06,\n    Esame_2019_07,\n    Esame_2019_09,\n    Esame_2020_01,\n    Esempio_1,\n    Esempio_2,\n    Esempio_3\n];\n\nexport default EXAMS;\n","import firebase from 'firebase/app';\nimport 'firebase/messaging';\n\n// Do not mess up with this\nconst config = {\n    apiKey: 'AIzaSyDiv4wmKQfkxqT4nt3BLf9XGC1lIxWMias',\n    authDomain: 'unitn-tronchet.firebaseapp.com',\n    databaseURL: 'https://unitn-tronchet.firebaseio.com',\n    projectId: 'unitn-tronchet',\n    storageBucket: 'unitn-tronchet.appspot.com',\n    messagingSenderId: '507166536810',\n    appId: '1:507166536810:web:c7ad30bbc2141c54'\n};\n\nexport default firebase.initializeApp(config);\n","import { FormAnswer } from '@/schema/types/answer.interface';\nimport { TrueOrFalseExercise, ErrorSolution, OutputSolution, CodeExercise, instanceOfOutputSolution, Exercise, instanceOfTrueOrFalseExercise, instanceOfCodeExercise } from '@/schema/types/exam.interface';\n\nfunction correctTrueOrFalseQuestion(answer: boolean | null, solution: boolean, points: number): number {\n    if (answer === null) {\n        return 0;\n    }\n    else {\n        return (answer === solution ? points : -points);\n    }\n}\n\nfunction correctTrueOrFalse(answer: FormAnswer, exercise: TrueOrFalseExercise, points: number): number {\n    let score = 0;\n    if (answer.type === 'TRUE_OR_FALSE') {\n        answer.trueOrFalse.forEach((ans, index) => score += correctTrueOrFalseQuestion(ans, exercise[index].solution, points));\n    }\n    else {\n        console.error('Error, answer type does not match');\n    }\n    return score;\n}\n\nfunction correctCodeError(answer: FormAnswer, solution: ErrorSolution, points: number): number {\n    if ((answer.type === 'COMPILETIME' || answer.type === 'RUNTIME') && +answer.row === solution.row) {\n        if (answer.type === solution.type) {\n            return points;\n        }\n        else {\n            return (3 * points) / 4;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction correctCodeOutput(answer: FormAnswer, solution: OutputSolution, points: number): number {\n    if (answer.type === 'OUTPUT' && solution.indexOf(answer.output) !== -1) {\n        return points;\n    }\n    else {\n        return 0;\n    }\n}\n\nfunction correctCode(answer: FormAnswer, exercise: CodeExercise, points: number): number {\n    if (answer.type === '') {\n        return 0;\n    }\n    else if (instanceOfOutputSolution(exercise.solution)) {\n        return correctCodeOutput(answer, exercise.solution, points);\n    }\n    else {\n        return correctCodeError(answer, exercise.solution, points);\n    }\n}\n\nexport function correctExam(answers: FormAnswer[], exercises: Exercise[], points: { code: number, trueOrFalse: number }): number {\n    let score = 0;\n    exercises.forEach((exercise, index) => {\n        if (instanceOfTrueOrFalseExercise(exercise)) {\n            score += correctTrueOrFalse(answers[index], exercise, points.trueOrFalse);\n        }\n        else {\n            score += correctCode(answers[index], exercise, points.code);\n        }\n    });\n    return score;\n}\n\nexport enum Valutation {\n    EMPTY,\n    RIGHT,\n    WRONG,\n    PARTIAL,\n    NONE\n}\n\nfunction isCodeExerciseCorrect(answer: FormAnswer, exercise: CodeExercise): Valutation {\n    if (answer.type === '') {\n        return Valutation.EMPTY;\n    }\n    else {\n        switch (correctCode(answer, exercise, 1)) {\n            case 1:\n                return Valutation.RIGHT;\n            case 0.75:\n                return Valutation.PARTIAL;\n            case 0:\n                return Valutation.WRONG;\n            default:\n                return Valutation.NONE;\n        }\n    }\n}\n\nexport function correctExercise(answer: FormAnswer, exercise: Exercise): Valutation {\n    if (instanceOfCodeExercise(exercise)) {\n        return isCodeExerciseCorrect(answer, exercise);\n    }\n    else {\n        return Valutation.NONE;\n    }\n}\n\nexport function correctQuestion(answer: boolean | null, solution: boolean): Valutation {\n    if (answer === null) {\n        return Valutation.EMPTY;\n    }\n    else if (answer === solution) {\n        return Valutation.RIGHT;\n    }\n    else {\n        return Valutation.WRONG;\n    }\n}\n\nexport enum Outcome {\n    INDECENTE,\n    PESSIMO,\n    BOCCIATO,\n    PROMOSSO,\n    GRANDE\n}\n\nexport function outcome(percentual: number): Outcome {\n    if (percentual < 0) {\n        return Outcome.INDECENTE;\n    }\n    else if (percentual < 40) {\n        return Outcome.PESSIMO;\n    }\n    else if (percentual < 60) {\n        return Outcome.BOCCIATO;\n    }\n    else if (percentual < 90) {\n        return Outcome.PROMOSSO;\n    }\n    else {\n        return Outcome.GRANDE;\n    }\n}\n","var map = {\n\t\"./en.json\": \"edd4\",\n\t\"./it.json\": \"0825\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"49f8\";","import firebase, { User } from 'firebase/app';\nimport 'firebase/auth';\nimport { Store } from 'vuex';\n\nimport firebaseApp from './firebase';\n\nclass FireAuth {\n\n    private _user: User | null = null;\n    get user(): User | null {\n        return this._user;\n    }\n    set user(user: User | null) {\n        this.store.dispatch('setUser', user);\n        this._user = user;\n    }\n\n    private app: firebase.app.App;\n    private auth: firebase.auth.Auth;\n    private store: Store<any & { user: User }>;\n\n    constructor(app: firebase.app.App, store: Store<any & { user: User }>) {\n        this.app = app;\n        this.auth = this.app.auth();\n        this.store = store;\n        this.onUserChanged();\n    }\n\n    async login(email: string, password: string): Promise<void> {\n        if (!this.isLoggedIn()) {\n            await this.auth.signInWithEmailAndPassword(email, password);\n        }\n    }\n\n    async logout(): Promise<void> {\n        await this.auth.signOut();\n    }\n\n    private isLoggedIn(): boolean {\n        return this.user !== null;\n    }\n\n    private onUserChanged() {\n        this.auth.onAuthStateChanged(user => {\n            this.user = user;\n        });\n    }\n}\n\nlet auth: FireAuth;\n\nexport { User };\n\nexport function init(store: Store<any & { user: User }>) {\n    auth = new FireAuth(firebaseApp, store);\n}\n\nexport function get(): FireAuth {\n    return auth;\n}\n","export interface TrueOrFalseQuestion {\n    question: string;\n    solution: boolean;\n}\n\nexport type TrueOrFalseExercise = TrueOrFalseQuestion[];\n\nexport interface ErrorSolution {\n    type: 'COMPILETIME' | 'RUNTIME';\n    row: number;\n    cause: string;\n}\n\nexport type OutputSolution = string[];\n\nexport interface CodeExercise {\n    code: string;\n    solution: OutputSolution | ErrorSolution;\n}\n\nexport function instanceOfOutputSolution(value: OutputSolution | ErrorSolution): value is OutputSolution {\n    return Array.isArray(value) && (!value.length || value.every(el => typeof el === 'string'));\n}\n\nexport function instanceOfErrorSolution(value: OutputSolution | ErrorSolution): value is ErrorSolution {\n    const supposed = value as ErrorSolution;\n    return (supposed.type === 'COMPILETIME' || supposed.type === 'RUNTIME') && (typeof supposed.row === 'number') && (typeof supposed.cause === 'string');\n}\n\nexport function instanceOfCodeExercise(value: TrueOrFalseExercise | CodeExercise): value is CodeExercise {\n    const supposed = value as CodeExercise;\n    return (typeof supposed.code === 'string') && (instanceOfOutputSolution(supposed.solution) || instanceOfErrorSolution(supposed.solution));\n}\n\nexport function instanceOfTrueOrFalseExercise(value: TrueOrFalseExercise | CodeExercise): value is TrueOrFalseExercise {\n    return Array.isArray(value) && value.every(el => (typeof el.question === 'string') && (typeof el.solution === 'boolean'));\n}\n\nexport type Exercise = (TrueOrFalseExercise | CodeExercise);\n\nexport interface Exam {\n    name: string;\n    id: string;\n    exercises: Exercise[];\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=style&index=0&id=3237f82e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=style&index=0&id=3237f82e&scoped=true&lang=css&\"","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\nimport 'vuetify/src/stylus/app.styl';\n\nVue.use(Vuetify, {\n  iconfont: 'md',\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('app-toolbar'),_c('app-drawer'),_c('app-content',[_c('router-view')],1),_c('app-footer')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-toolbar',{staticClass:\"toolbar\",attrs:{\"color\":\"primary\",\"extension-height\":_vm.heightStateBar,\"fixed\":\"\",\"clipped-left\":\"\",\"dark\":\"\",\"app\":\"\"},scopedSlots:_vm._u([{key:\"extension\",fn:function(){return [_c('app-state-bar',{attrs:{\"height\":_vm.heightStateBar}})]},proxy:true}])},[(_vm.userLogged)?_c('v-toolbar-side-icon',{on:{\"click\":function($event){return _vm.toggleDrawer()}}}):_vm._e(),_c('v-spacer'),_c('v-toolbar-title',{attrs:{\"id\":\"title\"}},[_c('span',[_vm._v(_vm._s(_vm.title))])]),_c('v-spacer'),(_vm.userLogged)?_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":_vm.logout}},[_c('v-icon',[_vm._v(\"exit_to_app\")])],1):_vm._e()],1),_c('v-snackbar',{attrs:{\"color\":_vm.snackbar.color},model:{value:(_vm.snackbar.show),callback:function ($$v) {_vm.$set(_vm.snackbar, \"show\", $$v)},expression:\"snackbar.show\"}},[_c('span',[_vm._v(_vm._s(_vm.snackbar.message))]),_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\"},on:{\"click\":function($event){_vm.snackbar.show = false}}},[_vm._v(_vm._s(_vm.$t('toast.close')))])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.show)?_c('v-flex',{attrs:{\"white\":\"\"}},[_c('v-progress-linear',{staticClass:\"ma-0\",attrs:{\"color\":_vm.color,\"height\":_vm.height,\"value\":_vm.value}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component, Prop, Emit } from 'vue-property-decorator';\n\n@Component\nexport default class AppStateBar extends Vue {\n\n  @Prop({ type: Number, required: true })\n  height!: number;\n\n  get show(): string {\n    return this.$store.state.stateBar.visibility;\n  }\n\n  get value(): string {\n    return this.$store.state.stateBar.value;\n  }\n\n  get color(): string {\n    return this.$store.state.stateBar.color;\n  }\n\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StateBar.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StateBar.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StateBar.vue?vue&type=template&id=b4f8477c&scoped=true&\"\nimport script from \"./StateBar.vue?vue&type=script&lang=ts&\"\nexport * from \"./StateBar.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b4f8477c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VProgressLinear } from 'vuetify/lib/components/VProgressLinear';\ninstallComponents(component, {VFlex,VProgressLinear})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component, Prop, Emit } from 'vue-property-decorator';\n\nimport AppStateBar from './state-bar/StateBar.vue';\nimport { get as getAuth } from '@/utils/auth';\n\n\n@Component({\n  components: {\n    AppStateBar\n  }\n})\nexport default class AppToolbar extends Vue {\n\n  snackbar = {\n    show: false,\n    message: this.$root.$i18n.t('toast.logout'),\n    color: 'error'\n  };\n\n  heightStateBar = 5;\n\n  get title(): string {\n    return this.$store.getters.toolbarTitle;\n  }\n\n  get userLogged(): string {\n    return this.$store.getters.loggedIn;\n  }\n\n  toggleDrawer(): void {\n    this.$store.dispatch('toggleDrawer');\n  }\n\n  logout(): void {\n    getAuth().logout()\n      .catch(error => {\n        console.log('Error in logging out', error);\n        this.snackbar.show = true;\n      });\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Toolbar.vue?vue&type=template&id=53aeb43f&scoped=true&\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=ts&\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Toolbar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"53aeb43f\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\nimport { VToolbarSideIcon } from 'vuetify/lib/components/VToolbar';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VIcon,VSnackbar,VSpacer,VToolbar,VToolbarSideIcon,VToolbarTitle})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.userLogged)?_c('v-navigation-drawer',{staticClass:\"pb-3\",attrs:{\"clipped\":\"\",\"fixed\":\"\",\"app\":\"\"},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('v-list',{attrs:{\"dense\":\"\"}},[_vm._l((_vm.items),function(item){return [(item.heading)?_c('v-layout',{key:item.heading,attrs:{\"row\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[(item.heading)?_c('v-subheader',[_vm._v(_vm._s(item.heading))]):_vm._e()],1)],1):(item.children)?_c('v-list-group',{key:item.text,staticClass:\"pa-1\",attrs:{\"prepend-icon\":item.model ? item.icon : item['icon-alt'],\"append-icon\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [_c('v-list-tile',[_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(_vm._s(item.text))])],1)],1)]},proxy:true}],null,true),model:{value:(item.model),callback:function ($$v) {_vm.$set(item, \"model\", $$v)},expression:\"item.model\"}},_vm._l((item.children),function(child,i){return _c('v-list-tile',{key:i,staticClass:\"ml-3\",class:{ 'current-exam': child.selected },on:{\"click\":function($event){return _vm.$router.push(child.link)}}},[(child.icon)?_c('v-list-tile-action',[_c('v-icon',{attrs:{\"color\":\"primary\"}},[_vm._v(_vm._s(child.icon))])],1):_vm._e(),_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(_vm._s(child.text))])],1)],1)}),1):_c('v-list-tile',{key:item.text,staticClass:\"pa-1\",on:{\"click\":function($event){return _vm.$router.push(item.link)}}},[_c('v-list-tile-action',[_c('v-icon',{attrs:{\"color\":\"warning\"}},[_vm._v(_vm._s(item.icon))])],1),_c('v-list-tile-content',[_c('v-list-tile-title',[_vm._v(_vm._s(item.text))])],1)],1)]})],2)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component, Watch } from 'vue-property-decorator';\nimport { Exam } from '@/schema/types/exam.interface';\n\n@Component\nexport default class AppDrawer extends Vue {\n\n  get exams(): Exam[] {\n    return this.$store.state.exams;\n  }\n\n  get items() {\n    return [\n      /* { icon: 'description', text: 'Rules', link: '/rules' },\n      { icon: 'group', text: 'Advices', link: '/advices' }, */\n      { icon: 'home', text: 'Home', link: '/home' },\n      {\n        'icon': 'keyboard_arrow_up',\n        'icon-alt': 'keyboard_arrow_down',\n        'text': this.$root.$i18n.t('drawer.exams'),\n        'model': false,\n        'children': this.exams.map((exam, index) => ({\n          icon: 'create',\n          text: exam.name,\n          link: `/exam/${exam.id}`,\n          selected: index === this.currentExam\n        }))\n      }\n    ];\n  }\n\n  get show(): boolean {\n    return this.$store.getters.showDrawer;\n  }\n  set show(value: boolean) {\n    if (value) {\n      this.$store.dispatch('showDrawer');\n    }\n    else {\n      this.$store.dispatch('hideDrawer');\n    }\n  }\n\n  get currentExam(): number {\n    return this.$store.state.test.exam;\n  }\n\n  get userLogged(): string {\n    return this.$store.getters.loggedIn;\n  }\n\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Drawer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Drawer.vue?vue&type=template&id=73a30956&scoped=true&\"\nimport script from \"./Drawer.vue?vue&type=script&lang=ts&\"\nexport * from \"./Drawer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Drawer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"73a30956\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListGroup } from 'vuetify/lib/components/VList';\nimport { VListTile } from 'vuetify/lib/components/VList';\nimport { VListTileAction } from 'vuetify/lib/components/VList';\nimport { VListTileContent } from 'vuetify/lib/components/VList';\nimport { VListTileTitle } from 'vuetify/lib/components/VList';\nimport { VNavigationDrawer } from 'vuetify/lib/components/VNavigationDrawer';\nimport { VSubheader } from 'vuetify/lib/components/VSubheader';\ninstallComponents(component, {VFlex,VIcon,VLayout,VList,VListGroup,VListTile,VListTileAction,VListTileContent,VListTileTitle,VNavigationDrawer,VSubheader})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-content',{staticClass:\"content\"},[_c('v-container',{attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_vm._t(\"default\")],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component } from 'vue-property-decorator';\n\n@Component\nexport default class AppContent extends Vue {}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Content.vue?vue&type=template&id=3237f82e&scoped=true&\"\nimport script from \"./Content.vue?vue&type=script&lang=ts&\"\nexport * from \"./Content.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Content.vue?vue&type=style&index=0&id=3237f82e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3237f82e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VContent } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer,VContent})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.show)?_c('v-footer',{staticClass:\"footer\",attrs:{\"color\":\"primary\",\"app\":\"\",\"absolute\":_vm.isPhone,\"height\":\"55\",\"dark\":\"\"}},[_c('v-layout',{attrs:{\"row\":!_vm.isPhone,\"column\":_vm.isPhone,\"primary\":\"\"}},[_c('v-flex',{class:{ phoneSpace: _vm.isPhone },attrs:{\"text-xs-center\":\"\",\"white--text\":\"\",\"order-xs2\":\"\",\"order-sm1\":\"\",\"xs12\":\"\"}},[_c('a',{staticClass:\"link\",attrs:{\"href\":\"https://en.wikipedia.org/wiki/MIT_License\"}},[_vm._v(\"© 2019 MIT License Copyright\")])]),_c('v-flex',{attrs:{\"text-xs-center\":\"\",\"white--text\":\"\",\"order-xs1\":\"\",\"order-sm2\":\"\",\"xs12\":\"\"}},[_c('a',{staticClass:\"link\",attrs:{\"href\":\"https://github.com/euberdeveloper\"}},[_vm._v(\"Euber Developer\")])])],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport { Component } from 'vue-property-decorator';\n\n@Component\nexport default class AppFooter extends Vue {\n  $vuetify: any;\n\n  get show(): boolean {\n    return this.$store.state.footer;\n  }\n\n  get isPhone(): boolean {\n    return this.$vuetify.breakpoint.name === 'xs';\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Footer.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Footer.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Footer.vue?vue&type=template&id=7c7b588c&scoped=true&\"\nimport script from \"./Footer.vue?vue&type=script&lang=ts&\"\nexport * from \"./Footer.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Footer.vue?vue&type=style&index=0&id=7c7b588c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7c7b588c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VFooter } from 'vuetify/lib/components/VFooter';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VFlex,VFooter,VLayout})\n","\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue, Watch } from 'vue-property-decorator';\nimport AppToolbar from '@/components/toolbar/Toolbar.vue';\nimport AppDrawer from '@/components/drawer/Drawer.vue';\nimport AppContent from '@/components/content/Content.vue';\nimport AppFooter from '@/components/footer/Footer.vue';\n\n@Component({\n  components: {\n    AppToolbar,\n    AppDrawer,\n    AppContent,\n    AppFooter\n  },\n})\nexport default class App extends Vue {\n\n  get user() {\n    return this.$store.state.user;\n  }\n\n  @Watch('user', { immediate: true })\n  watchUser(newValue: any) {\n    if (this.user === null) {\n      this.$router.push('/login');\n    }\n  }\n\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=aa1382f8&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&id=aa1382f8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"aa1382f8\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\ninstallComponents(component, {VApp})\n","import Vue from 'vue';\nimport Router from 'vue-router';\n\nconst Exam = () => import('@/views/ExamView.vue');\nconst Home = () => import('@/views/HomeView.vue');\nconst Login = () => import('@/views/LoginView.vue');\nconst NotFound = () => import('@/views/NotFound.vue');\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/exam/:exam',\n      name: 'exam',\n      props: route => ({ exam: route.params.exam }),\n      component: Exam\n    },\n    {\n      path: '/login',\n      name: 'login',\n      component: Login\n    },\n    {\n      path: '/home',\n      name: 'home',\n      component: Home\n    },\n    {\n      path: '*',\n      name: 'not-found',\n      props: route => ({ url: route.path }),\n      component: NotFound\n    }\n  ]\n});\n","import axios from 'axios';\nimport firebaseApp from './firebase';\n\nasync function init(): Promise<void> {\n    const messaging = firebaseApp.messaging();\n    // Do not mess up with this\n    messaging.usePublicVapidKey('BJNXnqmvcKmmXqEXCUPyLFtYhxOOvzQ4fSY2XfbUt3XCAhi8w1fZfRsy-82Mq1oiqRV29iP_kDAek_qzEB1J1p4');\n    try {\n        await messaging.requestPermission();\n        console.debug('Notification permission granted');\n        const token = await messaging.getToken();\n        console.debug('Messaging token ', token);\n        try {\n            const requestResult = await axios.post('/api/register-token', { token });\n            console.debug(requestResult.data);\n\n            messaging.onMessage(message => {\n                console.debug('New message', message);\n            });\n        }\n        catch (error) {\n            console.error('Cloud Messaging Error: ' + error.message, error.error);\n        }\n    }\n    catch (error) {\n        console.error('Error in initializing cloud messaging ', error);\n    }\n}\n\nexport function initCloudMessaging(): void {\n    if (process.env.NODE_ENV === 'production') {\n        init();\n    }\n}\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered () {\n      console.log('Service worker has been registered.');\n    },\n    cached () {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound () {\n      console.log('New content is downloading.');\n    },\n    updated () {\n      console.log('New content is available; please refresh.');\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","import Vue from 'vue';\nimport VueI18n, { LocaleMessages } from 'vue-i18n';\n\nVue.use(VueI18n);\n\nfunction loadLocaleMessages(): LocaleMessages {\n  const locales = require.context('./locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n  const messages: LocaleMessages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nexport default new VueI18n({\n  locale: navigator.language.split('-')[0] || process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages()\n});\n","import Vue from 'vue';\nimport '@/plugins/vuetify';\nimport App from '@/App.vue';\nimport router from '@/router';\nimport store from '@/store';\nimport { initCloudMessaging } from '@/utils/cloud-messaging';\n\nimport VueAnalytics from 'vue-analytics';\nimport '@/registerServiceWorker';\nimport i18n from '@/i18n';\n\ninitCloudMessaging();\n\nVue.use(VueAnalytics, {\n  id: 'UA-141587717-1',\n  router\n});\n\nnew Vue({\n  router,\n  store,\n  i18n,\n  render: (h) => h(App)\n}).$mount('#app');\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&id=aa1382f8&scoped=true&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&id=aa1382f8&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Footer.vue?vue&type=style&index=0&id=7c7b588c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Footer.vue?vue&type=style&index=0&id=7c7b588c&scoped=true&lang=css&\""],"sourceRoot":""}