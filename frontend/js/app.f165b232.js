(function(n){function e(e){for(var i,a,r=e[0],l=e[1],c=e[2],u=0,p=[];u<r.length;u++)a=r[u],Object.prototype.hasOwnProperty.call(s,a)&&s[a]&&p.push(s[a][0]),s[a]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(n[i]=l[i]);d&&d(e);while(p.length)p.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],i=!0,a=1;a<t.length;a++){var r=t[a];0!==s[r]&&(i=!1)}i&&(o.splice(e--,1),n=l(l.s=t[0]))}return n}var i={},a={app:0},s={app:0},o=[];function r(n){return l.p+"js/"+({}[n]||n)+"."+{"chunk-0c7f4c4c":"39ea2def","chunk-2d0c4c61":"8cd9d089","chunk-77b5a4ce":"97aa7247","chunk-2d0e5e97":"9a0fc7cd","chunk-3dc2ba00":"54ca73ed"}[n]+".js"}function l(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.e=function(n){var e=[],t={"chunk-0c7f4c4c":1,"chunk-77b5a4ce":1,"chunk-3dc2ba00":1};a[n]?e.push(a[n]):0!==a[n]&&t[n]&&e.push(a[n]=new Promise((function(e,t){for(var i="css/"+({}[n]||n)+"."+{"chunk-0c7f4c4c":"32b84eb6","chunk-2d0c4c61":"31d6cfe0","chunk-77b5a4ce":"5faac51c","chunk-2d0e5e97":"31d6cfe0","chunk-3dc2ba00":"87fda8d1"}[n]+".css",s=l.p+i,o=document.getElementsByTagName("link"),r=0;r<o.length;r++){var c=o[r],u=c.getAttribute("data-href")||c.getAttribute("href");if("stylesheet"===c.rel&&(u===i||u===s))return e()}var p=document.getElementsByTagName("style");for(r=0;r<p.length;r++){c=p[r],u=c.getAttribute("data-href");if(u===i||u===s)return e()}var d=document.createElement("link");d.rel="stylesheet",d.type="text/css",d.onload=e,d.onerror=function(e){var i=e&&e.target&&e.target.src||s,o=new Error("Loading CSS chunk "+n+" failed.\n("+i+")");o.code="CSS_CHUNK_LOAD_FAILED",o.request=i,delete a[n],d.parentNode.removeChild(d),t(o)},d.href=s;var m=document.getElementsByTagName("head")[0];m.appendChild(d)})).then((function(){a[n]=0})));var i=s[n];if(0!==i)if(i)e.push(i[2]);else{var o=new Promise((function(e,t){i=s[n]=[e,t]}));e.push(i[2]=o);var c,u=document.createElement("script");u.charset="utf-8",u.timeout=120,l.nc&&u.setAttribute("nonce",l.nc),u.src=r(n);var p=new Error;c=function(e){u.onerror=u.onload=null,clearTimeout(d);var t=s[n];if(0!==t){if(t){var i=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;p.message="Loading chunk "+n+" failed.\n("+i+": "+a+")",p.name="ChunkLoadError",p.type=i,p.request=a,t[1](p)}s[n]=void 0}};var d=setTimeout((function(){c({type:"timeout",target:u})}),12e4);u.onerror=u.onload=c,document.head.appendChild(u)}return Promise.all(e)},l.m=n,l.c=i,l.d=function(n,e,t){l.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},l.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},l.t=function(n,e){if(1&e&&(n=l(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)l.d(t,i,function(e){return n[e]}.bind(null,i));return t},l.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return l.d(e,"a",e),e},l.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},l.p="/",l.oe=function(n){throw console.error(n),n};var c=window["webpackJsonp"]=window["webpackJsonp"]||[],u=c.push.bind(c);c.push=e,c=c.slice();for(var p=0;p<c.length;p++)e(c[p]);var d=u;o.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("cd49")},"016a":function(n,e,t){"use strict";var i=t("e818"),a=t.n(i);a.a},"034f":function(n,e,t){"use strict";var i=t("8a23"),a=t.n(i);a.a},"0613":function(n,e,t){"use strict";t("a434"),t("25f0");var i,a=t("2b0e"),s=t("2f62"),o={name:"Esame - 06/2005",id:"esame_2005-06",exercises:[{code:'public class DemoAssert {\n    int x=5;\n    public void stampaInteroPositivo(int i) {\n        assert i >= 0 : stampaErroreAssert();\n        System.out.println(i);\n    }\n    public int stampaErroreAssert() {\n        System.out.println("XX");\n        return -1;\n    }\n    public static void main(String args[]) {\n        int x=-10;\n        DemoAssert test = new DemoAssert();\n        test.stampaInteroPositivo(x);\n    }\n}',solution:{type:"RUNTIME",row:4,cause:"x = -10, quindi l'assert lancia un errore"}},{code:'class DemoAssert {\n    int x=5;\n    public void stampaInteroPositivo(int i) {\n        assert i >= 0 : stampaErroreAssert();\n        System.out.println(i);\n    }\n    public int stampaErroreAssert() {\n        System.out.println("XX");\n        return -1;\n    }\n    public static void main(String args[]) {\n        x=10;\n        DemoAssert test = new DemoAssert();\n        test.stampaInteroPositivo(x);\n    }\n}',solution:{type:"COMPILETIME",row:12,cause:"Le variabili d'istanza non possono essere usate da metodi statici"}},{code:"package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=1;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n        }\n}\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n    }\n}",solution:{type:"COMPILETIME",row:11,cause:"x ha visibilità package e non può essere vista nel package abcd."}},{code:"#include <iostream.h>\nvoid rimescola(int& k, int m, int* n) {\n    k = m; m = *n; *n = k; n[-1] = k;\n}\nint main(){\n    int vet[] = {5,4,3,2,1};\n    rimescola(vet[0],vet[2],vet+4);\n    for (int i=0;i<5;i++) cout<<vet[i];\n    return 0;\n}",solution:["34333"]},{code:'package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z=null;\n        try {\n            z = Class.forName("uno.B").newInstance();\n        } catch (Exception ex) { ex.printStackTrace();}\n            if (z instanceof uno.A) ((A) z).f(1);\n            if (z instanceof uno.B) ((B) z).f(2);\n        }\n}\nclass B extends A{\n        void f(int k) {\n        System.out.print(k);\n    }\n}',solution:["12"]},{code:'public class A {\n    public A() {System.out.print("1");}\n    public void finalize(){System.out.print("3");}\n    public static void main(String Args[]){\n        A x;\n        A z=new A();\n        A y=z;\n        z=null;\n        System.gc();\n        System.out.print("5");\n        y=null;\n        System.gc();\n    }\n}',solution:["153"]},{code:"package uno;\npublic class A {\n    int x=10;\n    A(){int x=12; new B();}\n    public static void main(String args[]){\n        int x=11;\n        new A();\n    }\n    class B{\n        B() {System.out.println(x);}\n    }\n}",solution:["10"]},[{question:"Container eredita da Component",solution:!0},{question:"Component è figlia di Container",solution:!1},{question:"JComponent è figlia di Component",solution:!1}],[{question:"Java non usa lo stack ma solo la heap",solution:!1},{question:"Java usa lo stack solo per le variabili statiche",solution:!1},{question:"Java non usa la heap ma solo lo stack",solution:!1}],[{question:"Quando si scrive la clone si deve anche scrivere anche la equals",solution:!1},{question:"Quando si scrive la equals si deve anche scrivere anche la clone",solution:!1},{question:"Per le classi che non hanno una struttura profonda non serve scrivere la equals",solution:!1}]]},r=o,l={name:"Esame - 07/2005",id:"esame_2005-07",exercises:[{code:'package uno;\nimport java.util.*;\npublic class A{\n    A(){\n        Collection l = new LinkedList();\n        Collection s = new HashSet();\n        for (int i = 0; i < 12; i++)\n            if (i % 2 == 0)\n                l.add(new Integer(i%3));\n        s.addAll(l);\n        System.out.println(l.size()+" "+s.size());\n    }\n    public static void main (String args[]){\n        new A();\n    }\n}',solution:["6 3"]},{code:'package uno;\nclass B extends C {\n    void x() {System.out.println("X");}\n}\nclass C {\n    void x() {System.out.println("Y");}\n}\npublic class A{\n    A() {\n    C x=new B();\n    x.x();\n    }\n    public static void main (String args[]){\n        new A();\n    }\n}',solution:["X"]},{code:'package uno;\nclass B {\n    int x=3;\n    B(int x) {this.x=x;}\n}\npublic class A {\n    void f() {\n        try {\n            B b1 = new B(5);\n            B b2 = (B) b1.clone();\n            b2.x++;\n            System.out.println(b1.x + " " + b2.x);\n        } catch (Exception e) {e.printStackTrace();}\n    }\n    public static void main(String string[]) {\n        A a=new A();\n        a.f();\n}}',solution:{type:"COMPILETIME",row:10,cause:"Clone è protected in quanto non ne è stato fatto l'overriding"}},{code:"#include <iostream.h>\nint x=4;\nint f(int * x) {\n    x++;\n    return (--(*x));\n}\nvoid g(int & y) {\n    --y;\n}\nint main(){\n    int y[]={3,2,1};\n    cout << f(&y[1]);\n    g(x);\n    cout << x << *y << y[1] << *(y+2);\n}",solution:["03320"]},{code:"package uno;\nclass B {\n    int x=4;\n    B(int x) {this.x=x;}\n}\npublic class A {\n    A() {\n        B b1=new B(3);\n        B b2=new B(3);\n        System.out.println(b1.equals(b2));\n    }\n    public static void main(String Args[]) {\n        new A();\n    }\n}",solution:["false"]},{code:"package uno;\npublic class A{\n    static int f(int x) {x++; return x-1;}\n    private int g(int x) {x--; return x+1;}\n    public static void main(String String[]) {\n        int z=3;\n        System.out.println(f(z));\n        System.out.println(g(z));\n    }\n}",solution:{type:"COMPILETIME",row:8,cause:"I metodi statici non possono chiamare metodi di istanza"}},{code:'package uno;\npublic class A {\n    C c=null;\n    public A() {\n        System.out.print("+10");\n        C c1=new C();\n        c=new C();\n    }\n    public static void main(String[] args) {\n        A a = new A();\n        System.gc();\n        new C();\n        a = null;\n        System.gc();\n    }\n}\nclass C {\n    static int count=0;\n    String name=null;\n    public C() {\n        name="2"+(++count);\n        System.out.print("+"+name);\n    }\n    protected void finalize() {\n        System.out.print("-"+name);\n    }\n}',solution:["+10+21+22-21+23-22-23","+10+21+22-21+23-23-22","+10+21+22+23-21-22-23","+10+21+22+23-21-23-22","+10+21+22+23-22-21-23","+10+21+22+23-22-23-21","+10+21+22+23-23-21-22","+10+21+22+23-23-22-21"]},[{question:"Se A è padre di B la scrittura A a=new B(); genera errore a runtime",solution:!1},{question:"Se A è padre di B la scrittura B a=new A(); genera errore a runtime",solution:!1},{question:"Se A è padre di B la scrittura B a=new A(); genera errore a compiletime",solution:!0},{question:"Se A è padre di B la scrittura A a=new B(); genera errore a compiletime",solution:!1},{question:"Se A è padre di B la scrittura A a=(A)(new B()); genera errore a runtime",solution:!1},{question:"Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime",solution:!1},{question:"JButton ha il metodo equals()",solution:!0},{question:"JButton ha il metodo clone()",solution:!0},{question:"new JButton().clone(); genera errore a compile time anche se i package necessari sono inclusi",solution:!0},{question:"new JButton().clone(); genera errore a runtime",solution:!1}]]},c=l,u={name:"Esame - 06/2006",id:"esame_2006-06",exercises:[{code:"import java.util.*;\nclass A {\n    private static A a;\n    private static int instancecount=0;\n    private A() {instancecount++;}\n    static A getInstance() {if (a==null) a=new A(); return a;}\n    void printCount(){System.out.println(instancecount);}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        Collection s = new LinkedList();\n        for (int i = 1; i < 4; i++) s.add(A.getInstance());\n        Iterator i = s.iterator();\n        while (i.hasNext()) ( (A) i.next()).printCount();\n    }\n}",solution:["1\\n1\\n1\\n"]},{code:"import java.util.*;\nclass A {\n    private static A a;\n    private static int instancecount=0;\n    private A() {instancecount++;}\n    static A getInstance() {\n        if (a==null) a=new A();\n        return a;\n    }\n    void printCount(){System.out.println(instancecount);}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        Collection s = new HashSet();\n        for (int i = 1; i < 4; i++) s.add(new A());\n        Iterator i = s.iterator();\n        while (i.hasNext()) ( (A) i.next()).printCount();\n    }\n}",solution:{type:"COMPILETIME",row:15,cause:"Il costruttore di A è privato"}},{code:"package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=1;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n    }\n}\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n    }\n}",solution:{type:"COMPILETIME",row:11,cause:"x ha visibilità package ed appartiene ad un altro package"}},{code:"#include <iostream.h>\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++; }\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nint main(){\n    char x[2];\n    int y;\n    x[0]='B'; x[1]='C'; y=0;\n    f(x,&y);\n    g(x,y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0; }",solution:["A D 1"]},{code:"package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.A) ((A) z).f(1);\n        if (z instanceof uno.B) ((B) z).f(2);\n    }\n}\nclass B extends A{\n    void f(int k) {\n        System.out.print(k);\n    }\n}",solution:["12"]},{code:'class A {\n    A(int x) {System.out.print("X");}\n    A() {System.out.print("Y");}\n    public void finalize() {System.out.print("Z");}\n}\nclass B extends A {\n    B(int x) {System.out.print("A");}\n    B() {System.out.print("B");}\n    public void finalize() {System.out.print("C");}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}',solution:["YAC"]},{code:"package uno;\npublic class A {\n    int x=10;\n    A(){int x=12; new B();}\n    public static void main(String args[]){\n        int x=11;\n        new A();\n    }\n    class B{\n        B() {System.out.println(x);}\n    }\n}",solution:["10"]},{code:"class A {\nint x = 3;\nclass B {\n    int x = 4;\n    B(int x) { System.out.print(x); }\n}\nA(int x) { new B(x); System.out.print(x); }\nA(int y) { new B(y); System.out.print(y-4); }\nA() { new B(x); System.out.print(x); }\npublic static void main(String s[]) {\n    A a=new A(3); }\n}",solution:{type:"COMPILETIME",row:8,cause:"Esiste già un altro metodo con firma uguale"}},[{question:"Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.",solution:!1},{question:"Il garbage collector di Java sospende l’esecuzione del programma finchè non ha finito di liberare la memoria.",solution:!1},{question:"Un costruttore non può mai essere protected.",solution:!1},{question:"Di default l’operatore = = e il metodo equals fanno la stessa cosa.",solution:!0},{question:"Un oggetto ed un suo clone sono identici.",solution:!1},{question:"Se A è padre di B la scrittura B a=new A(); genera errore a compiletime.",solution:!0},{question:"Se A è padre di B la scrittura A a=(A)(new B()); genera errore a runtime.",solution:!1},{question:"Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.",solution:!1}]]},p=u,d={name:"Esame - 06/2011",id:"esame_2011-06",exercises:[{code:'public class E {\nstatic int s=0;\nE(int i) {s=i;}\npublic static void main(String[] args) {\n    E b1=new E(3);\n    E b2=new E(3);\n    E b3=new E(1);\n    if (b1.equals(b2)) System.out.print("K");\n        else System.out.print("I");\n    if (b1.s==b3.s) System.out.print("A");\n        else System.out.print("D");\n}   }',solution:["IA"]},{code:"#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y) ++;\n    x[*y]++;    }\nint main(){\n    char x[2];\n    int y;\n    x[0]='R'; x[1]='R'; y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }",solution:["Q S 1"]},{code:'public class G implements Cloneable{\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        copia.k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b= new G();\n        G c=b.clone();\n        G d=new G();\n        if (b.equals(c)) System.out.print("A");\n        if (c.equals(d)) System.out.print("B");\n        if (d.equals(b)) System.out.print("C");\n}}',solution:["C"]},{code:'import java.util.*;\npublic class A {\n    A(int m) {\n        Collection<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }\n}',solution:["A0A1A2"]},{code:'import java.util.*;\npublic class B {\n    B() {\n        Collection b = new Collection();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) {\n        new B(); new B();\n    }\n    public static void main(String a) {\n        new B();\n    }\n}',solution:{type:"COMPILETIME",row:4,cause:"Collection è abstract e non si può istanziarla"}},{code:"public class C{\npublic static int x;\nC(int s) {x=s;}\nvoid f() {System.out.print(x);}\npublic static void main(String a[]){\n    C b=new C(3);\n    C c=new C(5);\n    b.f();\n    c.f();\n}   }",solution:["55"]},{code:"public class F{\nint x=2;\nF(int x) {\n    f(x);\n    f();\n    System.out.println(x);\n}\nvoid f() { x++; System.out.print(x);}\nvoid f(int x) { this.x++; x--;System.out.print(x);}\npublic static void main(String arg[]) {\n    F x=new F(9);\n}}",solution:["849\\n"]},{code:'public class D {\n    static int x=1;\n    class String5 {\n        String s;\n        String5() {this.s=""+(++x);}\n        public void finalize() { System.out.print(s); }\n    }\n    String5 a=new String5();\n    void f() {String5 a=new String5();\n    }\n    public void finalize() { System.out.print("A"); }\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n}}',solution:["A235","A253","A325","A352","A523","A532","2A35","2A53","23A5","235A","25A3","253A","3A25","3A52","32A5","325A","35A2","352A","5A32","5A23","53A2","532A","52A3","523A"]},[{question:"Se B estende A la scrittura B a=new A(); genera errore a compiletime.",solution:!0},{question:"Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime.",solution:!1},{question:"Un oggetto ed un suo clone sono identici.",solution:!1},{question:"Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.",solution:!1},{question:"Ereditarietà multipla è permessa con le interfacce e le classi astratte.",solution:!1},{question:"Di default l'operatore == e il metodo equals fano la stessa cosa.",solution:!0},{question:"Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.",solution:!1},{question:"Il costruttore di una classe può essere visibile all'esterno della classe stessa.",solution:!0}]]},m=d,b={name:"Esame - 07/2011",id:"esame_2011-07",exercises:[{code:'import java.util.*;\npublic class A {\n    A(int m){\n        Collection<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="W"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }\n}',solution:["W0W1W2"]},{code:'import java.util.*;\npublic class B {\n    B(){\n        Collection b = new Collection();\n        for (int k=0; k<10; k++) {\n            String s="A"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) {\n        new B();\n        new B(); }\n    public static void main(String a) {\n        new B();\n    }\n}',solution:{type:"COMPILETIME",row:4,cause:"Collection è abstract e non si può istanziare"}},{code:"public class C {\n    public static int x;\n    C(int s) {x=s;}\n    void f() {System.out.print(x);}\n    public static void main(String a[]){\n        C b=new C(4);\n        C c=new C(1);\n        b.f();\n        c.f();\n}   }",solution:["11"]},{code:'public class E {\n    static int s=0;\n    E(int i){s=i;}\n    public static void main(String[] args) {\n        E b1=new E(3);\n        E b2=new E(3);\n        E b3=new E(1);\n        if (b1.equals(b2)) System.out.print("K");\n            else System.out.print("I");\n        if (b1.s==b3.s) System.out.print("D");\n            else System.out.print("A");\n}   }',solution:["ID"]},{code:"#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++; }\nint main() {\n    char x[2];\n    int y;\n    x[0]='G'; x[1]='G'; y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }",solution:["F H 1"]},{code:'public class G implements Cloneable {\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        copia.k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b = new G();\n        G c = b.clone();\n        G d = new G();\n        if (b.equals(c)) System.out.print("A");\n        if (c.equals(d)) System.out.print("J");\n        if (d.equals(b)) System.out.print("K");\n}}',solution:["K"]},{code:"public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(3);\n}}",solution:["243"]},{code:'public class D {\n    static int x=1;\n    class String5 {\n        String s;\n        String5() {this.s=""+(++x);}\n        public void finalize() { System.out.print(s); }\n    }\n    String5 a=new String5();\n    void f() {String5 a=new String5();\n    }\n    public void finalize() { System.out.print("S"); }\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n}}',solution:["S235","S253","S325","S352","S523","S532","2S35","2S53","23S5","235S","25S3","253S","3S25","3S52","32S5","325S","35S2","352S","5S23","5S32","52S3","523S","53S2","532S"]},[{question:"Se A è padre di B la scrittura B a=(B)(new A()); genera errore a compiletime.",solution:!1},{question:"Se B estende A la scrittura B a=new A(); genera errore a compiletime.",solution:!0},{question:"Un oggetto ed un suo clone sono identici.",solution:!1},{question:"Poichè Java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.",solution:!1},{question:"Ereditarietà multipla è permessa con le interfacce e le classi astratte.",solution:!1},{question:"Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.",solution:!1},{question:"Di default l'operatore == e il metodo equals fanno la stessa cosa.",solution:!0},{question:"Il costruttore di una classe può non essere visibile all'esterno della classe stessa.",solution:!0}]]},g=b,S={name:"Esame - 09/2011",id:"esame_2011-09",exercises:[{code:'public class B implements Cloneable{\n    int k=0;\n    public Object clone() {\n        Object copia=null;\n        try {\n            copia=super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        ((B)copia).k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof B)) return false;\n        return k==((B)x).k;\n    }\n    public static void main(String[] args) {\n        B b= new B();\n        B c=(B)b.clone();\n        B d=new B();\n        if (b.equals(c)) System.out.print("Z");\n        if (c.equals(d)) System.out.print("Y");\n        if (d.equals(b)) System.out.print("X");\n}}',solution:["X"]},{code:'public class A {\n    A(int x) {System.out.print("A");}\n    A() {System.out.print("S");}\n    public void finalize() {System.out.print("U");}\n}\npublic class B extends A {\n    B(int x) {System.out.print("T");}\n    B() {System.out.print("H");}\n    public void finalize() {System.out.print("P");}\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}',solution:["STP"]},{code:'class B {\nstatic int s=0;\nB(int i){s=i;}\npublic static void main(String[] args) {\n    B b1=new B(3);\n    B b2=new B(3);\n    B b3=new B(1);\n    if (b1.equals(b2)) System.out.print("3");\n        else System.out.print("1");\n    if (b1.s==b3.s) System.out.print("3");\n        else System.out.print("1");\n}   }',solution:["13"]},{code:'public class B {\n       String a[10];\n       void initialize(){\n           for (int k=9;k>=0;--k) a[k]=""+k;\n       }\n       void stampa(int k){\n           System.out.println(a[k]);\n       }\n       B() {initialize(); stampa(0); }\n       public static void main(String a[]){\n           new B();\n       }\n       public static void main(String a){\n           new B();\n       }\n   }',solution:{type:"COMPILETIME",row:2,cause:"Errata inizializzazione di un array"}},{code:'public class B {\n    static String k="pluto";\n    public static void main(String a[]){\n        new B();\n        initialize("pippo");\n        System.out.println(k);\n    }\n    void main(){\n        new B();\n    }\n    void initialize(String s){k=s;}\n}',solution:{type:"COMPILETIME",row:5,cause:"Il main statico non può accedere a metodi di istanza"}},{code:'class C{\n    void f() {\n        System.out.println("R");\n    }\n}\npublic class B extends C{\n    public void f() {\n        System.out.println("P");\n    }\n    public static void main(String[] args) {\n        C quattro1 = new B();\n        quattro1.f();\n    }\n    public static void main(String args) {\n        C αλθα = new C();\n        αλθα.f();\n    }}',solution:["P\\n"]},{code:"public class B {\n    public static void main(String args[]) {\n        int i,j,k,l=8;\n        k = l++;\n        j = ++k;\n        i = j++;\n        System.out.print(i);\n    }\n}",solution:["9"]},{code:"public class B {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]) {\n        Object z = new A();\n        if (z instanceof B) ((B) z).f(4);\n        if (z instanceof A) ((A) z).f(2);\n    }\n}\nclass A extends B{\n    void f(int k) {\n        System.out.print(k*2);\n    }\n}",solution:["84"]},[{question:"In Java non esistono le variabili globali.",solution:!0},{question:"Una classe figlia può fare overloading di un metodo final della classe padre.",solution:!0},{question:"Una classe figlia può fare l'overriding di un metodo final della classe padre.",solution:!1},{question:"Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.",solution:!1},{question:"Due oggetti per cui equals è vera possono avere variabili pubbliche con valori differenti.",solution:!0},{question:"Due oggetti per cui equals è vera sono sempre identici.",solution:!1},{question:"Se una Collection è specializzata tramite una generic gli oggetti estratti dal relativo iteratore non richiedono un cast.",solution:!0},{question:"Java usa solo la heap e non lo stack.",solution:!1}]]},v=S,f={name:"Esame - 01/2016",id:"esame_2016-01",exercises:[{code:"#include <iostream>\nusing namespace std;\nvoid g(char x[], int y) {\n    y--;\n    x[y]--; }\nvoid f(char *x, int * y) {\n    (*y)++;\n    x[*y]++;    }\nint main() {\n    char x[2];\n    int y;\n    x[0]='D';   x[1]='D';   y=0;\n    f(x, &y);\n    g(x, y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }",solution:["C E 1"]},{code:"public class F{\nint x=3;\nF(int x) {\n    f(x);\n    f();\n    System.out.print(x);\n}\nvoid f() { x++; System.out.print(x);}\nvoid f(int x) { this.x++; x--; System.out.print(x);}\npublic static void main(String arg[]) {\n    F x = new F(9);\n}}",solution:["859"]},{code:'public class G implements Cloneable {\n    int k=0;\n    public G clone() {\n        G copia=null;\n        try {\n            copia=(G)super.clone();\n        }catch(CloneNotSupportedException e){System.exit(0);}\n        copia.k++;\n        return copia;\n    }\n    public int hashCode(){return 0;}\n    public boolean equals(Object x) {\n        if (! (x instanceof G)) return false;\n        return k==((G)x).k;\n    }\n    public static void main(String[] args) {\n        G b= new G();\n        G c=(G)(b.clone());\n        G d=new G();\n        if (b.equals(c)) System.out.print("D");\n        if (c.equals(d)) System.out.print("E");\n        if (d.equals(b)) System.out.print("F");\n    }\n}',solution:["F"]},{code:"public class C{\npublic static int x;\nC(int s) {x=s;}\nvoid f() { System.out.print(x);}\npublic static void main(String a[]) {\n    C b=new C(7);\n    C c=new C(10);\n    b.f();\n    c.f();\n}   }",solution:["1010"]},{code:'import java.util.*;\npublic class B {\n    B() {\n        Collection b = new Collection();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%4);\n            b.add(s);\n        }\n        int count=0;\n        Iterator i=b.iterator();\n        while (i.hasNext()) {\n            Object s=i.next();\n            count++;\n        }\n        System.out.println(count);\n    }\n    public static void main(String[] a) { new B();new B(); }\n}',solution:{type:"COMPILETIME",row:4,cause:"Collection è abstract e non si può istanziare"}},{code:'import java.util.*;\npublic class A {\n    A(int m){\n        List<String> b = new TreeSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%m);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String> i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            System.out.print(s);\n        }\n    }\n    public static void main(String[] a) { new A(3); }}',solution:{type:"COMPILETIME",row:4,cause:"TreeSet non è sottoclasse di List"}},{code:'public class E {\n    static int s=0;\n    E(int i){s=i;}\n    public static void main(String[] args) {\n        E b1=new E(3);\n        E b2=new E(3);\n        E b3=new E(1);\n        if (b1.equals(b2)) System.out.print("K");\n            else System.out.print("X");\n        if (b1.s==b3.s) System.out.print("IA");\n            else System.out.print("D");\n}   }',solution:["XIA"]},{code:'public class D { static int x=1; S5 a=null;\n    class S5 { int k;\n        S5() {k=x;}\n        public void finalize() {\n            System.out.print(k); }\n    }\n    D() {x++; a=new S5();}\n    void f() {S5 a=new S5();}\n    public void finalize() { System.out.print("1");}\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n        System.out.print("-"); a5=null;\n        System.gc(); System.runFinalization();\n    }\n    public static void main(String args)\n        { D a5=new D();}\n}',solution:["1223-13","1232-13","1322-13","3221-13","3212-13","3122-13","2321-13","2312-13","2123-13","2132-13","2231-13","2213-13","1223-31","1232-31","1322-31","3221-31","3212-31","3122-31","2321-31","2312-31","2123-31","2132-31","2231-31","2213-31"]},[{question:"Un oggetto ed un suo clone non sono identici.",solution:!0},{question:"Poichè java usa sempre dynamic binding, esso usa sempre la heap e mai lo stack.",solution:!1},{question:"Ereditarietà multipla è permessa con le interfacce e le classi astratte.",solution:!1},{question:"Di default l'operatore == e il metodo equals fanno la stessa cosa.",solution:!0},{question:"Il main può accedere a qualunque variabile di istanza della classe in cui è contenuto.",solution:!1},{question:"Il costruttore di una classe può non essere visibile all'esterno della classe stessa.",solution:!0},{question:"Se B estende A la scrittura B a=new A(); genera errore a runtime.",solution:!1},{question:"Se A è padre di B la scrittura B a=(B)(new A()); genera errore a runtime.",solution:!0}]]},x=f,h={name:"Esame - 02/2016",id:"esame_2016-02",exercises:[{code:"public class E4 {\n    int x=4;\n    E4(int x) {\n        f(x); f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--; System.out.print(x);}\n    public static void main(String arg[]) {\n        int x=2;\n        new E4(2);\n}}",solution:["162"]},{code:'class E3 {\n    static int counter=4;\n    private int value=2;\n    E3(){value=++counter;}\n    public String toString(){\n        return this.getClass().getName()+value+" ";}\n    public void finalize(){System.out.print("F"+value);}\n}\npublic class G extends E3{\n    public static void main(String d[]){\n        LinkedList<E3> x=new LinkedList<E3>();\n        E3 a1=new G();\n        G a2 =new G();\n        E3 a3=new E3();\n        x.add(a1);x.add(a3);\n        a1=null; a2=null; a3=null;\n        Iterator<E3> it=x.iterator();\n        while (it.hasNext()){System.out.print(it.next());}\n        System.gc();System.runFinalization();\n}}',solution:["NomePackage.G5 NomePackage.E37 F6"]},{code:"import java.util.*;\npublic class E2 {\n    static HashSet hs=new HashSet();\n    public int hashCode() {return 0;}\n    public boolean equals(Object x) {\n        return (x.getClass().equals(this.getClass())); }\n    public static void main(String s[]){\n        f(new E2()); f(new E2()); f(new A2());\n        f(new A2()); f(new A3()); f(new A3());\n    }\n    static void f(E2 x) {int v=0;\n        if (hs.add(x)) v=1; System.out.print(v);\n    }\n}\nclass A2 extends E2 {\n    public boolean equals(Object x) {\n        return x instanceof A2;\n    }\n}\nclass A3 extends A2 {}",solution:["101000"]},{code:"class A1 {int x=7; }\nclass B1 extends A1 {int k=1;}\npublic class E1 {\n    public static void main(String[] args) {\n        A1 a1=new B1();\n        A1 a2=(A1)(new B1());\n        B1 b1=new A1();\n        System.out.println(a1.x+a2.x+b1.x);\n    }\n}",solution:{type:"COMPILETIME",row:7,cause:"Assegnamento di Classe Padre a Classe Figlia"}},{code:'#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(char x[2],int index,char value){\n    x[index]=value;\n}\nint main(int argc, char** argv) {\n    char a[]="ABCDEFGHIL";\n    strcpy(&a[3], "000");\n    f(&a[2],4,\'$\');\n    f(&a[2],6,0);\n    cout<<a;\n    return 0;\n}',solution:["ABC000$H"]},{code:'public class C {\n    int s=5;\n    void f() {System.out.print("A"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print("B"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n}',solution:["B4A6"]},{code:'public class D {\n    static int x=2;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print("X"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}',solution:["X35","X53","3X5","35X","53X","5X3"]},{code:"import java.util.*;\npublic class E6 {\n    static Collection ll = new LinkedList();\n    int x=6;\n    E6(){}\n    E6(int x){\n        ll.add(this);\n        ll.add(new EA5());\n    }\n    public static void main(String z[]) {\n        new E6(3);\n        Iterator iter = ll.iterator();\n        while (iter.hasNext()) {\n            ((E6)(iter.next())).f();\n    }}\n    public void f() { System.out.print(x); }\n}\nclass EA5 extends E6 {\n    public void f() {\n        x++; super.f(); System.out.print(2);\n}}",solution:["672"]},[{question:"Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.",solution:!1},{question:"È corretto scrivere Integer k=3;",solution:!0},{question:"L' esistenza di un metodo f(int x) e di uno f(String s) nella stessa classe è un esempio di overloading.",solution:!0},{question:"L' esistenza di una classe di metodo f(int x), e in una sua sottoclasse di un metodo f(float x) è un esempio di overriding.",solution:!1},{question:"Se a.hashCode==b.hashCode, a.equals(b) deve essere vero.",solution:!1},{question:"Se a.hashCode!=b.hashCode, a.equals(b) deve essere falso.",solution:!0},{question:"Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.",solution:!1},{question:"Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con parametri dello stesso tipo, viene chiamato il costruttore vuoto.",solution:!1}]]},y=h,A={name:"Esame - 06/2017",id:"esame_2017-06",exercises:[{code:'public class C {\n    int s=4;\n    void f() {System.out.print("A"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print("B"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n    public static void main(String a){\n        C y=new C();\n    }\n}',solution:["B3A5"]},{code:'using namespace std;\n#include <cstdlib>\n#include <iostream>\nvoid f(int x[4],int value){ x[0]+=value; }\nvoid g(int x,int value){ x+=value; }\nint main(int argc, char** argv) {\n    int z=5;\n    int a[]={1,2,3,4,5,6,7,8,9};\n    g(z,1);\n    f(&z,3);\n    f(a+3,3);\n    g(a[3],4);\n    cout<<z<<" "<<a[3];\n    return 0;\n}',solution:["8 7"]},{code:"class A1 {int x=2; }\nclass B1 extends A1 {int k=1;}\npublic class E1 {\n    public static void main(String[] args) {\n        A1 a1=new B1();\n        A1 a2=(A1)(new B1());\n        B1 b1=new A1();\n        System.out.println(a1.x+a2.x+b1.x);\n    }\n}",solution:{type:"COMPILETIME",row:7,cause:"Assegnazione di classe Padre a classe Figlio"}},{code:"import java.util.*;\npublic class E6 {\n    static Collection ll = new LinkedList();\n    int x=1;\n    E6(int x){\n        ll.add(this);\n        ll.add(new E6A());\n    }\n    public static void main(String z[]) {\n        new E6(3);\n        Iterator iter = ll.iterator();\n        while (iter.hasNext()) {\n            ((E6)(iter.next())).f();\n    }}\n    public void f() { System.out.print(x); }\n    public static void main(String z) {\n        new E6A();\n        System.out.print(ll.size());\n}}\nclass E6A extends E6 {\n    E6A(){x++;}\n    public void f() {\n        x++; super.f(); System.out.print(2);\n}}",solution:{type:"COMPILETIME",row:21,cause:"Costruttore di E6 non vuoto e non richiamato"}},{code:'public class D {\n    static int x=3;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print("X"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() {System.out.print(k);}\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}',solution:["X46","X64","64X","6X4","46X","4X6"]},{code:"import java.util.*;\npublic class E2 {\n    static HashSet hs=new HashSet();\n    public int hashCode() {return 0;}\n    public boolean equals(Object x) {\n        return (x.getClass().equals(this.getClass()));}\n    public static void main(String s[]){\n        f(new E2()); f(new E2()); f(new A2());\n        f(new A2()); f(new A3()); f(new A3());\n    }\n    static void f(E2 x) {int v=0;\n        if (hs.add(x)) v=1; System.out.print(v);\n    }\n}\nclass A2 extends E2 {\n    public boolean equals(Object x) {return x instanceof A2;}\n}\nclass A3 extends A2 {}",solution:["101000"]},{code:'import java.util.*;\nclass E3 {\n    static int counter=0;\n    private int value=0;\n    E3(){value=++counter;}\n    public String toString(){\n        return this.getClass().getName()+value+" ";}\n    public void finalize(){System.out.print("F"+value);}\n}\npublic class G extends E3{\n    public static void main(String d[]){\n        LinkedList<E3> x=new LinkedList<E3>();\n        E3 a1=new G();\n        G a2=new G();\n        E3 a3=new E3();\n        x.add(a1);x.add(a3);\n        a1=null; a3=null; a2=null;\n        Iterator<E3> it=x.iterator();\n        while (it.hasNext()){System.out.print(it.next());}\n        System.gc();System.runFinalization();\n}}',solution:["NomePackage.G1 NomePackage.E33 F2 "]},{code:"public class E4 {\n    int x=2;\n    E4(int x) {\n        f(x); f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) {this.x++; x--; System.out.print(x);}\n    public static void main(String arg[]) {\n        int x=2;\n        new E4(2);\n}}",solution:["142"]},[{question:"Se a.hashCode!=b.hashCode, a.equals(b) deve essere falsa.",solution:!0},{question:"Nel main si può leggere una qualunque variabile di istanza della classe in cui è contenuto.",solution:!1},{question:"Ereditarietà multipla è permessa con le interfacce e le classi astratte.",solution:!1},{question:"E' corretto scrivere Integer k=3;",solution:!0},{question:"L'esistenza di un metodo f(int x) in una classe e di uno f(String s) in una sua sottoclasse è un esempio di overloading.",solution:!0},{question:"In una classe ci può essere un solo metodo main.",solution:!1},{question:"Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.",solution:!1},{question:"Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con parametri dello stesso tipo, ciene chiamato il costruttore vuoto.",solution:!1}]]},w=A,B={name:"Esame - 07/2017",id:"esame_2017-07",exercises:[{code:"public class Sei {\n    char f() { return '6'; }\n    public static void main(String e[]) {\n        Sei a = new Sei();\n        Sei b = new Sette();\n        Sette c = new Sette();\n        System.out.print(a.f() + \" \" + b.f() + \" \" + c.f() + \" \");\n        char ch[] = {'A', 'B', 'A', 'B', 'A', 'B'};\n        int i1 = 0, i2 = 2, i3 = 4;\n        if (a.equals(b)) i1++;\n        if (b.equals(a)) i2++;\n        if (c.equals(b)) i3++;\n        System.out.print(ch[i1] + \" \" + ch[i2] + \" \" + ch[i3]);\n    } }\nclass Sette extends Sei {\n    char f() { return '7'; }\n    public boolean equals(Object a) {\n        return (a instanceof Sei);\n    }\n    public int hashCode() { return 3; }\n}",solution:["6 7 7 A B B"]},{code:'import java.util.*;\npublic class Uno {\n    static Collection c=new HashSet();\n    public static void main(String a[]) {\n        Collection c=new LinkedList();\n        Uno u=new Uno();\n        c.add(u); c.add(u);\n        u.f();\n        System.gc();System.runFinalization();\n        System.out.println(c.size());\n    }\n    void f() {\n        A a=new A("K");\n        A b=new A("L");\n        c.add(b);\n    }\n    class A {\n        String s="";\n        A(String s) {this.s=s; System.out.print(this);}\n        public String toString(){return s;}\n        public void finalize(){System.out.print(this);}\n    } }',solution:["KLK2"]},{code:'import java.util.*;\npublic class Due {\n    static Collection<Due> s=new HashSet<Due>();\n    int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+" "+x.j);}\n    }\n    public static void main(String m){\n        s.add(new Due(1,0));\n        System.out.print(s.size());\n} }  ',solution:["21 20 1"]},{code:'import java.util.*;\npublic class Due {\n    static Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+" "+x.j);}\n} }',solution:["41 01 01 01 0"]},{code:'import java.util.*;\npublic class Due {\n    Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+" "+x.j);}\n} }',solution:{type:"COMPILETIME",row:11,cause:"Non si possono chiamare attributi di istanza da metodi statici"}},{code:'public class Tre {\n    class A {\n        public A(int k) {System.out.print(k);}\n        public void finalize() {System.out.print("A");}\n    }\n    class B extends A {\n        public B(int k) {System.out.print(k);}\n        public void finalize() {System.out.print("A");}\n    }\n    public static void main (String z[]){\n        new Tre();\n    }\n    Tre(){\n        A a=new B(3);\n        B b=(B)a;\n        a=null;\n        b=new B(3);\n        System.gc(); System.runFinalization();\n} }',solution:{type:"COMPILETIME",row:7,cause:"Costruttore della classe Padre non chiamato"}},{code:"#include <iostream>\nusing namespace std;\nint x[] = {-2, -1, 0, 1, 2};\nvoid f(int* x, int y[]) {\n    x[*y] = -y[*x];\n}\nint main(int argc, char** argv) {\n    int * p = x + 1;\n    f(p, p);\n    for (int * s = x; s < x + 5; s++) {\n        cout << *s;\n    }\n    return 0;\n}",solution:["2-1012"]},{code:"public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.println(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(9);\n}}",solution:["849"]},[{question:"int a[] è un oggetto.",solution:!0},{question:"Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.",solution:!1},{question:"Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore vuoto.",solution:!1},{question:"L'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.",solution:!0},{question:"L'esistenza in una classe di un metodo f(int x), e in una sua superclasse di un metodo f(String s) è un esempio di overriding.",solution:!1},{question:"Una classe astratta può implementare al massimo una interfaccia.",solution:!1},{question:"Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.",solution:!1},{question:"In un programma ci possono essere più classi con lo stesso nome.",solution:!0}]]},C=B,E={name:"Esame - 06/2018",id:"esame_2018-06",exercises:[{code:'public class D {\n    static int x=3;\n    public static void main(String[] args) {\n        D a5=new D();   a5.f();\n        a5=new D();     a5.f();\n        System.gc();    System.runFinalization();\n    }\n    void f() {Pippo a = new Pippo2();\n    }\n    public void finalize() { System.out.print("X"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n}}',solution:["X64","X46","46X","4X6","64X","6X4"]},{code:'import java.util.*;\npublic class Sette {\n    Sette(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%8);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+b.size());\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}',solution:["18\\n"]},{code:'import java.util.*;\npublic class Sette {\n    Sette(){\n        Set<String> a = new ArrayList<String>();\n        Set<String> b = new HashSet<String>();\n        for (int k00; k<10; k++) {\n            String s="A"+(k%8);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+b.size());\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}',solution:{type:"COMPILETIME",row:4,cause:"Set non è una superclasse di ArrayList"}},{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(int k[0]){ --k[1]; }\nvoid g(int * k){ (*(--k))++;}\nvoid h(int k[1]){--k;}\nint main() {\n    int k[]={1,2,3,4};\n    f(k+2);\n    g(k+2);\n    h(k+2);\n    for (int i=1;i<4;i++) { cout<<k[i]; }\n    return 0;\n}",solution:["333"]},{code:'public class B {\n    static int x = 2;\n    B() { x++; }\n    B(int y) {x=x+y;}\n    public void finalize(){x--;}\n    public static void main(String[] args) {\n        A a2 = new A();\n        System.out.print(a2);\n        A a1 = new A(2);\n        System.out.print(a1);\n    }\n    public String toString(){return ""+x;}\n}\nclass A extends B {\n    int x=4;\n    A() { x++; }\n    A(int x) {super(x); x++;}\n    public String toString(){return super.toString()+x;}\n}',solution:["3554"]},{code:'public class C {\n    int s=8;\n    void f() {System.out.print("A"+(++s));}\n    public static void main(String[]a){\n        C y=new C();\n        C x=new C() {\n            void f() {System.out.print("B"+(--s));}\n        };\n        x.f();\n        y.f();\n    }\n}',solution:["B7A9"]},{code:"package uno;\npublic class C {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(6);\n    }\n    public static void main (String var){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n    }}\nclass B extends C{\n    void f(int k) {\n        System.out.print(k*2);\n    }}",solution:["612"]},{code:'public class A {//this class is in the A.java file\n    public int x=0;\n    private A() {x=3;}\n    A(int x) {x=6;}\n}\npublic class B1 {//this class is in the B1.java file\n    public static void main(String a[]){\n        A a1=new A();\n        A a2=new A(9);\n        System.out.print(a1.x+" "+a2.x);\n    }\n}',solution:{type:"COMPILETIME",row:8,cause:"Il costruttore con firma A(int) è privato"}},[{question:"Nei metodi statici non è possibile leggere e scrivere le variabili di istanza.",solution:!0},{question:"Se una classe è astratta è permesso usarla per effettuare ereditarietà multipla.",solution:!1},{question:"In una classe ci può essere un solo metodo public static void main.",solution:!1},{question:'Se di un metodo f faccio overriding non è detto che ci siano più "signatures" (firme) di metodi legate al nome.',solution:!0},{question:'Se di un metodo f faccio overloading non è detto che ci siano più "signatures" (firme) di metodi legate al nome.',solution:!1},{question:"Il garbage collector di Java sospende l'esecuzione del programma finchè non ha finito di liberare la memoria.",solution:!1},{question:"In Java non esistono le variabili globali.",solution:!0},{question:"Le variabili dichiarate static non sono modificabili dai metodi privati.",solution:!1}]]},k=E,I={name:"Esame - 07/2018",id:"esame_2018-07",exercises:[{code:'public class B {\n    static int x = 2;\n    B() { x++; }\n    B(int y) {x=x+y;}\n    public void finalize(){x--;}\n    public static void main(String[] args) {\n        A a2 = new A();\n        System.out.print(a2);\n        A a1 = new A(2);\n        System.out.print(a1);\n    }\n    public String toString(){return ""+x;}\n}\nclass A extends B {\n    int x=4;\n    A() { x++; }\n    A(int x) {super(x); x++;}\n    public String toString(){return super.toString()+x;}\n}',solution:["3554"]},{code:"package uno;\npublic class C {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(6);\n    }\n    public static void main (String var){\n        Object z = new B();\n        if (z instanceof uno.C) ((C) z).f(3);\n    }}\nclass B extends C{\n    void f(int k) {\n        System.out.print(k);\n    }}",solution:["36"]},{code:'public class Test3 {\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(5);\n        System.out.println("y="+a.y);\n}   }\nclass A {\n    int y = 4;\n    void m1(int y) { m2(y++); }\n    void m2(int y) { --y; }\n}',solution:["y=4\\n"]},{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid f(int k){ k++; }\nvoid g(int *k){ (*k)++; }\nvoid h(int *k){ --k; }\nint main() {\n    int k[]={3,5,8,13};\n    f(k[2]);\n    g(&k[3]);\n    h(k);\n    for (int i=0; i < 4; i++) { cout << k[i]; }\n    return 0;\n}",solution:["35814"]},{code:'import java.util.*;\npublic class Sette {\n    Sette(){\n        List<String> a = new ArrayList<String>();\n        List<String> b = new HashSet<String>();\n        for (int k=0; k<10;k++) {\n            String s="A"+(k%3);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+" "+b.size());\n    }\n    public static void main(String[] a) { new Sette(); }\n    public static void main(String a) {new Sette(); new Sette();}\n}',solution:{type:"COMPILETIME",row:5,cause:"List non è superclasse di HashSet"}},{code:'public class Sette {\n    Sette(){\n        Collection<String> a = new Arraylist<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0; k<10;k++) {\n            String s="A"+(k%5);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+" "+b.size());\n    }\n    public static void main(String[] a) { new Sette(); }\n}',solution:["10 5"]},{code:'public class A {//this class is in the A.java file\n    public int x=0;\n    A(int x) {x=6;}\n}\npublic class B1 {//this class is in the B1.java file\n    public static void main(String a[]){\n        A a1=new A();\n        A a2=new A(9);\n        System.out.println(a1.x+" "+a2.x);\n    }\n}',solution:{type:"COMPILETIME",row:7,cause:"Non esiste un costruttore di A con firma A()"}},{code:'public class D {\nstatic int x=1;\npublic static void main(String[] args) {\n    D a5=new D();   a5.f();\n    a5=new D();     a5.f();\n    System.gc();    System.runFinalization();\n}\nvoid f() {Pippo a=new Pippo2();\n}\npublic void finalize() { System.out.print("Z"); }\nclass Pippo {\n    int k;\n    Pippo() {k=++x;}\n    public void finalize() { System.out.print(k); }\n}\nclass Pippo2 extends Pippo {\n    Pippo2() {k=x++;}\n}}',solution:["Z24","Z42","2Z4","24Z","42Z","4Z2"]},[{question:"Nei metodi statici non è possibile leggere e scrivere le variabili di istanza.",solution:!0},{question:"Si consideri un attributo x dichiarato come protected nella classe C del package P1; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da C.",solution:!0},{question:"Si consideri un attributo x dichiarato come protected nella classe C del package P1; x è visibile da un'altra classe D appartenente allo stesso package P1 solo se D eredita da C.",solution:!1},{question:"In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.",solution:!1},{question:"Sia I un'interfaccia, e C una classe che la implementa. L'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori a runtime.",solution:!1},{question:"Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.",solution:!1},{question:"Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se inquesta non è disponibile un costruttore con la stessa firma, ciene chiamato il costruttore senza parametri.",solution:!1},{question:"Le variabili dichiarate static non sono modificabili dai metodi privati.",solution:!1}]]},z=I,q={name:"Esame - 09/2018",id:"esame_2018-09",exercises:[{code:"public class Test4 {\n    public static void main(String[] args) {\n        I i = new C(3);\n        System.out.print(i.m(2));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(++x); }\n    public int m(int z) { return x * z; }\n}\nclass C extends B {\n    C(int x) { super(++x); }\n}",solution:["12"]},{code:'public class Test5 {\n    public static void main(String[] args) {\n        B b = new B();\n        A a = new A();\n        J j= b;\n        System.out.println(j.m(5) + b.m("hello"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {\n    int m(String s);\n}\nclass A implements I {\n    int x = 5;\n    public int m(int z) { return x + z; }\n}\nclass B implements J {\n    public int m(String s) { return s.length(); }\n}',solution:{type:"COMPILETIME",row:19,cause:'B non ha il metodo "int m(int)" implementato da J'}},{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x[] = {9, 2, 5, 1};\nint f(int *x, int *y){\n    y[3] = 5;\n    return ++(*x);\n}\nint g(int a){\n    x[0] = 0;\n    return f(&x[a], x);\n}\nint main() {\n    int a = 1;\n    x[a] = a;\n    cout << g(++a);\n    for (int i = 0; i<4; i++) cout << x[i];\n    return 0;\n}",solution:["60165"]},{code:'import java.util.*;\npublic class Test2 {\n    public static void main(String[] args) {\n        A[] a = new A[4];\n        for (int i = 0; i < a.length; i++) {\n            if (i%2 == 0) a[i]= new A(i);\n            else a[i]= new B(i);\n        }\n        ArrayList<A> l = new ArrayList<>(Arrays.asList(a));\n        for(A e: l) System.out.print(e.m(3) + " ");\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return super.m(z) * 2; }\n}',solution:["4 10 6 14 "]},{code:'public class Test3 {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    final void m(C c) { System.out.print("4"); }\n}\nclass B extends A {\n    void m(C c) { System.out.print("5"); }\n    void m(D c) { System.out.print("6"); }\n}\nclass C {}\nclass D extends C {}',solution:{type:"COMPILETIME",row:11,cause:"Non si può fare l'override di un metodo final"}},{code:"import java.util.*;\npublic class Test6 {\n    static final ArrayList<A> l = new ArrayList<>();\n    void doSomething(int x) {\n        for(int i=0; i<x; i++) {\n            B b = new B();\n            b.m();\n        }\n    }\n    void doSomethingElse() {\n        for(int i=0; i<l.size(); i++) {\n            A a = l.get(i);\n            a++;\n        }\n    }\n    public static void main(String[] args) {\n        Test6 t = new Test6();\n        t.doSomething(5);\n        A a = new A();\n        t.doSomethingElse();\n    }\n}\nclass A {\n    A() { Test6.l.add(this); }\n}\nclass B extends A {\n    int x = 0;\n    B() { super(); }\n    void m() { x++; }\n}",solution:{type:"COMPILETIME",row:13,cause:"Non si può usare l'operatore ++ su un oggetto"}},{code:'public class Test8 {\n    public static void main(String[] args) {\n        B b1 = new B(new A());\n        b1.m(3);\n        B b2 = new B();\n        b2.m(5);\n        System.out.println(b2);\n    }}\nclass A {\n    static int x = 3;\n    A() { x++; }\n    void m(int x) { this.x += x; }\n    public String toString() { return "x="+x; }\n}\nclass B {\n    A a;\n    B(A a) { this.a = a; }\n    B() { super(); }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}',solution:{type:"RUNTIME",row:19,cause:"NullPointerException"}},{code:'public class Test7 {\n    public static void main(String[] args) {\n        A a = new A();\n        a.ml(a.y);\n        System.out.print("y="+a.y);\n    }\n}\nclass A {\n    static int y = 10;\n    void ml(int y) {\n        y++;\n        m2();\n    }\n    void m2() { ++y; }\n}',solution:["y=11"]},[{question:"Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.",solution:!1},{question:"Sia data una classe Java A che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.",solution:!0},{question:'Con il termine "autoboxing" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',solution:!1},{question:"In Java la parola chiave this serve a identificare un particolare elemento all’interno di un array.",solution:!1},{question:"Il tipo array int [] è un tipo riferimento, come le classi.",solution:!0},{question:"In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.",solution:!1},{question:"In Java, se B è una sottoclasse di A l'istruzione B a = new A(); genera errore a runtime.",solution:!1},{question:"Una classe Java definita come abstract può essere usata all'interno di gerarchie di classi con ereditarietà multipla.",solution:!1}]]},T=q,O={name:"Esame - 01/2019",id:"esame_2019-01",exercises:[{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x = 11;\nint f(int *x){ return ++(*x); }\nint g(int y){ return f(&y) + f(&x); }\nint main() {\n    int a = 3;\n    cout << g(a);\n    cout << a;\n    cout << x;\n    return 0;\n}",solution:["16312"]},{code:"public class Test2 {\n    public static void main(String[] args) {\n        A a = new B(3);\n        C c = new C(3);\n        System.out.println(a.m() + c.m());\n    }\n}\nclass A {\n    private int x;\n    int m() { return x + 1; }\n}\nclass B extends A {\n    B(int x) { this.x = x; }\n    int m() { return x + 2; }\n}\nclass C {\n    int x = 0;\n    A a = new A();\n    C(int x) { this.x = a.x; }\n    int m() { return x + 3; }\n}",solution:{type:"COMPILETIME",row:13,cause:"B non può accedere ai campi privati di A"}},{code:'public class Test3 {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    void m(C c) { System.out.println("1"); }\n}\nclass B extends A {\n    void m(C c) { System.out.println("2"); }\n}\nclass C extends B {}\nclass D extends A {}',solution:{type:"COMPILETIME",row:4,cause:"Il metodo m richiede un C, non un D"}},{code:"public class Test4 {\n    public static void main(String[] args) {\n        A a = new B(7);\n        I i = a;\n        System.out.println(i.m(4));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x - 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return x - z; }\n}",solution:["2\\n"]},{code:'public class Test5 {\n    public static void main(String[] args) {\n        B b = new B();\n        A a = b;\n        J j = a;\n        System.out.println(j.m(5) + b.m("ciccio"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {}\n\nclass A implements I {\n    int x = 3;\n    public int m(int z) { return x + z; }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}',solution:{type:"COMPILETIME",row:5,cause:"A non implementa J"}},{code:"import java.util.*;\npublic class Test6 {\n    static final int N = 10;\n    public static void main(String[] a) {\n        Test6 t = new Test6();\n        t.m(N);\n    }\n    void m(int n) {\n        List<Integer> la = new ArrayList<>();\n        List<Integer> lb = new ArrayList<>();\n        for(int i=0; i<N; i++)\n            la.add(i);\n        for(int i=0; i<2*N; i++)\n            if (i%2==0) la.add(i);\n        la.addAll(lb);\n        System.out.println(la.size());\n        Set<Integer> s = new HashSet<>();\n        s.addAll(la);\n        System.out.println(s.size());\n    }\n}",solution:["20\\n15\\n"]},{code:'import java.util.*;\npublic class Test7 {\n    public static void main(String[] args) {\n        List<A> ls = new ArrayList<>();\n        ls.add(new A("banana")); ls.add(new A("kiwi")); ls.add(new A("avocado"));\n        Collections.sort(ls);\n        for(A s: ls)\n            System.out.println(a.s.length());\n    }\n}\nclass A implements Comparable<A> {\n    String s;\n    A(String s) { this.s = s; }\n    public int compareTo(A a) {\n        return (s.length() - a.s.length());\n    }\n}',solution:{type:"COMPILETIME",row:8,cause:"a non è definito"}},{code:"public class Test8 {\n    public static void main(String[] args) {\n        A al = new A(5);\n        A a2 = new A(al.m()/2);\n        boolean b = (al == a2);\n        System.out.print(b);\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x; }\n    int m() { return x*2; }\n}",solution:["false"]},[{question:"In una classe possono coesistere più metodi con lo stesso nome ma firme (numero e tipo dei parametri) diverse.",solution:!0},{question:"Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se in questa non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore senza parametri.",solution:!1},{question:"Sia I un'interfaccia, e C una classe che la implementa. L'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori runtime.",solution:!1},{question:"Un attributo x dichiarato come public nella classe C del package P1 è visibile a tutte le altre classi dichiarate in P1, ma non a classi dichiarate in package diversi da P1.",solution:!1},{question:"Un'interfaccia Java normalmente contiene solo la firma dei metodi; la loro definizione (corpo) nell'interfaccia è opzionale.",solution:!0},{question:"Java non ha un distruttore (simile alla destroy del C++) per deallocare esplicitamente e direttamente oggetti in memoria.",solution:!0},{question:'Le istruzioni Object[] x = new Object[10]; x[0] = "elemento"; sono illegali in Java, perchè per gli array non è supportato il polimorfismo; questo è il motivo principale per l\'esistenza del Java Collection Framework, che invece supporta questa funzionalità.',solution:!1},{question:'Con il termine "autoboxing" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',solution:!1}]]},j=O,P={name:"Esame - 02/2019",id:"esame_2019-02",exercises:[{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nint x = 15;\nvoid f(int m){ x += m; m++; }\nint g() { return x; }\nint main() {\n    int x = 5;\n    f(x);\n    cout<<g();\n    cout<<x;\n    return 0;\n}",solution:["205"]},{code:"public class Test2 {\n    static final int MAX = 10;\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(1) ;\n        C c = new C();\n        c.m2(2);\n    }\n}\ninterface I1 {\n    public int m1(int x);\n}\ninterface I2 {\n    public int m2(int x) {\n        return x + MAX;\n    }\n}\nclass A implements I1 {\n    int a = 20;\n    public int m1(int x) {\n        return a + x;\n    }\n}\nclass B extends A {}\nclass C extends B implements I2 {}",solution:{type:"COMPILETIME",row:14,cause:"Implementazione di un metodo in un'interfaccia senza la parola chiave default"}},{code:'public class Test3 {\n    public static void main(String[] args) {\n        B b1=new B(new A()); b1.m(3);\n        B b2 = new B(); b2.m(5);\n        System.out.println(b2);\n    }\n}\nclass A {\nstatic int x = 3;\n    A () { x++; }\n    void m(int x) { this.x += x; }\n    public String toString() { return "x="+x; }\n}\nclass B {\n    A a;\n    B(A a) { this.a = a; }\n    B() { super(); }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}',solution:{type:"RUNTIME",row:18,cause:"NullPointerException"}},{code:'public class Test4 {\n    public static void main(String[] args) {\n        Z a = new Z();\n        a.m1(5);\n        System.out.print("y="+a.y);\n    }\n}\nclass Z {\n    static int y = 2;\n    void m1(int y) { m2(y++); }\n    void m2 (int y) { --y; }\n}',solution:["y=2"]},{code:'public class Test5 {\n    public static void main(String[] args) {\n        A a = new A(); a .m();\n        B b = new C(); b.m1(1); b.m2(2);\n    }\n}\ninterface I {\n    public int ml(int a);\n}\ninterface J {\n    public int m2(int b);\n}\ninterface K extends I,J {}\nclass A {\n    public String m() { return "this is A"; }\n}\nclass B implements K {\n    int x = 500;\n    public int m1(int a) { return a * x; }\n    public int m2(int b) { return b + x; }\n}\nclass C extends A,B {}',solution:{type:"COMPILETIME",row:22,cause:"Non si può estendere da due classi"}},{code:'import java.util.*;\npublic class Test6 {\n    public static void main(String[] args) {\n        A[] a = new A[4];\n        for (int i = 0; i < a.length; i++) {\n        if (i%2 != 0) a[i]= new A(i);\n        else a[i]= new B(i);\n        }\n        List<A> l = new ArrayList<>(Arrays.asList(a));\n        for(A e: l) System.out.print(e.m(5) + " ");\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x + z; }\n}\nclass B extends A {\n    B(int x) { super(x); this.x = x + 2; }\n}',solution:["7 7 9 9 "]},{code:'public class Test7 {\n    public static void main(String[] args) {\n        A a = new A();\n        int r1 = a.m(1);\n        A a2 = new B(new Z());\n        int r2 = a2.m(2);\n        B b = new B(new Z());\n        int r3=b.m(3);\n        System.out.print("" + r1 + " " + r2 + " " + r3);\n    }\n}\nclass Z {}\nclass A {\n    static int val = 7;\n    int m(int x) { val--; return x * val; }\n}\nclass B extends A {\n    Z z;\n    B(Z z) {this.z = z; val++; }\n    int m(int x) { return x * val + 1; }\n}',solution:["6 15 25"]},{code:"public class Test8 {\n    public static void main(String[] args) {\n        A a1 = new A(5);\n        A a2 = new A(3);\n        A a3 = new A(5);\n        System.out.print(a1.equals(a2));\n        System.out.print(a1.equals(a3));\n    }\n}\nclass A {\n    int x = 0;\n    A(int x) {this.x = x;}\n}",solution:["falsefalse"]},[{question:"In Java esiste ereditarietà singola: quindi, un tipo interfaccia può ereditare da un solo tipo interfaccia.",solution:!1},{question:"Le variabili dichiarate static sono modificabili anche da metodi private.",solution:!0},{question:"Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.",solution:!1},{question:"Sia data una classe Java che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.",solution:!0},{question:"Una classe Java definita come abstract può essere usata all'interno di gerarchie di classi con ereditarietà multipla.",solution:!1},{question:"In Java, se B è una sottoclasse di A, l'istruzione B a = new A(); genera errore a runtime.",solution:!1},{question:"Si consideri un attributo x dichiarato come protected nella classe C del package Pl; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da c.",solution:!0},{question:"In Java la parola chiave this serve a identificare un particolare elemento all'interno di un array.",solution:!1}]]},L=P,D={name:"Esame - 06/2019",id:"esame_2019-06",exercises:[{code:'public class Test {\n    public static void main(String[] z) {\n        B b = new B();\n        A a = b;\n        J j = a;\n        System.out.println(j.m(5) + b.m("E.646"));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I { }\nclass A implements I {\n    int x = 3;\n    public in m(int z) { return x + z; }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}',solution:{type:"COMPILETIME",row:5,cause:"Assegnamento errato perchè A non implementa J"}},{code:'import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> ls = new ArrayList<>();\n        ls.add(new A("banana"));\n        ls.add(new A("kiwi"));\n        ls.add(new A("avocado"));\n        Collections.sort(ls);\n        for(A s: ls)\n            System.out.print(s.s.length());\n    }\n}\nclass A implements Comparable<A> {\n    String s;\n    A(String s) { this.s = s; }\n    public int compareTo(A a) {\n        return (s.length() - a.s.length());\n    }\n}',solution:["467"]},{code:'public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        a.m1(5);\n        System.out.println("y="+a.y);\n    }\n}\nclass A {\n    int y = 1;\n    void m1(int y) { m2(y++); }\n    void m2(int y) { --y; }\n}',solution:["y=1\\n"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new C(3);\n        I i = a;\n        System.out.println(i.m(5));\n    }\n}\ninterface I {\n    int m(int z);\n}\nclass A implements I {\n    int x;\n    A(int x) { this.x = x + 1; }\n    public int m(int z) { return x * z; }\n}\nclass B extends A {\n    B(int x) { super(x); }\n    public int m(int z) { return x + z; }\n}\nclass C extends B {\n    C(int x) { super(x); }\n    public int m(int z) { return super.m(z)+2; }\n}",solution:["11\\n"]},{code:'public class G0 {\n    public static void main(String x[]) {\n        G1 g1 = new G1(3);\n        G1 g2 = new G1(4);\n        G2 g3 = new G2(2);\n        G2 g4 = new G2(1);\n        System.out.println(g1.x+" "+g2.x+" "+g3.x+" "+g4.x);\n    }\n    public static void main(String x) {\n        G2 g1 = new G2(2);\n        System.out.println(g1.x);\n    }\n}\nclass G1 {\n    static int x=3;\n    G1(){x--;}\n    G1(int x) {\n        this.x=x;\n    }\n}\nclass G2 extends G1 {\n    int x=0;\n    G2(int x) {\n        this.x=x;\n    }\n}',solution:["2 2 2 1\\n"]},{code:"import java.util.*;\npublic class Test {\n    public static void main(String[] a) {\n        Test t = new Test();\n        System.out.println(t.m(5, 5));\n    }\n    int m(int a, int b) {\n        int m = 3;\n        ArrayList<Integer> l = new ArrayList<>();\n        Set<Integer> s = new HashSet<>();\n        for(int i=0; i<a; i++)\n            l.add(i);\n        for(int i=m; i<b+m; i++)\n            s.add(i);\n        s.addAll(l);\n        return s.size();\n    }\n}",solution:["8\\n"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new B(3);\n        C c = new C(3);\n        System.out.println(a.m() + c.m());\n    }\n}\nclass A {\n    private int x;\n    int m() { return x + 1; }\n}\nclass B extends A {\n    B(int x) { this.x = x; }\n    int m() { return x + 2; }\n}\nclass C {\n    int x = 0;\n    A a = new A();\n    C(int x) { this.x = a.x; }\n    int m() { return x + 3; }\n}",solution:{type:"COMPILETIME",row:13,cause:"Assegnamento errato perchè x è privata"}},{code:"public class Test {\n    public static void main(String[] args) {\n        A a1 = new A(3);\n        A a2 = new A(3);\n        boolean b = (a1 == a2);\n        System.out.println(b);\n    }\n}\nclass A {\n    int x;\n    A(int x) { this.x = x; }\n}",solution:["false\\n"]},[{question:"Il costruttore di una classe chiama automaticamente il costruttore della superclasse con gli stessi parametri; se in questa non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore senza parametri.",solution:!1},{question:"Un metodo generico è un qualsiasi metodo che contiene parametri di tipo Object nella propria definizione.",solution:!1},{question:"In una classe vi possono essere più modi con lo stesso nome ma firme (numero e tipo dei parametri) diverse.",solution:!0},{question:"Se a.equals(b) è false, non può essere a.hashCode==b.hashCode.",solution:!1},{question:"In Java esiste ereditarietà singola: quindi un tipo interfaccia può ereditare da un solo tipo interfaccia.",solution:!1},{question:"Si consideri un attributo x dichiarato come protected nella classe C del package P1; x non è visibile da una classe D appartenente a un package P2, a meno che D non erediti da C.",solution:!0},{question:"Sia I un'interfaccia, e C una classe che la implementa. L'assegnamento C c = new I(); non causa errori in compilazione, ma può generare errori a runtime.",solution:!1},{question:'Le istruzioni Object[] x = new Object[10]; x[0] = "elemento"; sono illegali in Java, perchè per gli array non è supportato il polimorfismo; questo è il motivo principale per l\'esistenza del Java Collection Frameword, che invece supporta questa funzionalità.',solution:!1}]]},N=D,M={name:"Esame - 07/2019",id:"esame_2019-07",exercises:[{code:'public class T2 {\n    public static void main(String[] args) {\n        A1 obj = new B1();\n        A1 par = new B1();\n        System.out.println(obj.m(par));\n    }\n}\nclass A1 {\n    int x = 0;\n    String m(A1 a) {\n        return "a in a";\n    }\n}\nclass B1 extends A1 {\n    String m(A1 a) {\n        return "a in b";\n    }\n    String m(B1 b) {\n        return "b in b";\n    }\n}',solution:["a in b"]},{code:'import java.util.*;\npublic class T5 {\n    T5(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%4);\n            a.add(s);\n            b.add(s);\n        }\n        System.out.println(a.size()+" "+b.size());\n    }\n    public static void main(String[] a) { new T5(); }\n}',solution:["10 4"]},{code:'public class T6 {\n    public static void main(String[] args) {\n        A6 a = new A6();\n        a.m1(5);\n        System.out.println(a.y+" "+a.z);\n    }\n}\nclass A6 {\n    static int z=2;\n    int y = 3;\n    void m1(int y) { m2(y++); }\n    void m2(int z) { --z; }\n}',solution:["3 2"]},{code:'public class T1 {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        J j = b;\n        if (a.equals(b))\n            System.out.println(j.m(5) + b.m("banana"));\n        else\n            System.out.println(j.m(5));\n    }\n    public static void main(String args) {\n        I i = new B();\n        System.out.println(i.m(5)+ ((B)i).m("pera"));\n    }\n}\ninterface I { int m(int z);}\ninterface J extends I {}\nclass A implements I {\n    int x = 2;\n    public int m(int z) {\n        return x + z;\n    }\n    public boolean equals(Object o) {\n        A obj = (A) o;\n        return x == obj.x;\n    }\n}',solution:{type:"COMPILETIME",row:3,cause:"Classe B non definita"}},{code:'public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m("adige");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m("arno");\n        A2 a2 = new C2();\n        C2 c2 = (C2) a2;\n        c2.m("tevere");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=3;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() {}\n}\nclass C2 extends B2 {}',solution:{type:"COMPILETIME",row:20,cause:"Costruttore della superclasse A2 non richiamato"}},{code:'public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m("adige");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m("arno");\n        A2 a2 = new C2();\n        C2 c2 = (C2) a2;\n        c2.m("tevere");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=2;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() { super(n++);}\n}\nclass C2 extends B2 {}',solution:["5006"]},{code:'public class T3 {\n    public static void main(String[] args) {\n        A2 a = new A2(10);\n        a.m("adige");\n        A2 a1 = new C2();\n        C2 c1 = (C2) a1;\n        c1.m("arno");\n        A2 a2 = new B2();\n        C2 c2 = (C2) a2;\n        c2.m("tevere");\n    }\n}\nclass A2 {\n    static int n=0;\n    int x=1;\n    A2(int x) { this.x = x; }\n    public void m(String s) { System.out.print(s.length() * x); }\n}\nclass B2 extends A2 {\n    B2() { super(n++);}\n}\nclass C2 extends B2 {}',solution:{type:"RUNTIME",row:9,cause:"Non si può fare il cast da classe padre a classe figlia"}},{code:'public class T4 {\n    static int x=5;\n    public static void main(String[] args) {\n        System.out.print(x+"[");\n        T4 a5=new T4(); a5.f();\n        a5=new T4();    a5.f();\n        System.gc();    System.runFinalization();\n        System.out.println("]"+x);\n    }\n    void f() {Pippo a=new Pippo2();\n    }\n    public void finalize() { System.out.print("z"); }\n    class Pippo {\n        int k;\n        Pippo() {k=++x;}\n        public void finalize() { System.out.print(k); }\n    }\n    class Pippo2 extends Pippo {\n        Pippo2() {k=x++;}\n    }\n}',solution:["5[86z]9","5[8z6]9","5[68z]9","5[6z8]9","5[z86]9","5[z68]9","5[]986z","5[]98z6","5[]968z","5[]96z8","5[]9z86","5[]9z68"]},[{question:"L'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.",solution:!0},{question:"La parola chiave finally serve a terminare l'esecuzione del programma.",solution:!1},{question:"Java non supporta i puntatori: pertanto, è supportata solo l'allocazione statica della memoria sullo stack e non quella dinamica sullo heap.",solution:!1},{question:"Il garbage collector è una funzionalità del supporto run-time di Java molto utile, in quanto gestisce in maniera automatica la deallocazione di oggetti non pià utilizzati dal programma, semplificando il lavoro del programmatore ed evitandone potenziali errori.",solution:!0},{question:"In Java, se A è una sottoclasse di B, l'istruzione B a = new A(); genera errore a compile time.",solution:!1},{question:"In Java, se B è una sottoclasse di A l'istruzione B a = new A(); genera errore a runtime.",solution:!1},{question:'Con il termine "autoboxing" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',solution:!1},{question:"Un metodo static di una classe C può essere invocato senza che sia stata creata un'istanza (oggetto) di C.",solution:!0}]]},_=M,F={name:"Esame - 09/2019",id:"esame_2019-09",exercises:[{code:"public class Test {\n    public static void main(String[] args) {\n        C obj = new C();\n        int a = c.m1();\n        int b = obj.m3();\n    }\n}\nclass C {\n    static int x = 5;\n    int y = 3;\n    static public int m1() { return y + m2(); }\n    static private int m2() { return x; }\n    public int m3() { return m1(); }\n}",solution:{type:"COMPILETIME",row:11,cause:"Un metodo statico non può usare campi d'istanza"}},{code:'public class Test {\n    static String removeLast(String str) {\n        // ritorna la stringa ottenuta rimuovendo l\'ultimo carattere dal parametro\n        return str.substring(0, str.length() - 1);\n    }\n    public static void main(String[] args) {\n        A obj1 = new A("milano");\n        A obj2 =new B("torino");\n        B obj3 = new B("verona");\n        I obj4 = new B("trento");\n        System.out.println(obj1.m() + "_" + obj2.m() + "_" + obj3.m() + "_" + obj4.m());\n    }\n}\ninterface I {\n    public String m();\n}\nclass A {\n    String s;\n    A(String s) { this.s = s; }\n    public String m() { return Test.removeLast(s); }\n}\npublic class B extends A implements I {\n    B(String s) { super(s); }\n    public String m() { return s; }\n}',solution:{type:"COMPILETIME",row:22,cause:"Più di una classe pubblicha nello stesso file"}},{code:'import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> l = new ArrayList<>();\n        for(int c=0; c<10; c++)\n            if(c%2 == 0) l.add(new A());\n            else if(c%3 == 0) l.add(new B());\n            else l.add(new C());\n        for(A a : l) {\n            a.setAttribute();\n            System.out.println(a);\n        }\n    }\n}\nclass A {\n    String str = null;\n    public void setAttribute() { str = "1"; }\n    public String toString() { return str; }\n}\nclass B extends A {\n    public void setAttribute() { str = "2"; }\n}\nclass C extends A { }',solution:["1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n"]},{code:"public class Test {\n     public static void main(String [] args) {\n         Z z = new Z();\n         System.out.print(z.m());\n     }\n }\n class X {\n     static int s = 1;\n     int x = 3;\n     public int m() { s++; return x; }\n }\n class Y extends X {\n     int y = 4;\n     public int m() { s++; return super.m() + y; }\n }\n class Z extends Y {\n     public int m() { s++; return super.m(); }\n }",solution:["7"]},{code:"public class Test {\n    public static void main(String [] args) {\n        A a = new B();\n        I i = new B();\n        System.out.print(a.m(i));\n    }\n}\ninterface I {\n    public int m(I obj);\n}\nclass A implements I {\n    public int m(I obj) { return 1; }\n    public int m(A obj) { return 2; }\n}\nclass B extends A {\n    public int m(I obj) { return 3; }\n    public int m(A obj) { return 4; }\n    public int m(B obj) { return 5; }\n}",solution:["3"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A obj1 = new B();\n        I obj2 = new C();\n        J obj3 = new B();\n        J obj4 = new D();\n        System.out.println(obj1.toString());\n        System.out.println(obj2.m1());\n        System.out.println(obj3.toString());\n        System.out.println(obj4.m2());\n    }\n}\ninterface I {\n    public int m1();\n}\ninterface J {\n    public int m2();\n}\nclass A {\n    int x = 5;\n    public String toString() { return Integer.toString(x); }\n}\nclass B extends A implements I {\n    int y = 3;\n    public int m1() { return y; }\n}\nclass C extends B implements J {\n    public int m2() {\n        x = x * 2; return x;\n    }\n}\nclass D extends C {\n    int z = 3;\n    public String toString() { return Integer.toString(x * z); }\n}",solution:{type:"COMPILETIME",row:5,cause:"B non implementa J"}},{code:'import java.util.*;\n public class Test {\n     public static void main(String[] args) {\n         String[] a = {"pera", "arancia", "fragola", "mela"};\n         Set<Integer> s = new HashSet<>();\n         List<Integer> l = new ArrayList<>();\n         for(String i: a) {\n             s.add(i.length());\n             l.add(i.length());\n         }\n         System.out.println(s.size() + l.size());\n     }\n }',solution:["6\\n"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        System.out.println(a);\n    }\n}\nclass A {\n    private B b;\n    public String toString() { return b.toString(); }\n}\nclass B {\n    private int x;\n    public String toString() { return Integer.toString(x); }\n}",solution:{type:"RUNTIME",row:9,cause:"NullPointerException: b vale null"}},[{question:"Siano dati i tipi di riferimento A e B, e i tipi generici C<A> e C<B>. Se B è una sottoclasse di A allora C<B> è una sottoclasse di C<A>.",solution:!1},{question:"In Java esiste ereditarietà multipla fra interfacce: un tipo interfaccia può estendere uno o più tipi interfacce.",solution:!0},{question:"Siano dati due oggetti a e b, per i quali il test a.hashCode() == b.hashCode() ritorna true. In questo caso, si può stabilire con certezza che a e b sono identici, cioè puntano allo stesso oggetto.",solution:!1},{question:"Quando una classe C implementa un'interfaccia I, deve fornire (o ereditare) l'implementazione di tutti i metodi di I, oppure dichiarare C come abstract; in caso contrario, viene generato un errore in compilazione.",solution:!0},{question:"Nella gestione delle eccezioni in Java, un blocco try deve essere sempre seguito da almeno un blocco catch.",solution:!0},{question:"In Java la parola chiave final può essere impiegata nella testata del metodo di una classe per impedirne la ridefinizione in una sottoclasse.",solution:!0},{question:"La coercizione di tipo (cast) presente in altri linguaggi quali il C è vietata in Java, in quanto potenziale fonte di errori. Pertanto un'istruzione A a = (B) b; dà sempre un errore in compilazione, indipendentemente dalla definizione dei tipi A e B.",solution:!1},{question:'Quando in Java si parla di un metodo overloaded si fa riferimentoa un metodo "sovraccarico", cioè la cui implementazione genera una compilazione particolarmente pesante.',solution:!1}]]},G=F,J={name:"Esame - 01/2020",id:"esame_2020_01",exercises:[{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        B b = a.m(5);\n        b.m();\n    }\n}\nclass A {\n    B m(int x) { return new B(x); }\n}\nclass B {\n    int x;\n    B(int x) { this.x = x; }\n    void m() { if (x%2 != 0) throw new MyException(); }\n}\nclass MyException extends Exception {}",solution:{type:"COMPILETIME",row:14,cause:"MyException deve essere gestita, non essendo una RuntimeException"}},{code:'public class Test {\n    public static void main(String[] args) {\n        B b1 = new B(new A());\n        b1.m(2);\n        B b2 = new B(new A());\n        b2.m(4);\n        System.out.println(b2);\n    }\n}\nclass A {\n    static int x = 2;\n    void m(int x) { this.x += x; }\n    public String toString() { return "x="+x; }\n}\nclass B {\n    A a = null;\n    B(A a) { this.a = a; }\n    void m(int x) { a.m(x); }\n    public String toString() { return a.toString(); }\n}',solution:["x=8"]},{code:'public class Test {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        J j = b;\n        if (a.equals(b))\n            System.out.println(j.m(1) + b.m("scritto"));\n        else System.out.println(j.m(3));\n    }\n}\ninterface I {\n    int m(int z);\n}\ninterface J extends I {}\n\nclass A implements I {\n    int x = 10;\n    public int m(int z) { return x + z; }\n    public boolean equals(Object o) {\n        A obj = (A) o;\n        return x == obj.x;\n    }\n}\nclass B extends A implements J {\n    public int m(String s) { return s.length(); }\n}',solution:["18"]},{code:'import java.util.*;\n\n public class Test {\n     public static void main(String[] args) {\n         List<A> ls = new ArrayList<>();\n         ls.add(new A("emu")); ls.add(new A("coniglio")); ls.add(new A("pipistrello"));\n         Collections.sort(ls);\n         for(A a: ls)\n             System.out.println(a.s.length());\n     }\n }\n class A implements Comparable<A> {\n     String s;\n     A(String s) { this.s = s; }\n     public int compareTo(A a) {\n         return (s.length() - a.s.length());\n     }\n }',solution:["3\n8\n11\n"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new A();\n        System.out.println(a);\n    }\n}\nclass A {\n    private B b;\n    public String toString() { return b.toString(); }\n}\nclass B {\n    private int x;\n    public String toString() { return Integer.toString(x); }\n}",solution:{type:"RUNTIME",row:9,cause:"NullPointerException, b è null, non si può farne il toString()"}},{code:'public class Test {\n    public static void main(String[] args) {\n        A obj = new B();\n        obj.m(new D());\n    }\n}\nclass A {\n    void m(C c) { System.out.println("g"); }\n}\nclass B extends A {\n    void m(C c) { System.out.println("h"); }\n    void m(D c) { System.out.println("i"); }\n}\nclass C { }\nclass D extends C { }',solution:["h"]},{code:"public class Test {\n    public static void main(String[] args) {\n        A a = new C();\n        a.doSomething();\n        I i1 = new C();\n        i1.aMethod();\n        I i2 = new D();\n        i2.aMethod();\n        B b = new D();\n        ((D) b).aMethod();\n    }\n}\ninterface I {\n    void aMethod();\n}\nclass A implements I {\n    int x;\n    void doSomething() {}\n    public void aMethod() {}\n}\nclass B {}\nclass C extends A {}\nclass D extends B {\n    void aMethod() {}\n}",solution:{type:"COMPILETIME",row:7,cause:"D non è convertibile nel tipo I"}},{code:'import java.util.*;\npublic class Test {\n    public static void main(String[] args) {\n        List<A> l = new ArrayList<>();\n        for(int c=0; c<10; c++)\n            if(c%3 == 0) l.add(new A());\n            else if(c%2 == 0) l.add(new B());\n            else l.add(new C());\n        for(A a: l) {\n            a.setAttribute();\n            System.out.print(a);\n        }\n    }\n}\nclass A {\n    String str = null;\n    public void setAttribute() { str = "0"; }\n    public String toString() { return str; }\n}\nclass B extends A {\n    public void setAttribute() { str = "1"; }\n}\nclass C extends A {}',solution:["0010100010"]},[{question:"La notazione <?> in Java indica che un parametro non è noto all'atto della compilazione del codice e verrà invece richiesto e inserito dall'utente a run-time, durante l'esecuzione del programma.",solution:!1},{question:"La coercizione di tipo (cast) presente in altri linguaggi quali il C è vietata in Java, in quanto potenziale fonte di errori. Pertanto, un'istruzione A a = (B) b; dà sempre un errore in compilazione, indipendentemente dalla definizione dei tipi A e B.",solution:!1},{question:"In Java, se B è una sottoclasse di A l'istruzione B a = new A(); genera errore a runtime.",solution:!1},{question:"Il tipo int[] è un tipo riferimento, come le classi.",solution:!0},{question:"Un tipo generico è una classe che contiene attributi di tipo Object nella propria definizione.",solution:!1},{question:"Le variabili dichiarate static sono modificabili anche da metodi private.",solution:!0},{question:"Sia data una classe Java A che contiene un metodo m(). Una sottoclasse B di A può ridefinire m() una sola volta mediante override e un numero arbitrario di volte mediante overload.",solution:!0},{question:'Con il termine "autoboxing" in Java ci si riferisce alla capacità di una finestra grafica di adattare automaticamente la propria dimensione (in pixel) al proprio contenuto.',solution:!1}]]},U=J,R={name:"Esempio 1",id:"esempio_1",exercises:[{code:'public class Tre {\n    class A {\n        public A(int k) {System.out.print(k);}\n        public void finalize() {System.out.print("C");}\n    }\n    class B extends A {\n        public B(int k) {System.out.print(k);}\n        public void finalize() {System.out.print("B");}\n    }\n    public static void main (String z[]){\n        new Tre();\n    }\n    Tre(){\n        A a=new B(3);\n        B b=(B)a;\n        a=null;\n        b=new B(3);\n        System.gc(); System.runFinalization();\n} }',solution:{type:"COMPILETIME",row:7,cause:"Costruttore superclasse non chiamato"}},{code:"#include <iostream>\nusing namespace std;\nint x[] = {-2, -1, 0, 1, 2};\nvoid f(int* x, int y[]) {\n    x[*y] = -y[*x];\n}\nint main(int argc, char** argv) {\n    int * p = x + 1;\n    f(p, p);\n    for (int * s = x; s < x + 5; s++) {\n        cout << *s;\n    }\n    return 0;\n}",solution:["2-1012"]},{code:"public class F{\n    int x=2;\n    F(int x) {\n        f(x);\n        f();\n        System.out.print(x);\n    }\n    void f() { x++; System.out.print(x);}\n    void f(int x) { this.x++; x--;System.out.print(x);}\n    public static void main(String arg[]) {\n        F x=new F(3);\n}}",solution:["243"]},{code:'class SuperB{\n    SuperB(){ System.out.print("S");}\n    void f() { System.out.print("Z");}\n}\npublic class B extends SuperB {\n    B(){ System.out.print("B");}\n    void f() { System.out.print("C");}\n    public static void main(String args) {System.exit(1);}\n    public static void main(String[] args) {\n        SuperB b=new SuperB();\n        B a=(B)b;\n        a.f();\n}}',solution:{type:"RUNTIME",row:11,cause:"Non si può fare il cast dall'istanza della superclasse ad una sua classe figlia"}},{code:'import java.util.*;\npublic class Due {\n    Collection<Due> s=new HashSet<Due>();\n    static int k,j;\n    Due(int k, int j) {this.k=k; this.j=j;}\n    public boolean equals(Object d){\n        return k-j==((Due)d).j-((Due)d).k;\n    }\n    public int hashCode(){return 1;}\n    public static void main(String[] m){\n        s.add(new Due(1,2)); s.add(new Due(0,1));\n        s.add(new Due(2,1)); s.add(new Due(1,0));\n        System.out.print(s.size());\n        for (Due x:s){System.out.print(x.k+" "+x.j);}\n} }',solution:{type:"COMPILETIME",row:11,cause:"Un metodo statico non può accedere ai campi di istanza della stessa classe"}},{code:'class SuperB{\n    SuperB(){ System.out.print("D");}\n    void f() { System.out.print("Z");}\n}\npublic class B extends SuperB {\n    B(){ System.out.print("E");}\n    void f() { System.out.print("O");}\n    public static void main(String pippo) {System.exit(1);}\n    public static void main(String[] args) {\n        B b=new B();\n        SuperB a=(SuperB)b;\n        a.f();\n}}',solution:["DEO"]},{code:"public class Sei {\n    char f() { return '6'; }\n    public static void main(String e[]) {\n        Sei a = new Sei();\n        Sei b = new Sette();\n        Sette c = new Sette();\n        System.out.print(a.f() + \" \" + b.f() + \" \" + c.f() + \" \");\n        char ch[] = {'C', 'A', 'C', 'A', 'C','A'};\n        int i1 = 0, i2 = 2, i3 = 4;\n        if (a.equals(b)) i1++;\n        if (b.equals(a)) i2++;\n        if (c.equals(b)) i3++;\n        System.out.print(ch[i1] + \" \" + ch[i2] + \" \" + ch[i3]);\n} }\nclass Sette extends Sei {\n    char f() { return '7'; }\n    public boolean equals(Object a) {\n        return (a instanceof Sei);\n    }\n    public int hashCode() { return 3; }\n}",solution:["6 7 7 C A A"]},{code:'import java.util.*;\npublic class Uno {\n    static Collection c=new HashSet();\n    public static void main(String a[]) {\n        Collection c=new LinkedList();\n        Uno u=new Uno();\n        c.add(u); c.add(u); c.add(u);\n        u.f();\n        System.out.print(c.size());\n        System.gc();System.runFinalization();\n    }\n    void f() {\n        A a=new A("S");\n        A b=new A("K");\n        c.add(b);\n    }\n    class A {\n        String s="";\n        A(String s) {this.s=s; System.out.print(this);}\n        public String toString(){return s;}\n        public void finalize(){System.out.print(this);}\n} }',solution:["SK3S"]},[{question:"Il metodo finalize() chiama automaticamente il corrispondente metodo della superclasse.",solution:!1},{question:"L'esistenza in una classe di un metodo f(int x), e in una sua superclasse di un metodo f(String s) è un esempio di overriding.",solution:!1},{question:"L'esistenza in una classe di un metodo f(int x) e di uno f(String s) è un esempio di overloading.",solution:!0},{question:"Se a.equals(b) è vero, deve essere a.hashCode==b.hashCode.",solution:!0},{question:"Se a.equals(b) è falso, deve essere a.hashCode!=b.hashCode.",solution:!1},{question:"Il costruttore chiama automaticamente il costruttore della superclasse con gli stessi parametri. Se nella superclasse non è disponibile un costruttore con la stessa firma, viene chiamato il costruttore vuoto.",solution:!1},{question:"int a[] è un oggetto.",solution:!0},{question:"In un programma ci possono essere due classi chiamate F.",solution:!0}]]},X=R,V={name:"Esempio 2",id:"esempio_2",exercises:[{code:'class B{\n    B(){ System.out.print("C");}\n    void f() { System.out.print("D");}\n}\npublic class A extends B {\n    A(){ System.out.print("A");}\n    void f() { System.out.print("B");}\n    public static void main(String[] args) {\n        A b=new A();\n        B a=(B)b;\n        a.f();\n}}',solution:["CAB"]},{code:'class B{\n    B(){ System.out.print("C");}\n    void f() { System.out.print("D");}\n}\npublic class A extends B {\n    A(){ System.out.print("A");}\n    void f() { System.out.print("B");}\n    public static void main(String k[]) {\n        B b=new B();\n        A a=(A)b;\n        a.f();\n}}',solution:{type:"RUNTIME",row:10,cause:"Non si può fare il casting da superclasse a classe figlia"}},{code:"package esame; // NOTA :QUESTA CLASSE E’ NEL FILE A.java\npublic class A {\n    int x=3;\n    public static void main(String string[]) {\n        (new abcd.B()).f();\n} }\npackage abcd; // NOTA :QUESTA CLASSE E’ NEL FILE B.java\npublic class B extends esame.A{\n    public void f(){\n        System.out.println(++x);\n} }",solution:{type:"COMPILETIME",row:10,cause:"x ha visibilità package e B non può accederci essendo in un package diverso"}},{code:"#include <cstdlib>\n#include <iostream>\nusing namespace std;\nvoid cambia( int m, int n[7]) {\n    (*(n+m))--; m++; n--;\n}\nint main(){\n    int vet[] = {1,2,3,4,5};\n    cambia(vet[4],vet-1);\n    cambia(0,&vet[4]);\n    int i=0;\n    for (i=0;i<5;i++) cout << vet[i];\n    return 0;\n}",solution:["12343"]},{code:"public class A{\n    public static int x;\n    A(int s) {x=s;}\n    void f() {System.out.print(x);}\n    public static void main(String a[]){\n        A b=new A(3);\n        A c=new A(4);\n        b.f();\n        c.f();\n    }\n}",solution:["44"]},{code:'public class B {\n    static int s=0;\n    B(int i){s=i;}\n    public static void main(String[] args) {\n        B b1=new B(3);\n        B b2=new B(3);\n        B b3=new B(1);\n        if (b1.equals(b2)) System.out.print("A");\n            else System.out.print("B");\n        if (b1.s==b3.s) System.out.print("D");\n            else System.out.print("C");\n} }',solution:["BD"]},{code:'class A {\n    A(int x) {System.out.print("X");}\n    A() {System.out.print("Z");}\n    public void finalize() {System.out.print("Y");}\n}\nclass B extends A {\n    B(int x) {System.out.print("A");}\n    B() {System.out.print("C");}\n    public void finalize() {System.out.print("B");}\n}\npublic class Prova {\n    public static void main(String args[]) {\n        A a=new B(3);\n        a = null;\n        System.gc();\n        System.runFinalization();\n    }\n}',solution:["ZAB"]},{code:"package uno;\npublic class A {\n    void f(int k) {\n        System.out.print(k*3);\n    }\n    public static void main (String args[]){\n        Object z = new B();\n        if (z instanceof uno.A) ((A) z).f(3);\n        if (z instanceof uno.B) ((B) z).f(3);\n    }\n}\nclass B extends A{\n    void f(int k) {\n        System.out.print(k*2);\n    }\n}",solution:["66"]},[{question:"Non è possibile istanziare una Collection.",solution:!0},{question:"In una classe ci può essere un solo metodo main.",solution:!1},{question:"In un programma ci può essere un solo metodo public static void main(String[] args).",solution:!1},{question:"In Java esiste ereditarietà multipla.",solution:!1},{question:"Java usa solo la heap perché tutta la memoria è allocata dinamicamente con le new().",solution:!1},{question:"Una Interface non può ereditare da una classe.",solution:!0},{question:"Se di un metodo f faccio overriding non è detto che ci siano più “signatures” (firme) di metodi legate al nome f.",solution:!0},{question:"Se di un metodo f faccio overloading non è detto che ci siano più “signatures” (firme) di metodi legate al nome f.",solution:!1}]]},H=V,$={name:"Esempio 3",id:"esempio_3",exercises:[{code:'class A {\nA(){System.out.print("A");}\nA(int i) {System.out.print("A"+i);}\npublic void finalize() {System.out.print("Z");}\n}\nclass B extends A{\nB(){System.out.print("B");}\nB(int i) {System.out.print("B"+i);}\npublic void finalize() {System.out.println("W");}\n}\npublic class Main {\n    public static void main(String[] args) {\n        new B(3);\n        System.gc();\n    }\n}',solution:["AB3W\\n"]},{code:"#include <iostream.h>\nvoid f(char *x, int *y) {\n    (*y)++;\n    X[*y]++;    }\nvoid g(char x[], int y) {\n    y--;\n    X[y]--; }\nint main(){\n    char x[2];\n    int y;\n    x[0]='D'; x[1]='Q'; y=0;\n    f(x,&y);\n    g(x,y);\n    cout<<x[0]<<\" \"<<x[1]<<\" \"<<y;\n    return 0;   }",solution:{type:"COMPILETIME",row:4,cause:"La variabile X non è definita"}},{code:'class B {\n    int s=0;\n    B(int s) {this.s=s;}\n    public boolean equals(Object o) {\n        return (s==((B)o).s);\n    }   }\nclass A extends B {\n    static int w=0;\n    A() {\n        super(++w);\n    }}\npublic class Main {\n    public static void main(String[] args) {\n        B b1=new B(2);  B b2=new A();  A a=new A();\n        if (b1.equals(b2)) System.out.print("A");\n            else System.out.print("B");\n        if (b1.equals(a)) System.out.print("C");\n            else System.out.print("D");\n  }   }',solution:["BC"]},{code:'public class B {\n    int s=0;\n    B(int i){s=i;}\n    public static void main(String[] args) {\n        B b1=new B(3);\n        B b2=new B(3);\n        B b3=new B(1);\n        if (b1.equals(b3)) System.out.print("A");\n            else System.out.print("B");\n        if (b2.equals(b3)) System.out.print("C");\n            else System.out.print("D");\n    }\n}',solution:["BD"]},{code:"interface A {\n    int f(int x);\n}\nclass B implements A {\n    public int f(int w) {\n        return w*2;\n}}\nclass C extends B {\n    int f(float w){\n        return (int)(w*4);\n}}\npublic class Main {\n    public static void main(String[] args) {\n        A a = new C();\n        System.out.print(a.f(3));\n}}",solution:["6"]},{code:'public class Otto implements Cloneable{\n    int k=0;\n    public Object clone() {\n        Object copia=null;\n        try {\n            copia=super.clone();\n        } catch (CloneNotSupportedException ex) {\n            System.exit(0);\n        }\n        ((Otto)copia).k++;\n        return copia;\n    }\n    public boolean equals(Object x) {\n        if (! (x instanceof Otto)) return false;\n        return k==((Otto)x).k;\n    }\n    public static void main(String[] args) {\n        Otto b= new Otto();\n        Otto c=(Otto)b.clone();\n        Otto d=new Otto();\n        if (b.equals(c)) System.out.print("C");\n        if (c.equals(d)) System.out.print("B");\n        if (d.equals(b)) System.out.print("A");\n}}',solution:["A"]},{code:"public class Main { //Eseguito passando argomenti\n    int MAIN=10;\n    Main(){\n        MAIN++;\n    }\n    void main(String args){\n        MAIN--;\n    }\n    public static void main(String[] args) {\n        Main maiN=new Main();\n        maiN.MAIN++;\n        maiN.main(args[0]);\n        System.out.print(maiN.MAIN);\n    }\n}",solution:["11"]},{code:'import java.util.*;\npublic class Sette {\n    Sette(){\n        Collection<String> a = new ArrayList<String>();\n        Collection<String> b = new HashSet<String>();\n        for (int k=0;k<10;k++) {\n            String s="A"+(k%4);\n            a.add(s);\n            b.add(s);\n        }\n        int count=0;\n        Iterator<String>i=a.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            count++;\n        }\n        i=b.iterator();\n        while (i.hasNext()) {\n            String s=i.next();\n            count++;\n        }\n        System.out.print(count);\n    }\n    public static void main(String[] a) {\n        new Sette();\n}}',solution:["14"]},[{question:"Su qualunque oggetto si può chiamare il metodo clone per ottenerne una copia.",solution:!1},{question:"Il metodo equals applicato a due oggetti della stessa classe restituisce true se i due oggetti hanno lo stesso stato.",solution:!1},{question:"Da un punto di vista di efficienza di esecuzione lo static binding è meglio del dynamic binding.",solution:!0},{question:"A differenza del C, Java usa solo la heap e non lo stack.",solution:!1},{question:"Un oggetto ed un suo clone sono identici.",solution:!1},{question:"Ogni metodo di una classe java può leggere il valore di una qualunque variabile di istanza della classe stessa.",solution:!1},{question:"Esistono metodi che possono essere eseguiti anche senza creare istanze di una classe.",solution:!0},{question:"L' ereditarietà multipla è ammessa per le interfacce.",solution:!1}]]},Z=$,K=[r,c,p,m,g,v,x,y,w,C,k,z,T,j,L,N,_,G,U,X,H,Z],W=K,Q=t("af04"),Y=t("6ac5"),nn=t("4808");t.d(e,"a",(function(){return i})),a["a"].use(s["a"]),function(n){n[n["NONE"]=0]="NONE",n[n["IN_PROGRESS"]=1]="IN_PROGRESS",n[n["FINISHED"]=2]="FINISHED"}(i||(i={}));var en=new s["a"].Store({state:{user:null,drawer:!1,footer:!0,title:"UNITN TRONCHET",stateBar:{visibility:!1,value:0,color:"accent"},test:{timer:{time:0,duration:2400,paused:!1},valutation:{points:{code:1,trueOrFalse:.25},score:0},interval:0,exam:-1,exercise:0,answers:[],showScore:!1,status:i.NONE,fausto:!1},exams:W},getters:{loggedIn:n=>null!==n.user,showDrawer:(n,e)=>e.loggedIn&&n.drawer,timeTitle:n=>{var e=Math.floor(n.test.timer.time/60),t=n.test.timer.time%60;return"".concat(e," : ").concat(t)},scoreTitle:(n,e)=>{var t=n.test.valutation.score,i=e.totalScore;return"".concat(t," / ").concat(i)},currentExam:n=>n.exams[n.test.exam],currentExercise:(n,e)=>e.currentExam.exercises[n.test.exercise],currentAnswer:n=>n.test.answers[n.test.exercise],currentValutation:(n,e)=>Object(nn["d"])(e.currentAnswer,e.currentExercise),exercisesAmount:(n,e)=>e.currentExam.exercises.length,isTrueOrFalseExercise:(n,e)=>Object(Q["c"])(e.currentExercise),points:n=>n.test.valutation.points,outcome:(n,e)=>Object(nn["f"])(e.scoreProgress),toolbarTitle:(n,e)=>{switch(n.test.status){case i.NONE:return n.title;case i.IN_PROGRESS:return e.timeTitle;case i.FINISHED:return e.scoreTitle}},timeProgress:n=>Math.floor(n.test.timer.time/n.test.timer.duration*100),scoreProgress:(n,e)=>Math.floor(n.test.valutation.score/e.totalScore*100),timeFinished:n=>n.test.timer.time===n.test.timer.duration,inProgress:n=>n.test.status===i.IN_PROGRESS,finished:n=>n.test.status===i.FINISHED,totalScore:(n,e)=>e.currentExam.exercises.reduce((n,t)=>n+(Object(Q["a"])(t)?e.points.code:t.length*e.points.trueOrFalse),0)},mutations:{setUser:(n,e)=>{n.user=e},setTitle:(n,e)=>{n.title=e},setFooter:(n,e)=>{n.footer=e},setDrawer:(n,e)=>{n.drawer=e},setStateBarVisibility:(n,e)=>{n.stateBar.visibility=e},setStateBarColor:(n,e)=>{n.stateBar.color=e},setStateBarValue:(n,e)=>{n.stateBar.value=e},setTestStatus:(n,e)=>{n.test.status=e},setTime:(n,e)=>{n.test.timer.time=e},setPaused:(n,e)=>{n.test.timer.paused=e},setCurrentExam:(n,e)=>{n.test.exam=e,n.test.fausto=0===e},setCurrentExercise:(n,e)=>{n.test.exercise=e},setAnswers:(n,e)=>{n.test.answers=e},setTrueOrFalseAnswer:(n,e)=>{var{index:t,value:i}=e;n.test.answers[n.test.exercise].trueOrFalse.splice(t,1,i)},setCodeAnswer:(n,e)=>{n.test.answers.splice(n.test.exercise,1,e)},setShowScore:(n,e)=>{n.test.showScore=e},setScore:(n,e)=>{n.test.valutation.score=e},setInterval:(n,e)=>{n.test.interval=e}},actions:{setUser:(n,e)=>{var{commit:t,dispatch:i}=n;t("setUser",e),e||i("stopExam")},setTitle:(n,e)=>{var{commit:t}=n;t("setTitle",e)},showFooter:n=>{var{commit:e}=n;e("setFooter",!0)},hideFooter:n=>{var{commit:e}=n;e("setFooter",!1)},showDrawer:n=>{var{commit:e}=n;e("setDrawer",!0)},hideDrawer:n=>{var{commit:e}=n;e("setDrawer",!1)},toggleDrawer:n=>{var{state:e,commit:t}=n;t("setDrawer",!e.drawer)},showStateBar:n=>{var{commit:e}=n;e("setStateBarVisibility",!0)},hideStateBar:n=>{var{commit:e}=n;e("setStateBarVisibility",!1)},setStateBarColor:(n,e)=>{var{commit:t}=n;t("setStateBarColor",e)},setStateBarValue:(n,e)=>{var{commit:t}=n;t("setStateBarValue",e)},resetStateBarValue:n=>{var{commit:e}=n;e("setStateBarValue",0)},resetTime:n=>{var{commit:e,dispatch:t}=n;e("setTime",0),t("updateStateBar")},incrementTime:n=>{var{state:e,getters:t,commit:i,dispatch:a}=n;i("setTime",e.test.timer.time+1),a("updateStateBar"),t.timeFinished&&a("finishExam")},pauseTimer:n=>{var{commit:e}=n;e("setPaused",!0)},playTimer:n=>{var{commit:e}=n;e("setPaused",!1)},createAnswers:n=>{var{getters:e,commit:t}=n,i=e.currentExam.exercises,a=i.map(n=>({type:Object(Q["c"])(n)?"TRUE_OR_FALSE":"",output:"",row:0,cause:"",trueOrFalse:Object(Q["c"])(n)?n.map(n=>null):[]}));t("setAnswers",a)},setCurrentExam:(n,e)=>{var{commit:t,dispatch:i}=n;t("setCurrentExam",e),-1!==e&&i("createAnswers")},setCurrentExamFromId:(n,e)=>{var{state:t,dispatch:i}=n,a=t.exams.findIndex(n=>n.id===e);i("setCurrentExam",a)},setCurrentExercise:(n,e)=>{var{commit:t}=n;t("setCurrentExercise",e)},setTrueOrFalseAnswer:(n,e)=>{var{commit:t}=n;t("setTrueOrFalseAnswer",e)},setCodeAnswer:(n,e)=>{var{commit:t}=n;t("setCodeAnswer",e)},showScore:n=>{var{commit:e}=n;e("setShowScore",!0)},showSolutions:n=>{var{commit:e}=n;e("setShowScore",!1)},back:n=>{var{state:e,commit:t}=n;t("setCurrentExercise",e.test.exercise-1)},next:n=>{var{state:e,commit:t}=n;t("setCurrentExercise",e.test.exercise+1)},resetScore:n=>{var{commit:e}=n;e("setScore",0)},setScore:(n,e)=>{var{commit:t}=n;t("setScore",e)},setInterval:(n,e)=>{var{state:t,commit:i}=n;t.test.interval&&clearInterval(t.test.interval),i("setInterval",e)},clearInterval:function(n){function e(e){return n.apply(this,arguments)}return e.toString=function(){return n.toString()},e}(n=>{var{state:e,commit:t}=n;e.test.interval&&clearInterval(e.test.interval),t("setInterval",null)}),updateStateBarOnTime:n=>{var{state:e,dispatch:t}=n,i=e.test.timer.time/e.test.timer.duration*100;switch(t("setStateBarValue",i),i){case 0:t("setStateBarColor","success");break;case 15:t("setStateBarColor","accent");break;case 75:t("setStateBarColor","warning");break;case 95:t("setStateBarColor","error");break}},updateStateBarOnScore:n=>{var{state:e,getters:t,dispatch:i}=n,a=e.test.valutation.score/t.totalScore*100;switch(i("setStateBarValue",a),t.outcome){case nn["a"].INDECENTE:case nn["a"].PESSIMO:i("setStateBarColor","error");break;case nn["a"].BOCCIATO:i("setStateBarColor","warning");break;case nn["a"].PROMOSSO:i("setStateBarColor","accent");break;case nn["a"].GRANDE:i("setStateBarColor","success");break}},updateStateBar:n=>{var{getters:e,dispatch:t}=n;e.inProgress?t("updateStateBarOnTime"):e.finished&&t("updateStateBarOnScore")},startTimer:n=>{var{state:e,dispatch:t}=n;t("resetTime"),t("playTimer"),t("updateStateBar");var i=setInterval(()=>{e.test.timer.paused||t("incrementTime")},1e3);t("setInterval",i)},correctExam:n=>{var{state:e,getters:t,dispatch:i}=n,a=e.test.answers,s=t.currentExam.exercises,o=t.points,r=Object(nn["c"])(a,s,o);i("setScore",r)},refreshExam:n=>{var{getters:e,dispatch:t}=n;t("startExam",e.currentExam.id)},startExam:(n,e)=>{var{commit:t,dispatch:a}=n;a("resetScore"),a("setCurrentExamFromId",e),a("setCurrentExercise",0),a("resetStateBarValue"),a("showStateBar"),t("setTestStatus",i.IN_PROGRESS),a("startTimer")},finishExam:n=>{var{commit:e,dispatch:t}=n;e("setTestStatus",i.FINISHED),t("clearInterval"),t("correctExam"),t("updateStateBar"),t("showScore")},stopExam:n=>{var{commit:e,dispatch:t}=n;e("setTestStatus",i.NONE),t("setCurrentExam",-1),t("hideStateBar"),t("clearInterval")}}});Object(Y["b"])(en);e["b"]=en},"0825":function(n){n.exports=JSON.parse('{"not_found":{"title":"Non trovato"},"login":{"title":"Accedi","button":"ACCEDI","form":{"user":"Utente","password":"Password","required":"{what} è obbligatorio"}},"drawer":{"exams":"Esami"},"exam":{"exercise":"Esercizio ","or":" oppure ","empty":"Vuoto","output":"Output","compiletime":"Compilazione","runtime":"Esecuzione","row":"Riga","caused_by":"Causato da","true":"Vero","false":"Falso","fausto":"Fausto","used_time":"Tempo utilizzato:","percentual_used_time":"Percentuale tempo utilizzato:","score":"Punteggio:","percentual_score":"Percentuale punteggio:","hopeless":"Indecente","terrible":"Pessimo","not_passed":"Bocciato","passed":"Passato","excellent":"Grandissimo","repeat":"RIPETI"},"toast":{"close":"Chiudi","login":"Errore di autentificazione","logout":"Error in logout","copy":"Testo copiato negli appunti!!!"},"confirm_dialog":{"yes":"SI","no":"NO","refresh":"Sicuro di voler ricaricare l\'esame? Il tempo e le risposte inserite saranno resettate.","finish":"Sicuro di voler finire l\'esame? Il tempo non è ancora terminato e non potrai più tornare indietro.","repeat":"Sicuro di voler ripetere l\'esame? Le precedenti risposte saranno resettate e non potrai più vedere il tuo risultato.","exit":"Sicuro di voler uscire? Le risposte inserite saranno cancellate e non potrai più tornare indietro."},"home":{"title":"Home","paragraphs":{"first":"Questo sito è stato pensato per aiutare gli studenti del primo anno di informatica dell\' <b>Università di Trento</b> a prepararsi per la parte teorica dell\'esame <b>Linguaggi di programmazione - modulo 1</b>.","second":"Purtroppo sul sito del professore non si trovano gli esami degli anni precedenti e le prove vecchie che si trovano sul drive di <b>Unitn Informatica</b> sono in buona parte senza soluzioni.","third":"Per fortuna su questo sito, andando sul <b>menu e selezionando un esame</b>, si possono vedere i testi delle prove vecchie trovate sul drive e controllarne anche le <b>soluzioni</b>. Non solo, questo sito permette all\'utente di fare una vera e propria <b>simulazione</b>, che termina dopo un certo tempo e mostra il punteggio ottenuto all\'utente e il confronto fra la sua risposta e la soluzione.","fourth":"Durante la prova che dura 40 minuti il tempo viene mostrato nella barra in alto al posto del titolo e una barra colorata aiuta meglio a capire quanto tempo rimane. Negli esercizi dove viene mostrato del codice si può lasciare in bianco o rispondere con l\'output o con la riga e causa di eventuali errori a runtime o compiletime. Durante l\'esame, nella <b>maggior parte</b> degli esercizi, verrà detto se il codice termina o se ci sono errori. Nella simulazione no, perchè se ci si abitua a non saperlo poi l\'esame sembrerà molto più facile. Negli esercizi con il vero e falso si può lasciare in bianco o dare una risposta.","fifth":"Con i pulsanti in basso si possono scorrere gli esercizi. Sempre fra i pulsanti in basso ci sono quelli di pausa per fermare il tempo, refresh per far ripartire da capo la simulazione e finish per consegnare prima del tempo. Compare un pulsante di copia per copiare i testi degli esercizi con il codice, basta posizionare il mouse sopra al codice.","sixth":"Alla fine dell\'esame viene mostrato il risultato, in termini di punteggio, tempo impiegato e percentuale di risposte corrette. Premendo sull\'icona in alto a destra (non quella del logout) vengono rimostrati gli esercizi, che mostrano la risposta data e la soluzione. Blu vuol dire che la risposta è stata lasciata vuota, rosso che era sbagliata, giallo che è stata sbagliata solo la tipologia di errore (compiletime/runtime) e verde che era giusta. Per vedere la soluzione basta premere l\'icona con l\'occhio.","seventh":"Viene assegnato un punto per gli esercizi col codice corretti, zero se essi sono sbagliati o vuoti. Viene assegnato un quarto di punto per ogni vero e falso, viene tolto un quarto di punto per ognuno di essi che è stato sbagliato. Se si sbaglia il tipo di errore (compiletime o runtime) ma è giusta la riga vengono dati 0.75 punti (sarà così anche all\'esame). Ogni domanda vero e falso dà 0.25 punti se è corretta, 0 se è vuota e toglie 0.25 punti se è sbagliata.","eight":"Nel caso in cui foste interessati alla <b>parte pratica</b> dell\'esame, ho caricato delle soluzioni di esercizi in questa <a href=\\"https://github.com/euberdeveloper/javafx-old-but-gold\\">repository</a>. Gli esercizi sono stati fatti velocemente e in alcuni è stato usato FXML.","ninth":"<b>Per contribuire o vedere il codice sorgente, nel footer, clicca \\"Euber Developer\\" per andare sulla repository di Github</b>"},"alerts":{"pwa":"Ora Unitn Tronchet è diventata una PWA. Questo significa che puoi aggiungerla alla schermata home di Android e che funziona anche offline. (Per provarla offline, chiudere la scheda e riaprirla dopo aver disattivato la connessione)","errors":"È possibile che ci sia qualche errore nei testi o nelle soluzioni, potete scrivermi se li trovate dicendomi esame, esercizio ed errore","swipe":"Nei telefoni, al posto delle frecce avanti e indietro basta fare uno swipe ampio a destra o a sinistra","spaces":"Negli esercizi dove si risponde con un output, scrivere \\\\n per gli a capo e controllare anche che gli spazi siano giusti"}}}')},"2d7d":function(n,e,t){},"3ac3":function(n,e,t){},"3b19":function(n,e,t){"use strict";var i=t("59ca"),a=t.n(i),s=(t("741f"),{apiKey:"AIzaSyDiv4wmKQfkxqT4nt3BLf9XGC1lIxWMias",authDomain:"unitn-tronchet.firebaseapp.com",databaseURL:"https://unitn-tronchet.firebaseio.com",projectId:"unitn-tronchet",storageBucket:"unitn-tronchet.appspot.com",messagingSenderId:"507166536810",appId:"1:507166536810:web:c7ad30bbc2141c54"});e["a"]=a.a.initializeApp(s)},4808:function(n,e,t){"use strict";t.d(e,"c",(function(){return p})),t.d(e,"b",(function(){return i})),t.d(e,"d",(function(){return m})),t.d(e,"e",(function(){return b})),t.d(e,"a",(function(){return a})),t.d(e,"f",(function(){return g}));t("c975");var i,a,s=t("af04");function o(n,e,t){return null===n?0:n===e?t:-t}function r(n,e,t){var i=0;return"TRUE_OR_FALSE"===n.type?n.trueOrFalse.forEach((n,a)=>i+=o(n,e[a].solution,t)):console.error("Error, answer type does not match"),i}function l(n,e,t){return"COMPILETIME"!==n.type&&"RUNTIME"!==n.type||+n.row!==e.row?0:n.type===e.type?t:3*t/4}function c(n,e,t){return"OUTPUT"===n.type&&-1!==e.indexOf(n.output)?t:0}function u(n,e,t){return""===n.type?0:Object(s["b"])(e.solution)?c(n,e.solution,t):l(n,e.solution,t)}function p(n,e,t){var i=0;return e.forEach((e,a)=>{Object(s["c"])(e)?i+=r(n[a],e,t.trueOrFalse):i+=u(n[a],e,t.code)}),i}function d(n,e){if(""===n.type)return i.EMPTY;switch(u(n,e,1)){case 1:return i.RIGHT;case.75:return i.PARTIAL;case 0:return i.WRONG;default:return i.NONE}}function m(n,e){return Object(s["a"])(e)?d(n,e):i.NONE}function b(n,e){return null===n?i.EMPTY:n===e?i.RIGHT:i.WRONG}function g(n){return n<0?a.INDECENTE:n<40?a.PESSIMO:n<60?a.BOCCIATO:n<90?a.PROMOSSO:a.GRANDE}(function(n){n[n["EMPTY"]=0]="EMPTY",n[n["RIGHT"]=1]="RIGHT",n[n["WRONG"]=2]="WRONG",n[n["PARTIAL"]=3]="PARTIAL",n[n["NONE"]=4]="NONE"})(i||(i={})),function(n){n[n["INDECENTE"]=0]="INDECENTE",n[n["PESSIMO"]=1]="PESSIMO",n[n["BOCCIATO"]=2]="BOCCIATO",n[n["PROMOSSO"]=3]="PROMOSSO",n[n["GRANDE"]=4]="GRANDE"}(a||(a={}))},"49f8":function(n,e,t){var i={"./en.json":"edd4","./it.json":"0825"};function a(n){var e=s(n);return t(e)}function s(n){if(!t.o(i,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return i[n]}a.keys=function(){return Object.keys(i)},a.resolve=s,n.exports=a,a.id="49f8"},"6ac5":function(n,e,t){"use strict";t.d(e,"b",(function(){return r})),t.d(e,"a",(function(){return l}));var i,a=t("1da1"),s=(t("59ca"),t("ea7b"),t("3b19"));class o{constructor(n,e){this._user=null,this.app=n,this.auth=this.app.auth(),this.store=e,this.onUserChanged()}get user(){return this._user}set user(n){this.store.dispatch("setUser",n),this._user=n}login(n,e){var t=this;return Object(a["a"])((function*(){t.isLoggedIn()||(yield t.auth.signInWithEmailAndPassword(n,e))}))()}logout(){var n=this;return Object(a["a"])((function*(){yield n.auth.signOut()}))()}isLoggedIn(){return null!==this.user}onUserChanged(){this.auth.onAuthStateChanged(n=>{this.user=n})}}function r(n){i=new o(s["a"],n)}function l(){return i}},"8a23":function(n,e,t){},ac3d:function(n,e,t){},af04:function(n,e,t){"use strict";function i(n){return Array.isArray(n)&&(!n.length||n.every(n=>"string"===typeof n))}function a(n){var e=n;return("COMPILETIME"===e.type||"RUNTIME"===e.type)&&"number"===typeof e.row&&"string"===typeof e.cause}function s(n){var e=n;return"string"===typeof e.code&&(i(e.solution)||a(e.solution))}function o(n){return Array.isArray(n)&&n.every(n=>"string"===typeof n.question&&"boolean"===typeof n.solution)}t.d(e,"b",(function(){return i})),t.d(e,"a",(function(){return s})),t.d(e,"c",(function(){return o}))},b846:function(n,e,t){"use strict";var i=t("3ac3"),a=t.n(i);a.a},cd49:function(n,e,t){"use strict";t.r(e);var i=t("2b0e"),a=t("bb71");t("da64");i["a"].use(a["a"],{iconfont:"md"});var s=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("v-app",[t("app-toolbar"),t("app-drawer"),t("app-content",[t("router-view")],1),t("app-footer")],1)},o=[],r=t("9ab4"),l=t("60a3"),c=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",[t("v-toolbar",{staticClass:"toolbar",attrs:{color:"primary","extension-height":n.heightStateBar,fixed:"","clipped-left":"",dark:"",app:""},scopedSlots:n._u([{key:"extension",fn:function(){return[t("app-state-bar",{attrs:{height:n.heightStateBar}})]},proxy:!0}])},[n.userLogged?t("v-toolbar-side-icon",{on:{click:function(e){return n.toggleDrawer()}}}):n._e(),t("v-spacer"),t("v-toolbar-title",{attrs:{id:"title"}},[t("span",[n._v(n._s(n.title))])]),t("v-spacer"),n.userLogged?t("v-btn",{attrs:{icon:""},on:{click:n.logout}},[t("v-icon",[n._v("exit_to_app")])],1):n._e()],1),t("v-snackbar",{attrs:{color:n.snackbar.color},model:{value:n.snackbar.show,callback:function(e){n.$set(n.snackbar,"show",e)},expression:"snackbar.show"}},[t("span",[n._v(n._s(n.snackbar.message))]),t("v-btn",{attrs:{dark:"",flat:""},on:{click:function(e){n.snackbar.show=!1}}},[n._v(n._s(n.$t("toast.close")))])],1)],1)},u=[],p=(t("e260"),t("ddb0"),function(){var n=this,e=n.$createElement,t=n._self._c||e;return n.show?t("v-flex",{attrs:{white:""}},[t("v-progress-linear",{staticClass:"ma-0",attrs:{color:n.color,height:n.height,value:n.value}})],1):n._e()}),d=[],m=class extends i["a"]{get show(){return this.$store.state.stateBar.visibility}get value(){return this.$store.state.stateBar.value}get color(){return this.$store.state.stateBar.color}};r["__decorate"]([Object(l["c"])({type:Number,required:!0})],m.prototype,"height",void 0),m=r["__decorate"]([l["a"]],m);var b=m,g=b,S=t("2877"),v=t("6544"),f=t.n(v),x=t("0e8f"),h=t("8e36"),y=Object(S["a"])(g,p,d,!1,null,"b4f8477c",null),A=y.exports;f()(y,{VFlex:x["a"],VProgressLinear:h["a"]});var w=t("6ac5"),B=class extends i["a"]{constructor(){super(...arguments),this.snackbar={show:!1,message:this.$root.$i18n.t("toast.logout"),color:"error"},this.heightStateBar=5}get title(){return this.$store.getters.toolbarTitle}get userLogged(){return this.$store.getters.loggedIn}toggleDrawer(){this.$store.dispatch("toggleDrawer")}logout(){Object(w["a"])().logout().catch(n=>{console.log("Error in logging out",n),this.snackbar.show=!0})}};B=r["__decorate"]([Object(l["a"])({components:{AppStateBar:A}})],B);var C=B,E=C,k=(t("e8b7"),t("8336")),I=t("132d"),z=t("2db4"),q=t("9910"),T=t("71d9"),O=t("706c"),j=t("2a7f"),P=Object(S["a"])(E,c,u,!1,null,"53aeb43f",null),L=P.exports;f()(P,{VBtn:k["a"],VIcon:I["a"],VSnackbar:z["a"],VSpacer:q["a"],VToolbar:T["a"],VToolbarSideIcon:O["a"],VToolbarTitle:j["a"]});var D=function(){var n=this,e=n.$createElement,t=n._self._c||e;return n.userLogged?t("v-navigation-drawer",{staticClass:"pb-3",attrs:{clipped:"",fixed:"",app:""},model:{value:n.show,callback:function(e){n.show=e},expression:"show"}},[t("v-list",{attrs:{dense:""}},[n._l(n.items,(function(e){return[e.heading?t("v-layout",{key:e.heading,attrs:{row:"","align-center":""}},[t("v-flex",{attrs:{xs12:""}},[e.heading?t("v-subheader",[n._v(n._s(e.heading))]):n._e()],1)],1):e.children?t("v-list-group",{key:e.text,staticClass:"pa-1",attrs:{"prepend-icon":e.model?e.icon:e["icon-alt"],"append-icon":""},scopedSlots:n._u([{key:"activator",fn:function(){return[t("v-list-tile",[t("v-list-tile-content",[t("v-list-tile-title",[n._v(n._s(e.text))])],1)],1)]},proxy:!0}],null,!0),model:{value:e.model,callback:function(t){n.$set(e,"model",t)},expression:"item.model"}},n._l(e.children,(function(e,i){return t("v-list-tile",{key:i,staticClass:"ml-3",class:{"current-exam":e.selected},on:{click:function(t){return n.$router.push(e.link)}}},[e.icon?t("v-list-tile-action",[t("v-icon",{attrs:{color:"primary"}},[n._v(n._s(e.icon))])],1):n._e(),t("v-list-tile-content",[t("v-list-tile-title",[n._v(n._s(e.text))])],1)],1)})),1):t("v-list-tile",{key:e.text,staticClass:"pa-1",on:{click:function(t){return n.$router.push(e.link)}}},[t("v-list-tile-action",[t("v-icon",{attrs:{color:"warning"}},[n._v(n._s(e.icon))])],1),t("v-list-tile-content",[t("v-list-tile-title",[n._v(n._s(e.text))])],1)],1)]}))],2)],1):n._e()},N=[],M=class extends i["a"]{get exams(){return this.$store.state.exams}get items(){return[{icon:"home",text:"Home",link:"/home"},{icon:"keyboard_arrow_up","icon-alt":"keyboard_arrow_down",text:this.$root.$i18n.t("drawer.exams"),model:!1,children:this.exams.map((n,e)=>({icon:"create",text:n.name,link:"/exam/".concat(n.id),selected:e===this.currentExam}))}]}get show(){return this.$store.getters.showDrawer}set show(n){n?this.$store.dispatch("showDrawer"):this.$store.dispatch("hideDrawer")}get currentExam(){return this.$store.state.test.exam}get userLogged(){return this.$store.getters.loggedIn}};M=r["__decorate"]([l["a"]],M);var _=M,F=_,G=(t("016a"),t("a722")),J=t("8860"),U=t("56b0"),R=t("ba95"),X=t("40fe"),V=t("5d23"),H=t("f774"),$=t("e0c7"),Z=Object(S["a"])(F,D,N,!1,null,"73a30956",null),K=Z.exports;f()(Z,{VFlex:x["a"],VIcon:I["a"],VLayout:G["a"],VList:J["a"],VListGroup:U["a"],VListTile:R["a"],VListTileAction:X["a"],VListTileContent:V["a"],VListTileTitle:V["b"],VNavigationDrawer:H["a"],VSubheader:$["a"]});var W=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("v-content",{staticClass:"content"},[t("v-container",{attrs:{fluid:"","fill-height":""}},[n._t("default")],2)],1)},Q=[],Y=class extends i["a"]{};Y=r["__decorate"]([l["a"]],Y);var nn=Y,en=nn,tn=(t("b846"),t("a523")),an=t("549c"),sn=Object(S["a"])(en,W,Q,!1,null,"3237f82e",null),on=sn.exports;f()(sn,{VContainer:tn["a"],VContent:an["a"]});var rn=function(){var n=this,e=n.$createElement,t=n._self._c||e;return n.show?t("v-footer",{staticClass:"footer",attrs:{color:"primary",app:"",absolute:n.isPhone,height:"55",dark:""}},[t("v-layout",{attrs:{row:!n.isPhone,column:n.isPhone,primary:""}},[t("v-flex",{class:{phoneSpace:n.isPhone},attrs:{"text-xs-center":"","white--text":"","order-xs2":"","order-sm1":"",xs12:""}},[t("a",{staticClass:"link",attrs:{href:"https://en.wikipedia.org/wiki/MIT_License"}},[n._v("© 2019 MIT License Copyright")])]),t("v-flex",{attrs:{"text-xs-center":"","white--text":"","order-xs1":"","order-sm2":"",xs12:""}},[t("a",{staticClass:"link",attrs:{href:"https://github.com/euberdeveloper"}},[n._v("Euber Developer")])])],1)],1):n._e()},ln=[],cn=class extends i["a"]{get show(){return this.$store.state.footer}get isPhone(){return"xs"===this.$vuetify.breakpoint.name}};cn=r["__decorate"]([l["a"]],cn);var un=cn,pn=un,dn=(t("fc3d"),t("553a")),mn=Object(S["a"])(pn,rn,ln,!1,null,"7c7b588c",null),bn=mn.exports;f()(mn,{VFlex:x["a"],VFooter:dn["a"],VLayout:G["a"]});var gn=class extends l["d"]{get user(){return this.$store.state.user}watchUser(n){null===this.user&&this.$router.push("/login")}};r["__decorate"]([Object(l["e"])("user",{immediate:!0})],gn.prototype,"watchUser",null),gn=r["__decorate"]([Object(l["a"])({components:{AppToolbar:L,AppDrawer:K,AppContent:on,AppFooter:bn}})],gn);var Sn=gn,vn=Sn,fn=(t("034f"),t("ef1b"),t("7496")),xn=Object(S["a"])(vn,s,o,!1,null,"aa1382f8",null),hn=xn.exports;f()(xn,{VApp:fn["a"]});t("e6cf");var yn=t("8c4f"),An=()=>Promise.all([t.e("chunk-0c7f4c4c"),t.e("chunk-77b5a4ce")]).then(t.bind(null,"bb51")),wn=()=>t.e("chunk-3dc2ba00").then(t.bind(null,"7d97")),Bn=()=>Promise.all([t.e("chunk-0c7f4c4c"),t.e("chunk-2d0c4c61")]).then(t.bind(null,"3bea")),Cn=()=>t.e("chunk-2d0e5e97").then(t.bind(null,"9703"));i["a"].use(yn["a"]);var En=new yn["a"]({mode:"history",base:"/",routes:[{path:"/exam/:exam",name:"exam",props:n=>({exam:n.params.exam}),component:An},{path:"/login",name:"login",component:Bn},{path:"/home",name:"home",component:wn},{path:"*",name:"not-found",props:n=>({url:n.path}),component:Cn}]}),kn=t("0613"),In=t("1da1"),zn=t("bc3a"),qn=t.n(zn),Tn=t("3b19");function On(){return jn.apply(this,arguments)}function jn(){return jn=Object(In["a"])((function*(){var n=Tn["a"].messaging();n.usePublicVapidKey("BJNXnqmvcKmmXqEXCUPyLFtYhxOOvzQ4fSY2XfbUt3XCAhi8w1fZfRsy-82Mq1oiqRV29iP_kDAek_qzEB1J1p4");try{yield n.requestPermission(),console.debug("Notification permission granted");var e=yield n.getToken();console.debug("Messaging token ",e);try{var t=yield qn.a.post("/api/register-token",{token:e});console.debug(t.data),n.onMessage(n=>{console.debug("New message",n)})}catch(i){console.error("Cloud Messaging Error: "+i.message,i.error)}}catch(i){console.error("Error in initializing cloud messaging ",i)}})),jn.apply(this,arguments)}function Pn(){On()}var Ln=t("0284"),Dn=t.n(Ln),Nn=t("9483");Object(Nn["a"])("".concat("/","service-worker.js"),{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh.")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(n){console.error("Error during service worker registration:",n)}});t("466d"),t("1276");var Mn=t("a925");function _n(){var n=t("49f8"),e={};return n.keys().forEach(t=>{var i=t.match(/([A-Za-z0-9-_]+)\./i);if(i&&i.length>1){var a=i[1];e[a]=n(t)}}),e}i["a"].use(Mn["a"]);var Fn=new Mn["a"]({locale:navigator.language.split("-")[0]||"en",fallbackLocale:"en",messages:_n()});Pn(),i["a"].use(Dn.a,{id:"UA-141587717-1",router:En}),new i["a"]({router:En,store:kn["b"],i18n:Fn,render:n=>n(hn)}).$mount("#app")},e818:function(n,e,t){},e8b7:function(n,e,t){"use strict";var i=t("f5b5"),a=t.n(i);a.a},edd4:function(n){n.exports=JSON.parse('{"not_found":{"title":"Not Found"},"login":{"title":"Log in","button":"LOGIN","form":{"user":"User","password":"Password","required":"{what} is required"}},"drawer":{"exams":"Exams"},"exam":{"exercise":"Exercise ","or":" or ","empty":"Empty","output":"Output","compiletime":"Compiletime","runtime":"Runtime","row":"Row","caused_by":"Caused by","true":"True","false":"False","fausto":"False","used_time":"Used time:","percentual_used_time":"Percentual used time:","score":"Score:","percentual_score":"Percentual score:","hopeless":"Hopeless","terrible":"Terrible","not_passed":"Not passed","passed":"Passed","excellent":"Excellent","repeat":"REPEAT"},"toast":{"close":"Close","login":"Error in login","logout":"Error in logout","copy":"Text copied on the clipboard!!!"},"confirm_dialog":{"yes":"YES","no":"NO","refresh":"Are you sure you want to refresh the exam? Current time and answers will be lost.","finish":"Are you sure you want to finish the exam? Time is not finished and you will not be able to come back.","repeat":"Are you sure you want to repeat the exam? Current answers will be lost and you will not be able to see this result again.","exit":"Are you sure you want to exit? Current time and answers will be lost."},"home":{"title":"Home","paragraphs":{"first":"This site has been done to help <b>UniTN</b> first-year computer-science students to prepare for the theoric part of <b>Programming Languages - module 1</b>\'s exam.","second":"Unfortunately there are not the old exams on the teacher\'s site and the ones that could be find on the <b>Unitn Informatica</b> Drive mostly provide no solution.","third":"This is why I made this site, by <b>opening the menu and selecting an exam</b> you can see the old exams and also <b>check the solution</b>. And that is not all, this site allows the user to experience a real <b>simulation</b> of the exam, which ends after a certain amount of time and shows the result and the comparison between the given and the right answer.","fourth":"During the simulation (wich lasts 40 minutes) the current time is shown instead of the title of the toolbar and there is a coloured progress bar to better understand the amount of remaining time. In the exercise with code the user can keep the answer empty, answer with an output or with the row and the cause of an (compiltime or runtime) error. During the real exam, in most exercises, the student will be already aware if the code will generate an output or cause an error. Not during the simulation, because this will prepare the student to face the ones where that piece of information is not given. In the true-or-false exercises the user can either answer or keep the question empty.","fifth":"With the buttons on the bottom the user can navigate between the exercises. On the bottom, there are a button to pause and play the simulation, on to refresh the simulation and one to finish the simulation before the time ends. When the mouse is over a block of code, a button to copy the text will appear.","sixth":"When the simulation ends, a result in terms of used time, score and percentual used time and score will be displayed. By clicking on the top-right icon the user will be able to see the exercises again, with the given and the right answer. Blue means that the given answer is empty, red that it was wrong, yellow that only the type of error (compiletime - runtime) was wrong and green that it was right. To see the solution the user can click the top-right icon (the one with an eye).","seventh":"If an exercise with code is right the user will be given a point. If it is wrong or empty, zero points. If only the type of error is wrong (compiletime or runtime) then 0.75 points will be given. Unfortunately, the given cause to the error can not be checked by the site. Every true-or-false question gives 0.25 points if it is correct, 0 points if it is empty and -0.25 points if it is wrong.","eight":"If you are interested in the <b>pratic part</b> of the exam, you can find some exercises solutions in this <a href=\\"https://github.com/euberdeveloper/javafx-old-but-gold\\">repository</a>. The exercises have been made quickly and not very well, for some of them has been used FXML.","ninth":"<b>To contribute or see the source code, in the footer, click on \\"EuberDeveloper\\" to be redirected on the Github repository</b>"},"alerts":{"pwa":"Unitn Tronchet has become now a PWA. This means it can be added on the home menu of an Android device and that it works even when offline. (To try it offline, close the tab and return to the index of this site after have disabled the internet connection)","errors":"There could be mistakes in the exercises\' texts or in their solutions. You can write me by specifing also exam, exercise and error.","swipe":"If you are using a phon with portrait mode, being the back and next buttons disappeared, you have to (wide) swipe right and left to navigate between the exercises.","spaces":"In the output answers of exercises with code, write \\\\n for the newlines and do not forget any space."}}}')},ef1b:function(n,e,t){"use strict";var i=t("ac3d"),a=t.n(i);a.a},f5b5:function(n,e,t){},fc3d:function(n,e,t){"use strict";var i=t("2d7d"),a=t.n(i);a.a}});
//# sourceMappingURL=app.f165b232.js.map